/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class XsDeviceConfiguration {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsDeviceConfiguration(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsDeviceConfiguration obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        minimalJNI.delete_XsDeviceConfiguration(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsDeviceConfiguration(int numberOfDevs) {
    this(minimalJNI.new_XsDeviceConfiguration__SWIG_0(numberOfDevs), true);
  }

  public XsDeviceConfiguration() {
    this(minimalJNI.new_XsDeviceConfiguration__SWIG_1(), true);
  }

  public XsDeviceConfiguration(XsDeviceConfiguration other) {
    this(minimalJNI.new_XsDeviceConfiguration__SWIG_2(XsDeviceConfiguration.getCPtr(other), other), true);
  }

  public XsDeviceConfiguration opSet(XsDeviceConfiguration other) {
    return new XsDeviceConfiguration(minimalJNI.XsDeviceConfiguration_opSet(swigCPtr, this, XsDeviceConfiguration.getCPtr(other), other), false);
  }

  public void clear() {
    minimalJNI.XsDeviceConfiguration_clear(swigCPtr, this);
  }

  public boolean empty() {
    return minimalJNI.XsDeviceConfiguration_empty(swigCPtr, this);
  }

  public void readFromMessage(XsMessageClass msg) {
    minimalJNI.XsDeviceConfiguration_readFromMessage(swigCPtr, this, XsMessageClass.getCPtr(msg), msg);
  }

  public void writeToMessage(XsMessageClass msg) {
    minimalJNI.XsDeviceConfiguration_writeToMessage(swigCPtr, this, XsMessageClass.getCPtr(msg), msg);
  }

  public boolean containsDevice(XsDeviceIdClass deviceId) {
    return minimalJNI.XsDeviceConfiguration_containsDevice(swigCPtr, this, XsDeviceIdClass.getCPtr(deviceId), deviceId);
  }

  public XsMtDeviceConfiguration deviceInfo(XsDeviceIdClass deviceId) {
    return new XsMtDeviceConfiguration(minimalJNI.XsDeviceConfiguration_deviceInfo__SWIG_0(swigCPtr, this, XsDeviceIdClass.getCPtr(deviceId), deviceId), false);
  }

  public XsMtDeviceConfiguration XsDeviceConfiguration_deviceInfo(XsDeviceIdClass deviceId) {
    return new XsMtDeviceConfiguration(minimalJNI.XsDeviceConfiguration_XsDeviceConfiguration_deviceInfo__SWIG_0(swigCPtr, this, XsDeviceIdClass.getCPtr(deviceId), deviceId), false);
  }

  public XsMtDeviceConfiguration XsDeviceConfiguration_deviceInfo(SWIGTYPE_p_XsSize busId) {
    return new XsMtDeviceConfiguration(minimalJNI.XsDeviceConfiguration_XsDeviceConfiguration_deviceInfo__SWIG_1(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(busId)), false);
  }

  public XsMtDeviceConfiguration deviceInfo(SWIGTYPE_p_XsSize busId) {
    return new XsMtDeviceConfiguration(minimalJNI.XsDeviceConfiguration_deviceInfo__SWIG_1(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(busId)), false);
  }

  public XsMasterDeviceConfiguration XsDeviceConfiguration_masterInfo() {
    return new XsMasterDeviceConfiguration(minimalJNI.XsDeviceConfiguration_XsDeviceConfiguration_masterInfo(swigCPtr, this), false);
  }

  public XsMasterDeviceConfiguration masterInfo() {
    return new XsMasterDeviceConfiguration(minimalJNI.XsDeviceConfiguration_masterInfo(swigCPtr, this), false);
  }

  public void setNumberOfDevices(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsDeviceConfiguration_setNumberOfDevices(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public SWIGTYPE_p_XsSize numberOfDevices() {
    return new SWIGTYPE_p_XsSize(minimalJNI.XsDeviceConfiguration_numberOfDevices(swigCPtr, this), true);
  }

  public SWIGTYPE_p_XsSize deviceCount() {
    return new SWIGTYPE_p_XsSize(minimalJNI.XsDeviceConfiguration_deviceCount(swigCPtr, this), true);
  }

}
