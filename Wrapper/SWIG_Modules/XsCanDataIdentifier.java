/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class XsCanDataIdentifier {
  public final static XsCanDataIdentifier XCDI_Invalid = new XsCanDataIdentifier("XCDI_Invalid", minimalJNI.XCDI_Invalid_get());
  public final static XsCanDataIdentifier XCDI_Error = new XsCanDataIdentifier("XCDI_Error", minimalJNI.XCDI_Error_get());
  public final static XsCanDataIdentifier XCDI_Warning = new XsCanDataIdentifier("XCDI_Warning", minimalJNI.XCDI_Warning_get());
  public final static XsCanDataIdentifier XCDI_SampleTime = new XsCanDataIdentifier("XCDI_SampleTime", minimalJNI.XCDI_SampleTime_get());
  public final static XsCanDataIdentifier XCDI_GroupCounter = new XsCanDataIdentifier("XCDI_GroupCounter", minimalJNI.XCDI_GroupCounter_get());
  public final static XsCanDataIdentifier XCDI_UtcTime = new XsCanDataIdentifier("XCDI_UtcTime", minimalJNI.XCDI_UtcTime_get());
  public final static XsCanDataIdentifier XCDI_StatusWord = new XsCanDataIdentifier("XCDI_StatusWord", minimalJNI.XCDI_StatusWord_get());
  public final static XsCanDataIdentifier XCDI_Quaternion = new XsCanDataIdentifier("XCDI_Quaternion", minimalJNI.XCDI_Quaternion_get());
  public final static XsCanDataIdentifier XCDI_EulerAngles = new XsCanDataIdentifier("XCDI_EulerAngles", minimalJNI.XCDI_EulerAngles_get());
  public final static XsCanDataIdentifier XCDI_RotationMatrix = new XsCanDataIdentifier("XCDI_RotationMatrix", minimalJNI.XCDI_RotationMatrix_get());
  public final static XsCanDataIdentifier XCDI_DeltaV = new XsCanDataIdentifier("XCDI_DeltaV", minimalJNI.XCDI_DeltaV_get());
  public final static XsCanDataIdentifier XCDI_RateOfTurn = new XsCanDataIdentifier("XCDI_RateOfTurn", minimalJNI.XCDI_RateOfTurn_get());
  public final static XsCanDataIdentifier XCDI_DeltaQ = new XsCanDataIdentifier("XCDI_DeltaQ", minimalJNI.XCDI_DeltaQ_get());
  public final static XsCanDataIdentifier XCDI_Acceleration = new XsCanDataIdentifier("XCDI_Acceleration", minimalJNI.XCDI_Acceleration_get());
  public final static XsCanDataIdentifier XCDI_FreeAcceleration = new XsCanDataIdentifier("XCDI_FreeAcceleration", minimalJNI.XCDI_FreeAcceleration_get());
  public final static XsCanDataIdentifier XCDI_MagneticField = new XsCanDataIdentifier("XCDI_MagneticField", minimalJNI.XCDI_MagneticField_get());
  public final static XsCanDataIdentifier XCDI_Temperature = new XsCanDataIdentifier("XCDI_Temperature", minimalJNI.XCDI_Temperature_get());
  public final static XsCanDataIdentifier XCDI_BaroPressure = new XsCanDataIdentifier("XCDI_BaroPressure", minimalJNI.XCDI_BaroPressure_get());
  public final static XsCanDataIdentifier XCDI_RateOfTurnHR = new XsCanDataIdentifier("XCDI_RateOfTurnHR", minimalJNI.XCDI_RateOfTurnHR_get());
  public final static XsCanDataIdentifier XCDI_AccelerationHR = new XsCanDataIdentifier("XCDI_AccelerationHR", minimalJNI.XCDI_AccelerationHR_get());
  public final static XsCanDataIdentifier XCDI_LatLong = new XsCanDataIdentifier("XCDI_LatLong", minimalJNI.XCDI_LatLong_get());
  public final static XsCanDataIdentifier XCDI_AltitudeEllipsoid = new XsCanDataIdentifier("XCDI_AltitudeEllipsoid", minimalJNI.XCDI_AltitudeEllipsoid_get());
  public final static XsCanDataIdentifier XCDI_PositionEcef_X = new XsCanDataIdentifier("XCDI_PositionEcef_X", minimalJNI.XCDI_PositionEcef_X_get());
  public final static XsCanDataIdentifier XCDI_PositionEcef_Y = new XsCanDataIdentifier("XCDI_PositionEcef_Y", minimalJNI.XCDI_PositionEcef_Y_get());
  public final static XsCanDataIdentifier XCDI_PositionEcef_Z = new XsCanDataIdentifier("XCDI_PositionEcef_Z", minimalJNI.XCDI_PositionEcef_Z_get());
  public final static XsCanDataIdentifier XCDI_Velocity = new XsCanDataIdentifier("XCDI_Velocity", minimalJNI.XCDI_Velocity_get());
  public final static XsCanDataIdentifier XCDI_Latitude = new XsCanDataIdentifier("XCDI_Latitude", minimalJNI.XCDI_Latitude_get());
  public final static XsCanDataIdentifier XCDI_Longitude = new XsCanDataIdentifier("XCDI_Longitude", minimalJNI.XCDI_Longitude_get());
  public final static XsCanDataIdentifier XCDI_GnssReceiverStatus = new XsCanDataIdentifier("XCDI_GnssReceiverStatus", minimalJNI.XCDI_GnssReceiverStatus_get());
  public final static XsCanDataIdentifier XCDI_GnssReceiverDop = new XsCanDataIdentifier("XCDI_GnssReceiverDop", minimalJNI.XCDI_GnssReceiverDop_get());
  public final static XsCanDataIdentifier XCDI_EndOfGroup = new XsCanDataIdentifier("XCDI_EndOfGroup");
  public final static XsCanDataIdentifier XCDI_HighestIdentifier = new XsCanDataIdentifier("XCDI_HighestIdentifier");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static XsCanDataIdentifier swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + XsCanDataIdentifier.class + " with value " + swigValue);
  }

  private XsCanDataIdentifier(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private XsCanDataIdentifier(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private XsCanDataIdentifier(String swigName, XsCanDataIdentifier swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static XsCanDataIdentifier[] swigValues = { XCDI_Invalid, XCDI_Error, XCDI_Warning, XCDI_SampleTime, XCDI_GroupCounter, XCDI_UtcTime, XCDI_StatusWord, XCDI_Quaternion, XCDI_EulerAngles, XCDI_RotationMatrix, XCDI_DeltaV, XCDI_RateOfTurn, XCDI_DeltaQ, XCDI_Acceleration, XCDI_FreeAcceleration, XCDI_MagneticField, XCDI_Temperature, XCDI_BaroPressure, XCDI_RateOfTurnHR, XCDI_AccelerationHR, XCDI_LatLong, XCDI_AltitudeEllipsoid, XCDI_PositionEcef_X, XCDI_PositionEcef_Y, XCDI_PositionEcef_Z, XCDI_Velocity, XCDI_Latitude, XCDI_Longitude, XCDI_GnssReceiverStatus, XCDI_GnssReceiverDop, XCDI_EndOfGroup, XCDI_HighestIdentifier };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

