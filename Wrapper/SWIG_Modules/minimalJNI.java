/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class minimalJNI {
  public final static native int XSTF_X_get();
  public final static native int XSTF_Y_get();
  public final static native int XSTF_Z_get();
  public final static native int XSTF_AccShift_get();
  public final static native int XSTF_AccX_get();
  public final static native int XSTF_AccY_get();
  public final static native int XSTF_AccZ_get();
  public final static native int XSTF_GyrShift_get();
  public final static native int XSTF_GyrX_get();
  public final static native int XSTF_GyrY_get();
  public final static native int XSTF_GyrZ_get();
  public final static native int XSTF_MagShift_get();
  public final static native int XSTF_MagX_get();
  public final static native int XSTF_MagY_get();
  public final static native int XSTF_MagZ_get();
  public final static native int XSTF_Baro_get();
  public final static native int XSTF_Gnss_get();
  public final static native int XSTF_Battery_get();
  public final static native int XSTF_Flash_get();
  public final static native int XSTF_Button_get();
  public final static native int XSTF_Sync_get();
  public final static native void XsSelfTestResult_m_flags_set(long jarg1, XsSelfTestResult jarg1_, int jarg2);
  public final static native int XsSelfTestResult_m_flags_get(long jarg1, XsSelfTestResult jarg1_);
  public final static native long XsSelfTestResult_create(int jarg1);
  public final static native boolean XsSelfTestResult_accX(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_accY(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_accZ(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_gyrX(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_gyrY(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_gyrZ(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_magX(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_magY(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_magZ(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_baro(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_gnss(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_battery(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_flash(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_button(long jarg1, XsSelfTestResult jarg1_);
  public final static native boolean XsSelfTestResult_sync(long jarg1, XsSelfTestResult jarg1_);
  public final static native long new_XsSelfTestResult();
  public final static native void delete_XsSelfTestResult(long jarg1);
  public final static native void XsQuaternion_destruct(long jarg1, XsQuaternionClass jarg1_);
  public final static native int XsQuaternion_empty(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternion_inverse(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long XsQuaternion_normalized(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long XsQuaternion_normalize(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternion_fromEulerAngles(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsEulerClass jarg2_);
  public final static native void XsQuaternion_fromRotationMatrix(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native long XsQuaternion_identity();
  public final static native void XsQuaternion_multiply(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_, long jarg3, XsQuaternionClass jarg3_);
  public final static native void XsQuaternion_swap(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsQuaternion_copy(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native int XsQuaternion_equal(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native int XsQuaternion_compare(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_, long jarg3);
  public final static native long XsQuaternion_dotProduct(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsQuaternionClass_m_w_set(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_m_w_get(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternionClass_m_x_set(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_m_x_get(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternionClass_m_y_set(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_m_y_get(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternionClass_m_z_set(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_m_z_get(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternionClass_m_data_set(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_m_data_get(long jarg1, XsQuaternionClass jarg1_);
  public final static native long new_XsQuaternionClass__SWIG_0(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_XsQuaternionClass__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_XsQuaternionClass__SWIG_2(long jarg1, long jarg2);
  public final static native long new_XsQuaternionClass__SWIG_3(long jarg1);
  public final static native long new_XsQuaternionClass__SWIG_4();
  public final static native long new_XsQuaternionClass__SWIG_5(long jarg1, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native long new_XsQuaternionClass__SWIG_6(long jarg1, XsQuaternionClass jarg1_);
  public final static native long new_XsQuaternionClass__SWIG_7(long jarg1, XsEulerClass jarg1_);
  public final static native long new_XsQuaternionClass__SWIG_8(long jarg1, XsMatrixClass jarg1_);
  public final static native void delete_XsQuaternionClass(long jarg1);
  public final static native long XsQuaternionClass_opSet(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsQuaternionClass_assign__SWIG_0(long jarg1, XsQuaternionClass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsQuaternionClass_assign__SWIG_1(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_opSquareBracket(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsQuaternionClass_data(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_inverse(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_conjugate(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_normalized(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_normalize(long jarg1, XsQuaternionClass jarg1_);
  public final static native boolean XsQuaternionClass_empty(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_fromEulerAngles(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsEulerClass jarg2_);
  public final static native long XsQuaternionClass_fromRotationMatrix(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native long XsQuaternionClass_identity();
  public final static native void XsQuaternionClass_opSelfMultiplication(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsQuaternionClass_multiply(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_, long jarg3, XsQuaternionClass jarg3_);
  public final static native long XsQuaternionClass_w(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_x(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_y(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsQuaternionClass_z(long jarg1, XsQuaternionClass jarg1_);
  public final static native void XsQuaternionClass_swap(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void swap__SWIG_0(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native boolean XsQuaternionClass_opEquals(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native boolean XsQuaternionClass_isEqual(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_, long jarg3);
  public final static native long XsQuaternionClass_dotProduct(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long opSubtract(long jarg1, XsQuaternionClass jarg1_);
  public final static native long opMult__SWIG_0(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsEuler_destruct(long jarg1, XsEulerClass jarg1_);
  public final static native int XsEuler_empty(long jarg1, XsEulerClass jarg1_);
  public final static native void XsEuler_fromQuaternion(long jarg1, XsEulerClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long new_XsEulerClass__SWIG_0();
  public final static native long new_XsEulerClass__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_XsEulerClass__SWIG_2(long jarg1, XsEulerClass jarg1_);
  public final static native long new_XsEulerClass__SWIG_3(long jarg1, XsVectorClass jarg1_);
  public final static native long new_XsEulerClass__SWIG_4(long jarg1, XsQuaternionClass jarg1_);
  public final static native long XsEulerClass_opSet(long jarg1, XsEulerClass jarg1_, long jarg2, XsEulerClass jarg2_);
  public final static native long XsEulerClass_opSquareBracket(long jarg1, XsEulerClass jarg1_, long jarg2);
  public final static native boolean XsEulerClass_empty(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_data(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_fromQuaternion(long jarg1, XsEulerClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native boolean XsEulerClass_opEquals(long jarg1, XsEulerClass jarg1_, long jarg2, XsEulerClass jarg2_);
  public final static native boolean XsEulerClass_opUnequals(long jarg1, XsEulerClass jarg1_, long jarg2, XsEulerClass jarg2_);
  public final static native long XsEulerClass_roll(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_pitch(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_yaw(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_x(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_y(long jarg1, XsEulerClass jarg1_);
  public final static native long XsEulerClass_z(long jarg1, XsEulerClass jarg1_);
  public final static native boolean XsEulerClass_isEqual(long jarg1, XsEulerClass jarg1_, long jarg2, XsEulerClass jarg2_, long jarg3);
  public final static native void delete_XsEulerClass(long jarg1);
  public final static native void XsMatrix_ref(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void XsMatrix_construct(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void XsMatrix_assign(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void XsMatrix_destruct(long jarg1, XsMatrixClass jarg1_);
  public final static native void XsMatrix_copy(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native void XsMatrix_setZero(long jarg1, XsMatrixClass jarg1_);
  public final static native int XsMatrix_empty(long jarg1, XsMatrixClass jarg1_);
  public final static native void XsMatrix_multiplyScalar(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, XsMatrixClass jarg3_);
  public final static native long XsMatrix_offset(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native long XsMatrix_value(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMatrix_setValue(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int XsMatrix_dimensionsMatch(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMatrix_fromQuaternion(long jarg1, XsMatrixClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsMatrix_swap(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native long XsMatrixClass_m_data_get(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_m_rows_get(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_m_cols_get(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_m_stride_get(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_m_flags_get(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_flags(long jarg1, XsMatrixClass jarg1_);
  public final static native long new_XsMatrixClass__SWIG_0(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_XsMatrixClass__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_XsMatrixClass__SWIG_2(long jarg1, long jarg2);
  public final static native long new_XsMatrixClass__SWIG_3(long jarg1);
  public final static native long new_XsMatrixClass__SWIG_4();
  public final static native long new_XsMatrixClass__SWIG_5(long jarg1, XsMatrixClass jarg1_);
  public final static native long new_XsMatrixClass__SWIG_6(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long new_XsMatrixClass__SWIG_7(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long new_XsMatrixClass__SWIG_8(long jarg1, XsQuaternionClass jarg1_);
  public final static native void delete_XsMatrixClass(long jarg1);
  public final static native void XsMatrixClass_setSize__SWIG_0(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsMatrixClass_setSize__SWIG_1(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native long XsMatrixClass_opSet(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native boolean XsMatrixClass_empty(long jarg1, XsMatrixClass jarg1_);
  public final static native void XsMatrixClass_setZero(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_offset(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native long XsMatrixClass_value(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMatrixClass_setValue(long jarg1, XsMatrixClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long XsMatrixClass_opSquareBracket(long jarg1, XsMatrixClass jarg1_, long jarg2);
  public final static native long XsMatrixClass_opMult(long jarg1, XsMatrixClass jarg1_, long jarg2);
  public final static native long XsMatrixClass_fromQuaternion(long jarg1, XsMatrixClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native void XsMatrixClass_zero(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_rows(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_cols(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_stride(long jarg1, XsMatrixClass jarg1_);
  public final static native long XsMatrixClass_data(long jarg1, XsMatrixClass jarg1_);
  public final static native boolean XsMatrixClass_opEquals(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native boolean XsMatrixClass_isEqual(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_, long jarg3);
  public final static native void XsMatrixClass_swap(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native void swap__SWIG_1(long jarg1, XsMatrixClass jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native long opMult__SWIG_1(long jarg1, long jarg2, XsMatrixClass jarg2_);
  public final static native void XsVector_ref(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsVector_construct(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3);
  public final static native void XsVector_assign(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3);
  public final static native void XsVector_destruct(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVector_copy(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVector_dotProduct(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVector_cartesianLength(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVector_normalize(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVector_setZero(long jarg1, XsVectorClass jarg1_);
  public final static native int XsVector_empty(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVector_multiplyScalar(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3, XsVectorClass jarg3_);
  public final static native void XsVector_angularVelocityFromQuaternion(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3, XsQuaternionClass jarg3_);
  public final static native void XsVector_swap(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native void XsVector_fill(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native int XsVector_equal(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsVector_compare(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_, long jarg3);
  public final static native long XsVectorClass_m_data_get(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_m_size_get(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_m_flags_get(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_flags(long jarg1, XsVectorClass jarg1_);
  public final static native long new_XsVectorClass__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsVectorClass__SWIG_1(long jarg1);
  public final static native long new_XsVectorClass__SWIG_2();
  public final static native long new_XsVectorClass__SWIG_3(long jarg1, XsVectorClass jarg1_);
  public final static native long new_XsVectorClass__SWIG_4(long jarg1, long jarg2, long jarg3);
  public final static native long new_XsVectorClass__SWIG_5(long jarg1, long jarg2);
  public final static native long new_XsVectorClass__SWIG_6(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long new_XsVectorClass__SWIG_7(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3);
  public final static native long new_XsVectorClass__SWIG_8(long jarg1, XsQuaternionClass jarg1_, long jarg2);
  public final static native long XsVectorClass_opSet(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native void delete_XsVectorClass(long jarg1);
  public final static native void XsVectorClass_assign(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3);
  public final static native void XsVectorClass_setSize(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native long XsVectorClass_size(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_data(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_opMult(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native void XsVectorClass_opSelfMultiplication(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native long XsVectorClass_at(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native long XsVectorClass_value(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native void XsVectorClass_setValue(long jarg1, XsVectorClass jarg1_, long jarg2, long jarg3);
  public final static native long XsVectorClass_opSquareBracket(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native long XsVectorClass_dotProduct(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVectorClass_cartesianLength(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVectorClass_normalize(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVectorClass_setZero(long jarg1, XsVectorClass jarg1_);
  public final static native boolean XsVectorClass_empty(long jarg1, XsVectorClass jarg1_);
  public final static native long XsVectorClass_angularVelocityFromQuaternion(long jarg1, XsVectorClass jarg1_, long jarg2, XsQuaternionClass jarg2_, long jarg3);
  public final static native long XsVectorClass_opSubtract(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVectorClass_opPlus(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVectorClass_opSubtractEquals(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVectorClass_opPlusEquals(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native boolean XsVectorClass_opEquals(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native boolean XsVectorClass_isEqual(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_, long jarg3);
  public final static native long XsVectorClass_toVector(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVectorClass_zero(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVectorClass_fill(long jarg1, XsVectorClass jarg1_, long jarg2);
  public final static native void XsVectorClass_swap(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native void swap__SWIG_2(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native void XsVectorClass_append(long jarg1, XsVectorClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native void XsVectorClass_clear(long jarg1, XsVectorClass jarg1_);
  public final static native void XsVectorClass_reverse(long jarg1, XsVectorClass jarg1_);
  public final static native long opMult__SWIG_2(long jarg1, long jarg2, XsVectorClass jarg2_);
  public final static native void XsVector3_construct(long jarg1, XsVector3 jarg1_, long jarg2);
  public final static native void XsVector3_assign(long jarg1, XsVector3 jarg1_, long jarg2);
  public final static native void XsVector3_destruct(long jarg1, XsVector3 jarg1_);
  public final static native void XsVector3_copy(long jarg1, XsVectorClass jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native void XsVector3_m_fixedData_set(long jarg1, XsVector3 jarg1_, long jarg2);
  public final static native long XsVector3_m_fixedData_get(long jarg1, XsVector3 jarg1_);
  public final static native long new_XsVector3__SWIG_0();
  public final static native long new_XsVector3__SWIG_1(long jarg1, XsVector3 jarg1_);
  public final static native long new_XsVector3__SWIG_2(long jarg1, XsVectorClass jarg1_);
  public final static native long new_XsVector3__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native long XsVector3_zero3();
  public final static native long XsVector3_opSet__SWIG_0_0(long jarg1, XsVector3 jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsVector3_opSet__SWIG_1(long jarg1, XsVector3 jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native void XsVector3_assign__SWIG_0_0(long jarg1, XsVector3 jarg1_, long jarg2, long jarg3);
  public final static native void XsVector3_assign__SWIG_1(long jarg1, XsVector3 jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void delete_XsVector3(long jarg1);
  public final static native long new_XsUShortVector__SWIG_0();
  public final static native long new_XsUShortVector__SWIG_1(int jarg1, int jarg2, int jarg3);
  public final static native long new_XsUShortVector__SWIG_2(long jarg1);
  public final static native long new_XsUShortVector__SWIG_3(long jarg1, XsUShortVector jarg1_);
  public final static native long XsUShortVector_opSet(long jarg1, XsUShortVector jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native boolean XsUShortVector_opEquals(long jarg1, XsUShortVector jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsUShortVector_size(long jarg1, XsUShortVector jarg1_);
  public final static native int XsUShortVector_at(long jarg1, XsUShortVector jarg1_, int jarg2);
  public final static native int XsUShortVector_opSquareBracket(long jarg1, XsUShortVector jarg1_, long jarg2);
  public final static native long XsUShortVector_data(long jarg1, XsUShortVector jarg1_);
  public final static native void delete_XsUShortVector(long jarg1);
  public final static native void XsMessage_construct(long jarg1, XsMessageClass jarg1_);
  public final static native void XsMessage_constructSized(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessage_copyConstruct(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsMessage_assign(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessage_load(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_destruct(long jarg1, XsMessageClass jarg1_);
  public final static native void XsMessage_copy(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsMessage_swap(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native long XsMessage_dataSize(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessage_constData(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessage_getMessageStart(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessage_getTotalMessageSize(long jarg1, XsMessageClass jarg1_);
  public final static native short XsMessage_getDataByte(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native int XsMessage_getDataShort(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessage_getDataLong(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native java.math.BigInteger XsMessage_getDataLongLong(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native float XsMessage_getDataFloat(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessage_getDataDouble(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessage_getDataF1220(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessage_getDataFP1632(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessage_getDataBuffer(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessage_setDataByte(long jarg1, XsMessageClass jarg1_, short jarg2, long jarg3);
  public final static native void XsMessage_setDataShort(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3);
  public final static native void XsMessage_setDataLong(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_setDataLongLong(long jarg1, XsMessageClass jarg1_, java.math.BigInteger jarg2, long jarg3);
  public final static native void XsMessage_setDataFloat(long jarg1, XsMessageClass jarg1_, float jarg2, long jarg3);
  public final static native void XsMessage_setDataDouble(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataF1220(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataFP1632(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessage_setDataBuffer(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native short XsMessage_computeChecksum(long jarg1, XsMessageClass jarg1_);
  public final static native void XsMessage_recomputeChecksum(long jarg1, XsMessageClass jarg1_);
  public final static native int XsMessage_isChecksumOk(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessage_getHeader(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessage_getConstHeader(long jarg1, XsMessageClass jarg1_);
  public final static native int XsMessage_empty(long jarg1, XsMessageClass jarg1_);
  public final static native void XsMessage_resizeData(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessage_setBusId(long jarg1, XsMessageClass jarg1_, short jarg2);
  public final static native void XsMessage_setMessageId(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessage_insertData(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessage_deleteData(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native short XsMessage_getFPValueSize(int jarg1);
  public final static native void XsMessage_getDataFPValuesById(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessage_setDataFPValuesById(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessage_getDataRealValuesById(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessage_setDataRealValuesById(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int XsMessage_compare(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsMessage_toHexString(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3, XsStringClass jarg3_);
  public final static native void XsMessage_getEndianCorrectData(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsMessage_setEndianCorrectData(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int XS_PREAMBLE_get();
  public final static native int XS_EXTLENCODE_get();
  public final static native int XS_LEN_MSGHEADER_get();
  public final static native int XS_LEN_MSGEXTHEADER_get();
  public final static native int XS_LEN_MSGHEADERCS_get();
  public final static native int XS_LEN_MSGEXTHEADERCS_get();
  public final static native int XS_LEN_CHECKSUM_get();
  public final static native int XS_LEN_UNSIGSHORT_get();
  public final static native int XS_LEN_UNSIGINT_get();
  public final static native int XS_LEN_FLOAT_get();
  public final static native int XS_MAXDATALEN_get();
  public final static native int XS_MAXSHORTDATALEN_get();
  public final static native int XS_MAXMSGLEN_get();
  public final static native int XS_MAXSHORTMSGLEN_get();
  public final static native int XS_MAXGARBAGE_get();
  public final static native void XsMessageHeader_m_preamble_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_preamble_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_busId_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_busId_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_messageId_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_messageId_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_m_length_set(long jarg1, XsMessageHeader jarg1_, short jarg2);
  public final static native short XsMessageHeader_m_length_get(long jarg1, XsMessageHeader jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_high_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_, short jarg2);
  public final static native short XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_high_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_low_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_, short jarg2);
  public final static native short XsMessageHeader_LengthData_ExtendedLength_ExtendedParts_m_low_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg1_);
  public final static native long new_XsMessageHeader_LengthData_ExtendedLength_ExtendedParts();
  public final static native void delete_XsMessageHeader_LengthData_ExtendedLength_ExtendedParts(long jarg1);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_m_length_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_, long jarg2, XsMessageHeader.LengthData.ExtendedLength.ExtendedParts jarg2_);
  public final static native long XsMessageHeader_LengthData_ExtendedLength_m_length_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_);
  public final static native void XsMessageHeader_LengthData_ExtendedLength_m_data_set(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_, long jarg2);
  public final static native long XsMessageHeader_LengthData_ExtendedLength_m_data_get(long jarg1, XsMessageHeader.LengthData.ExtendedLength jarg1_);
  public final static native long new_XsMessageHeader_LengthData_ExtendedLength();
  public final static native void delete_XsMessageHeader_LengthData_ExtendedLength(long jarg1);
  public final static native void XsMessageHeader_LengthData_m_extended_set(long jarg1, XsMessageHeader.LengthData jarg1_, long jarg2, XsMessageHeader.LengthData.ExtendedLength jarg2_);
  public final static native long XsMessageHeader_LengthData_m_extended_get(long jarg1, XsMessageHeader.LengthData jarg1_);
  public final static native void XsMessageHeader_LengthData_m_data_set(long jarg1, XsMessageHeader.LengthData jarg1_, long jarg2);
  public final static native long XsMessageHeader_LengthData_m_data_get(long jarg1, XsMessageHeader.LengthData jarg1_);
  public final static native long new_XsMessageHeader_LengthData();
  public final static native void delete_XsMessageHeader_LengthData(long jarg1);
  public final static native void XsMessageHeader_m_datlen_set(long jarg1, XsMessageHeader jarg1_, long jarg2, XsMessageHeader.LengthData jarg2_);
  public final static native long XsMessageHeader_m_datlen_get(long jarg1, XsMessageHeader jarg1_);
  public final static native long new_XsMessageHeader();
  public final static native void delete_XsMessageHeader(long jarg1);
  public final static native long new_XsMessageClass__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsMessageClass__SWIG_1(long jarg1);
  public final static native long new_XsMessageClass__SWIG_2();
  public final static native long new_XsMessageClass__SWIG_3(long jarg1, long jarg2);
  public final static native long new_XsMessageClass__SWIG_4(long jarg1, XsStringClass jarg1_, boolean jarg2);
  public final static native long new_XsMessageClass__SWIG_5(long jarg1, XsStringClass jarg1_);
  public final static native long new_XsMessageClass__SWIG_6(long jarg1, XsMessageClass jarg1_);
  public final static native void delete_XsMessageClass(long jarg1);
  public final static native void XsMessageClass_clear(long jarg1, XsMessageClass jarg1_);
  public final static native boolean XsMessageClass_empty(long jarg1, XsMessageClass jarg1_);
  public final static native short XsMessageClass_getBusId(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getDataBuffer__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessageClass_getDataBuffer__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native short XsMessageClass_getDataByte__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native short XsMessageClass_getDataByte__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native double XsMessageClass_getDataDouble__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessageClass_getDataDouble__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native float XsMessageClass_getDataFloat__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native float XsMessageClass_getDataFloat__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native double XsMessageClass_getDataF1220__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessageClass_getDataF1220__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native double XsMessageClass_getDataFP1632__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native double XsMessageClass_getDataFP1632__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getDataLong__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessageClass_getDataLong__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native java.math.BigInteger XsMessageClass_getDataLongLong__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native java.math.BigInteger XsMessageClass_getDataLongLong__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native int XsMessageClass_getDataShort__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native int XsMessageClass_getDataShort__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getDataSize(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getMessageId(long jarg1, XsMessageClass jarg1_);
  public final static native int XsMessageClass_toResultValue(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getMessageStart(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_getTotalMessageSize(long jarg1, XsMessageClass jarg1_);
  public final static native boolean XsMessageClass_isChecksumOk(long jarg1, XsMessageClass jarg1_);
  public final static native boolean XsMessageClass_loadFromString(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessageClass_recomputeChecksum(long jarg1, XsMessageClass jarg1_);
  public final static native void XsMessageClass_resizeData(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessageClass_setBusId__SWIG_0(long jarg1, XsMessageClass jarg1_, short jarg2);
  public final static native void XsMessageClass_setBusId__SWIG_1(long jarg1, XsMessageClass jarg1_, int jarg2);
  public final static native void XsMessageClass_setDataBuffer__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsMessageClass_setDataBuffer__SWIG_1(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessageClass_setDataByte__SWIG_0(long jarg1, XsMessageClass jarg1_, short jarg2, long jarg3);
  public final static native void XsMessageClass_setDataByte__SWIG_1(long jarg1, XsMessageClass jarg1_, short jarg2);
  public final static native void XsMessageClass_setDataDouble__SWIG_0(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessageClass_setDataDouble__SWIG_1(long jarg1, XsMessageClass jarg1_, double jarg2);
  public final static native void XsMessageClass_setDataFloat__SWIG_0(long jarg1, XsMessageClass jarg1_, float jarg2, long jarg3);
  public final static native void XsMessageClass_setDataFloat__SWIG_1(long jarg1, XsMessageClass jarg1_, float jarg2);
  public final static native void XsMessageClass_setDataF1220__SWIG_0(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessageClass_setDataF1220__SWIG_1(long jarg1, XsMessageClass jarg1_, double jarg2);
  public final static native void XsMessageClass_setDataFP1632__SWIG_0(long jarg1, XsMessageClass jarg1_, double jarg2, long jarg3);
  public final static native void XsMessageClass_setDataFP1632__SWIG_1(long jarg1, XsMessageClass jarg1_, double jarg2);
  public final static native void XsMessageClass_setDataLong__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessageClass_setDataLong__SWIG_1(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessageClass_setDataLongLong__SWIG_0(long jarg1, XsMessageClass jarg1_, java.math.BigInteger jarg2, long jarg3);
  public final static native void XsMessageClass_setDataLongLong__SWIG_1(long jarg1, XsMessageClass jarg1_, java.math.BigInteger jarg2);
  public final static native void XsMessageClass_setDataShort__SWIG_0(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3);
  public final static native void XsMessageClass_setDataShort__SWIG_1(long jarg1, XsMessageClass jarg1_, int jarg2);
  public final static native void XsMessageClass_setMessageId(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessageClass_opSet(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsMessageClass_deleteData__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessageClass_deleteData__SWIG_1(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native void XsMessageClass_insertData__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2, long jarg3);
  public final static native void XsMessageClass_insertData__SWIG_1(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native short XsMessageClass_getFPValueSize(int jarg1);
  public final static native void XsMessageClass_getDataFPValue__SWIG_0(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessageClass_getDataFPValue__SWIG_1(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void XsMessageClass_getDataFPValue__SWIG_2(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3);
  public final static native double XsMessageClass_getDataFPValue__SWIG_3(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3);
  public final static native double XsMessageClass_getDataFPValue__SWIG_4(long jarg1, XsMessageClass jarg1_, int jarg2);
  public final static native void XsMessageClass_setDataFPValue__SWIG_0(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void XsMessageClass_setDataFPValue__SWIG_1(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void XsMessageClass_setDataFPValue__SWIG_2(long jarg1, XsMessageClass jarg1_, int jarg2, long jarg3);
  public final static native void XsMessageClass_setDataFPValue__SWIG_3(long jarg1, XsMessageClass jarg1_, int jarg2, double jarg3, long jarg4);
  public final static native void XsMessageClass_setDataFPValue__SWIG_4(long jarg1, XsMessageClass jarg1_, int jarg2, double jarg3);
  public final static native boolean XsMessageClass_opEquals(long jarg1, XsMessageClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native long XsMessageClass_rawMessage(long jarg1, XsMessageClass jarg1_);
  public final static native long XsMessageClass_toHexString__SWIG_0(long jarg1, XsMessageClass jarg1_, long jarg2);
  public final static native long XsMessageClass_toHexString__SWIG_1(long jarg1, XsMessageClass jarg1_);
  public final static native long g_xsStringDescriptor_get();
  public final static native void XsString_construct(long jarg1, XsStringClass jarg1_);
  public final static native void XsString_destruct(long jarg1, XsStringClass jarg1_);
  public final static native void XsString_assign(long jarg1, XsStringClass jarg1_, long jarg2, String jarg3);
  public final static native void XsString_assignCharArray(long jarg1, XsStringClass jarg1_, String jarg2);
  public final static native void XsString_resize(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native void XsString_append(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsString_erase(long jarg1, XsStringClass jarg1_, long jarg2, long jarg3);
  public final static native void XsString_push_back(long jarg1, XsStringClass jarg1_, char jarg2);
  public final static native long XsString_utf8Len(long jarg1, XsStringClass jarg1_);
  public final static native int XsString_endsWith(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, int jarg3);
  public final static native int XsString_startsWith(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, int jarg3);
  public final static native int XsString_contains(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, int jarg3, long jarg4);
  public final static native int XsString_empty(long jarg1, XsStringClass jarg1_);
  public final static native void XsString_sort(long jarg1, XsStringClass jarg1_);
  public final static native void XsString_reverse(long jarg1, XsStringClass jarg1_);
  public final static native long XsString_findSubStr(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsString_mid(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, long jarg3, long jarg4);
  public final static native void XsString_replaceAll(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, long jarg3, XsStringClass jarg3_);
  public final static native void XsString_trimmed(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsString_copyToWCharArray(long jarg1, XsStringClass jarg1_, long jarg2, long jarg3);
  public final static native long XsString_utf8At(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native void XsString_assignWCharArray(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native void XsString_push_backWChar(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native long new_XsStringClass__SWIG_0(long jarg1, String jarg2);
  public final static native long new_XsStringClass__SWIG_1(long jarg1);
  public final static native long new_XsStringClass__SWIG_2();
  public final static native long new_XsStringClass__SWIG_3(long jarg1, XsStringClass jarg1_);
  public final static native long new_XsStringClass__SWIG_4(String jarg1, long jarg2, long jarg3);
  public final static native long new_XsStringClass__SWIG_6(String jarg1);
  public final static native long new_XsStringClass__SWIG_7(long jarg1);
  public final static native long new_XsStringClass__SWIG_8(long jarg1);
  public final static native long new_XsStringClass__SWIG_9(long jarg1);
  public final static native String XsStringClass_c_str(long jarg1, XsStringClass jarg1_);
  public final static native long XsStringClass_toStdString(long jarg1, XsStringClass jarg1_);
  public final static native long XsStringClass_opPlus(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsStringClass_toStdWString(long jarg1, XsStringClass jarg1_);
  public final static native boolean XsStringClass_opEquals__SWIG_1(long jarg1, XsStringClass jarg1_, String jarg2);
  public final static native boolean XsStringClass_opEquals__SWIG_2(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsStringClass_opUnequals__SWIG_1(long jarg1, XsStringClass jarg1_, String jarg2);
  public final static native boolean XsStringClass_opUnequals__SWIG_2(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsStringClass_opLeftShift__SWIG_1(long jarg1, XsStringClass jarg1_, String jarg2);
  public final static native long XsStringClass_opLeftShift__SWIG_2(long jarg1, XsStringClass jarg1_, int jarg2);
  public final static native long XsStringClass_opLeftShift__SWIG_3(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsStringClass_opLessThen(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsStringClass_opGreaterThen(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsStringClass_push_back__SWIG_0(long jarg1, XsStringClass jarg1_, char jarg2);
  public final static native boolean XsStringClass_empty(long jarg1, XsStringClass jarg1_);
  public final static native void XsStringClass_append__SWIG_0(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsStringClass_append__SWIG_1(long jarg1, XsStringClass jarg1_, String jarg2);
  public final static native void XsStringClass_append__SWIG_2(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native long XsStringClass_utf8Len(long jarg1, XsStringClass jarg1_);
  public final static native boolean XsStringClass_endsWith__SWIG_0(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, boolean jarg3);
  public final static native boolean XsStringClass_endsWith__SWIG_1(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsStringClass_startsWith__SWIG_0(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, boolean jarg3);
  public final static native boolean XsStringClass_startsWith__SWIG_1(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsStringClass_contains__SWIG_0(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, boolean jarg3, long jarg4);
  public final static native boolean XsStringClass_contains__SWIG_1(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, boolean jarg3);
  public final static native boolean XsStringClass_contains__SWIG_2(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsStringClass_utf8At(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native long XsStringClass_push_back__SWIG_1(long jarg1, XsStringClass jarg1_, long jarg2);
  public final static native void XsStringClass_sort(long jarg1, XsStringClass jarg1_);
  public final static native void XsStringClass_reverse(long jarg1, XsStringClass jarg1_);
  public final static native long XsStringClass_findSubStr(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsStringClass_mid(long jarg1, XsStringClass jarg1_, long jarg2, long jarg3);
  public final static native void XsStringClass_replaceAll(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, long jarg3, XsStringClass jarg3_);
  public final static native long XsStringClass_replacedAll(long jarg1, XsStringClass jarg1_, long jarg2, XsStringClass jarg2_, long jarg3, XsStringClass jarg3_);
  public final static native void XsStringClass_trim(long jarg1, XsStringClass jarg1_);
  public final static native long XsStringClass_trimmed(long jarg1, XsStringClass jarg1_);
  public final static native char XsStringClass_last(long jarg1, XsStringClass jarg1_);
  public final static native void delete_XsStringClass(long jarg1);
  public final static native int XSOT_None_get();
  public final static native int XSOT_HCHDM_get();
  public final static native int XSOT_HCHDG_get();
  public final static native int XSOT_TSS2_get();
  public final static native int XSOT_PHTRO_get();
  public final static native int XSOT_PRDID_get();
  public final static native int XSOT_EM1000_get();
  public final static native int XSOT_PSONCMS_get();
  public final static native int XSOT_HCMTW_get();
  public final static native int XSOT_HEHDT_get();
  public final static native int XSOT_HEROT_get();
  public final static native int XSOT_GPGGA_get();
  public final static native int XSOT_PTCF_get();
  public final static native int XSOT_XSVEL_get();
  public final static native int XSOT_GPZDA_get();
  public final static native int XSOT_GPRMC_get();
  public final static native int XSDEVICEID_PRODUCT_CODE_LEN_get();
  public final static native String XSDEVICEID_PRODUCT_CODE_INIT_get();
  public final static native int XsDeviceId_isLegacyDeviceId(long jarg1, XsDeviceIdClass jarg1_);
  public final static native java.math.BigInteger XsDeviceId_legacyBit(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtiX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtiX0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtiX00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtigX00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtigX10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMti3X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMti6X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMti8X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtw(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtw2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtx(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtx2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isBodyPack(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isBodyPackV1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isBodyPackV2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isWirelessMaster(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwindaX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwindaXStation(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwindaXDongle(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwindaXOem(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwinda2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwinda2Station(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwinda2Dongle(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAwinda2Oem(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isSyncStationX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isSyncStation2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isHilDevice(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isGlove(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_side(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isDot(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isRugged(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isImu(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isVru(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isAhrs(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isGnss(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isRtk(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_hasInternalGnss(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isContainerDevice(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMt(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMti(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtig(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMark4(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMark5(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void XsDeviceId_toString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsDeviceId_fromString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsDeviceId_toDeviceTypeString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_, int jarg3);
  public final static native void XsDeviceId_fromDeviceTypeString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native int XsDeviceId_isValid(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void XsDeviceId_swap(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDeviceId_contains(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDeviceId_isType(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void XsDeviceId_typeName(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsDeviceId_type(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsDeviceId_deviceType(long jarg1, XsDeviceIdClass jarg1_, int jarg2, long jarg3, XsDeviceIdClass jarg3_);
  public final static native void XsDeviceId_deviceTypeMask(long jarg1, XsDeviceIdClass jarg1_, int jarg2, long jarg3, XsDeviceIdClass jarg3_);
  public final static native int XsDeviceId_isMtMk4(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_X(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_3(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_7(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_20(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_30(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_X00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_100(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_200(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_300(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_400(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_500(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_600(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_700(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_710(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_800(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk4_900(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_20(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_30(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_X00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_100(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_200(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_300(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceId_isMtMk5_710(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long new_XsDeviceIdClass__SWIG_0(String jarg1, int jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long new_XsDeviceIdClass__SWIG_1(String jarg1, int jarg2, long jarg3, java.math.BigInteger jarg4);
  public final static native long new_XsDeviceIdClass__SWIG_2(java.math.BigInteger jarg1);
  public final static native long new_XsDeviceIdClass__SWIG_3();
  public final static native long new_XsDeviceIdClass__SWIG_4(long jarg1, XsDeviceIdClass jarg1_, int jarg2);
  public final static native long new_XsDeviceIdClass__SWIG_5(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_opSet(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native java.math.BigInteger XsDeviceIdClass_legacyBit();
  public final static native boolean XsDeviceIdClass_isLegacyDeviceId(long jarg1, XsDeviceIdClass jarg1_);
  public final static native java.math.BigInteger XsDeviceIdClass_toInt(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_productCode(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_productVariant(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceIdClass_hardwareVersion(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceIdClass_subDevice(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_legacyDeviceId(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtiX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtiX0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtiX00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtigX00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtigX10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMti3X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMti6X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMti8X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isGlove(long jarg1, XsDeviceIdClass jarg1_);
  public final static native int XsDeviceIdClass_side(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isDot(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isRugged(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtw(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtw2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtx(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtx2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isBodyPack(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isBodyPackV1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isBodyPackV2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isWirelessMaster(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwindaX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwindaXStation(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwindaXDongle(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwindaXOem(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwinda2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwinda2Station(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwinda2Dongle(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAwinda2Oem(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isSyncStationX(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isSyncStation2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isHilDevice(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isImu(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isVru(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isAhrs(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isGnss(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isRtk(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_hasInternalGnss(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isContainerDevice(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMt(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMti(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtig(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMark4(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMark5(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_toString(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void XsDeviceIdClass_fromString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsDeviceIdClass_toDeviceTypeString__SWIG_0(long jarg1, XsDeviceIdClass jarg1_, boolean jarg2);
  public final static native long XsDeviceIdClass_toDeviceTypeString__SWIG_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void XsDeviceIdClass_fromDeviceTypeString(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsDeviceIdClass_isValid(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_contains(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_isType(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_typeName(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_type(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_deviceType__SWIG_0(long jarg1, XsDeviceIdClass jarg1_, boolean jarg2);
  public final static native long XsDeviceIdClass_deviceType__SWIG_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native long XsDeviceIdClass_deviceTypeMask__SWIG_0(long jarg1, XsDeviceIdClass jarg1_, boolean jarg2);
  public final static native long XsDeviceIdClass_deviceTypeMask__SWIG_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_opEquals(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_opUnequals(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_opLessThen(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_opLessEquals(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_opGreaterThen(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_opGreaterEquals(long jarg1, XsDeviceIdClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDeviceIdClass_isMtMk4(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_X(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_2(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_3(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_7(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_20(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_30(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_X00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_100(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_200(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_300(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_400(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_500(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_600(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_700(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_710(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_800(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk4_900(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_X0(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_10(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_20(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_30(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_X00(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_100(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_200(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_300(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDeviceIdClass_isMtMk5_710(long jarg1, XsDeviceIdClass jarg1_);
  public final static native void delete_XsDeviceIdClass(long jarg1);
  public final static native long opLeftShift(long jarg1, XsStringClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long makeNiceProductCode__SWIG_0(String jarg1, int jarg2);
  public final static native long makeNiceProductCode__SWIG_1(String jarg1);
  public final static native long makeNiceProductCode__SWIG_2(long jarg1, int jarg2);
  public final static native long makeNiceProductCode__SWIG_3(long jarg1);
  public final static native long new_XsArrayDescriptor();
  public final static native void delete_XsArrayDescriptor(long jarg1);
  public final static native void XsArray_construct(long jarg1, long jarg2, XsArrayDescriptor jarg2_, long jarg3, long jarg4);
  public final static native void XsArray_copyConstruct(long jarg1, long jarg2);
  public final static native void XsArray_destruct(long jarg1);
  public final static native void XsArray_assign(long jarg1, long jarg2, long jarg3);
  public final static native void XsArray_resize(long jarg1, long jarg2);
  public final static native void XsArray_reserve(long jarg1, long jarg2);
  public final static native void XsArray_copy(long jarg1, long jarg2);
  public final static native void XsArray_append(long jarg1, long jarg2);
  public final static native void XsArray_insert(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void XsArray_erase(long jarg1, long jarg2, long jarg3);
  public final static native void XsArray_swap(long jarg1, long jarg2);
  public final static native int XsArray_compare(long jarg1, long jarg2);
  public final static native int XsArray_compareSet(long jarg1, long jarg2);
  public final static native int XsArray_comparePredicate(long jarg1, long jarg2, long jarg3);
  public final static native long XsArray_find(long jarg1, long jarg2);
  public final static native long XsArray_findPredicate(long jarg1, long jarg2, long jarg3);
  public final static native int XsArray_empty(long jarg1);
  public final static native long XsArray_at(long jarg1, long jarg2);
  public final static native long XsArray_atIndex(long jarg1, long jarg2);
  public final static native void XsArray_removeDuplicates(long jarg1);
  public final static native void XsArray_removeDuplicatesPredicate(long jarg1, long jarg2);
  public final static native void XsArray_rawCopy(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void XsArray_sort(long jarg1);
  public final static native void XsArray_reverse(long jarg1);
  public final static native long XsArray_m_data_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_size_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_reserved_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_flags_get(long jarg1, XsArray jarg1_);
  public final static native long XsArray_m_descriptor_get(long jarg1, XsArray jarg1_);
  public final static native long new_XsArray__SWIG_0(long jarg1, XsArrayDescriptor jarg1_, long jarg2, long jarg3);
  public final static native long new_XsArray__SWIG_1(long jarg1, XsArray jarg1_);
  public final static native long new_XsArray__SWIG_2(long jarg1, XsArrayDescriptor jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void delete_XsArray(long jarg1);
  public final static native long XsArray_opSet(long jarg1, XsArray jarg1_, long jarg2, XsArray jarg2_);
  public final static native long new_XsPortInfoArray__SWIG_0(long jarg1, long jarg2, XsPortInfoClass jarg2_);
  public final static native long new_XsPortInfoArray__SWIG_1(long jarg1);
  public final static native long new_XsPortInfoArray__SWIG_2();
  public final static native long new_XsPortInfoArray__SWIG_3(long jarg1, XsPortInfoArray jarg1_);
  public final static native long new_XsPortInfoArray__SWIG_4(long jarg1, XsPortInfoClass jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsPortInfoArray(long jarg1);
  public final static native void XsPortInfoArray_clear(long jarg1, XsPortInfoArray jarg1_);
  public final static native boolean XsPortInfoArray_opEquals(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoArray jarg2_);
  public final static native boolean XsPortInfoArray_opUnequals(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoArray jarg2_);
  public final static native void XsPortInfoArray_reserve(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native long XsPortInfoArray_reserved(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_descriptor(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_begin(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_end(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_rbegin(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_rend(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_opSquareBracket(long jarg1, XsPortInfoArray jarg1_, int jarg2);
  public final static native long XsPortInfoArray_value(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native long XsPortInfoArray_first(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_last(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_at(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_insert__SWIG_0(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3);
  public final static native void XsPortInfoArray_insert__SWIG_1(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, long jarg4);
  public final static native void XsPortInfoArray_insert__SWIG_2(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3);
  public final static native void XsPortInfoArray_insert__SWIG_3(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3);
  public final static native void XsPortInfoArray_insert__SWIG_4(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, long jarg4);
  public final static native void XsPortInfoArray_insert__SWIG_5(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, long jarg4);
  public final static native void XsPortInfoArray_push_back(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native void XsPortInfoArray_pop_back__SWIG_0(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_pop_back__SWIG_1(long jarg1, XsPortInfoArray jarg1_);
  public final static native void XsPortInfoArray_push_front(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native void XsPortInfoArray_pop_front__SWIG_0(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_pop_front__SWIG_1(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_size(long jarg1, XsPortInfoArray jarg1_);
  public final static native void XsPortInfoArray_erase__SWIG_0(long jarg1, XsPortInfoArray jarg1_, long jarg2, long jarg3);
  public final static native void XsPortInfoArray_erase__SWIG_1(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native long XsPortInfoArray_erase__SWIG_2(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native long XsPortInfoArray_erase__SWIG_3(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_assign(long jarg1, XsPortInfoArray jarg1_, long jarg2, long jarg3, XsPortInfoClass jarg3_);
  public final static native void XsPortInfoArray_resize(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_setSize(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_append(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoArray jarg2_);
  public final static native long XsPortInfoArray_opSet(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoArray jarg2_);
  public final static native boolean XsPortInfoArray_empty(long jarg1, XsPortInfoArray jarg1_);
  public final static native long XsPortInfoArray_inherited(long jarg1, XsPortInfoArray jarg1_);
  public final static native void XsPortInfoArray_swap__SWIG_0(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoArray jarg2_);
  public final static native void XsPortInfoArray_swap__SWIG_1(long jarg1, XsPortInfoArray jarg1_, long jarg2, long jarg3);
  public final static native long XsPortInfoArray_opLeftShift(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native long XsPortInfoArray_find(long jarg1, XsPortInfoArray jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native void XsPortInfoArray_removeDuplicates(long jarg1, XsPortInfoArray jarg1_);
  public final static native void XsPortInfoArray_removeDuplicatesPredicate(long jarg1, XsPortInfoArray jarg1_, long jarg2);
  public final static native void XsPortInfoArray_sort(long jarg1, XsPortInfoArray jarg1_);
  public final static native void XsPortInfoArray_reverse(long jarg1, XsPortInfoArray jarg1_);
  public final static native long g_xsPortInfoArrayDescriptor_get();
  public final static native long new_XsPortInfoArrayClass__SWIG_0(long jarg1, long jarg2, XsPortInfoClass jarg2_);
  public final static native long new_XsPortInfoArrayClass__SWIG_1(long jarg1);
  public final static native long new_XsPortInfoArrayClass__SWIG_2();
  public final static native long new_XsPortInfoArrayClass__SWIG_3(long jarg1, XsPortInfoArrayClass jarg1_);
  public final static native long new_XsPortInfoArrayClass__SWIG_4(long jarg1, XsPortInfoClass jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsPortInfoArrayClass(long jarg1);
  public final static native long new_XsOutputConfigurationArray__SWIG_0(long jarg1, long jarg2, XsOutputConfiguration jarg2_);
  public final static native long new_XsOutputConfigurationArray__SWIG_1(long jarg1);
  public final static native long new_XsOutputConfigurationArray__SWIG_2();
  public final static native long new_XsOutputConfigurationArray__SWIG_3(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long new_XsOutputConfigurationArray__SWIG_4(long jarg1, XsOutputConfiguration jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsOutputConfigurationArray(long jarg1);
  public final static native void XsOutputConfigurationArray_clear(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native boolean XsOutputConfigurationArray_opEquals(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfigurationArray jarg2_);
  public final static native boolean XsOutputConfigurationArray_opUnequals(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfigurationArray jarg2_);
  public final static native void XsOutputConfigurationArray_reserve(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native long XsOutputConfigurationArray_reserved(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_descriptor(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_begin(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_end(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_rbegin(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_rend(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_opSquareBracket(long jarg1, XsOutputConfigurationArray jarg1_, int jarg2);
  public final static native long XsOutputConfigurationArray_value(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native long XsOutputConfigurationArray_first(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_last(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_at(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_insert__SWIG_0(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3);
  public final static native void XsOutputConfigurationArray_insert__SWIG_1(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3, long jarg4);
  public final static native void XsOutputConfigurationArray_insert__SWIG_2(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3);
  public final static native void XsOutputConfigurationArray_insert__SWIG_3(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3);
  public final static native void XsOutputConfigurationArray_insert__SWIG_4(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3, long jarg4);
  public final static native void XsOutputConfigurationArray_insert__SWIG_5(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_, long jarg3, long jarg4);
  public final static native void XsOutputConfigurationArray_push_back(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native void XsOutputConfigurationArray_pop_back__SWIG_0(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_pop_back__SWIG_1(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native void XsOutputConfigurationArray_push_front(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native void XsOutputConfigurationArray_pop_front__SWIG_0(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_pop_front__SWIG_1(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_size(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native void XsOutputConfigurationArray_erase__SWIG_0(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, long jarg3);
  public final static native void XsOutputConfigurationArray_erase__SWIG_1(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native long XsOutputConfigurationArray_erase__SWIG_2(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native long XsOutputConfigurationArray_erase__SWIG_3(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_assign(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, long jarg3, XsOutputConfiguration jarg3_);
  public final static native void XsOutputConfigurationArray_resize(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_setSize(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_append(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfigurationArray jarg2_);
  public final static native long XsOutputConfigurationArray_opSet(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfigurationArray jarg2_);
  public final static native boolean XsOutputConfigurationArray_empty(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long XsOutputConfigurationArray_inherited(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native void XsOutputConfigurationArray_swap__SWIG_0(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfigurationArray jarg2_);
  public final static native void XsOutputConfigurationArray_swap__SWIG_1(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, long jarg3);
  public final static native long XsOutputConfigurationArray_opLeftShift(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native long XsOutputConfigurationArray_find(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native void XsOutputConfigurationArray_removeDuplicates(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native void XsOutputConfigurationArray_removeDuplicatesPredicate(long jarg1, XsOutputConfigurationArray jarg1_, long jarg2);
  public final static native void XsOutputConfigurationArray_sort(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native void XsOutputConfigurationArray_reverse(long jarg1, XsOutputConfigurationArray jarg1_);
  public final static native long g_xsOutputConfigurationArrayDescriptor_get();
  public final static native long new_XsDevicePtrArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsDevicePtrArray__SWIG_1(long jarg1);
  public final static native long new_XsDevicePtrArray__SWIG_2();
  public final static native long new_XsDevicePtrArray__SWIG_3(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long new_XsDevicePtrArray__SWIG_4(long jarg1, long jarg2, long jarg3);
  public final static native void delete_XsDevicePtrArray(long jarg1);
  public final static native void XsDevicePtrArray_clear(long jarg1, XsDevicePtrArray jarg1_);
  public final static native boolean XsDevicePtrArray_opEquals(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevicePtrArray jarg2_);
  public final static native boolean XsDevicePtrArray_opUnequals(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevicePtrArray jarg2_);
  public final static native void XsDevicePtrArray_reserve(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native long XsDevicePtrArray_reserved(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_descriptor(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_begin(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_end(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_rbegin(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_rend(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_opSquareBracket(long jarg1, XsDevicePtrArray jarg1_, int jarg2);
  public final static native long XsDevicePtrArray_value(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native long XsDevicePtrArray_first(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_last(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_at(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_insert__SWIG_0(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_, long jarg3);
  public final static native void XsDevicePtrArray_insert__SWIG_1(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsDevicePtrArray_insert__SWIG_2(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_, long jarg3);
  public final static native void XsDevicePtrArray_insert__SWIG_3(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_, long jarg3);
  public final static native void XsDevicePtrArray_insert__SWIG_4(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsDevicePtrArray_insert__SWIG_5(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsDevicePtrArray_push_back(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void XsDevicePtrArray_pop_back__SWIG_0(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_pop_back__SWIG_1(long jarg1, XsDevicePtrArray jarg1_);
  public final static native void XsDevicePtrArray_push_front(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void XsDevicePtrArray_pop_front__SWIG_0(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_pop_front__SWIG_1(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_size(long jarg1, XsDevicePtrArray jarg1_);
  public final static native void XsDevicePtrArray_erase__SWIG_0(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3);
  public final static native void XsDevicePtrArray_erase__SWIG_1(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native long XsDevicePtrArray_erase__SWIG_2(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native long XsDevicePtrArray_erase__SWIG_3(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_assign(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3);
  public final static native void XsDevicePtrArray_resize(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_setSize(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_append(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevicePtrArray jarg2_);
  public final static native long XsDevicePtrArray_opSet(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevicePtrArray jarg2_);
  public final static native boolean XsDevicePtrArray_empty(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long XsDevicePtrArray_inherited(long jarg1, XsDevicePtrArray jarg1_);
  public final static native void XsDevicePtrArray_swap__SWIG_0(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevicePtrArray jarg2_);
  public final static native void XsDevicePtrArray_swap__SWIG_1(long jarg1, XsDevicePtrArray jarg1_, long jarg2, long jarg3);
  public final static native long XsDevicePtrArray_opLeftShift(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_);
  public final static native long XsDevicePtrArray_find(long jarg1, XsDevicePtrArray jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void XsDevicePtrArray_removeDuplicates(long jarg1, XsDevicePtrArray jarg1_);
  public final static native void XsDevicePtrArray_removeDuplicatesPredicate(long jarg1, XsDevicePtrArray jarg1_, long jarg2);
  public final static native void XsDevicePtrArray_sort(long jarg1, XsDevicePtrArray jarg1_);
  public final static native void XsDevicePtrArray_reverse(long jarg1, XsDevicePtrArray jarg1_);
  public final static native long g_xsDevicePtrArrayDescriptor_get();
  public final static native long new_XsFilterProfileArray__SWIG_0(long jarg1, long jarg2, XsFilterProfile jarg2_);
  public final static native long new_XsFilterProfileArray__SWIG_1(long jarg1);
  public final static native long new_XsFilterProfileArray__SWIG_2();
  public final static native long new_XsFilterProfileArray__SWIG_3(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long new_XsFilterProfileArray__SWIG_4(long jarg1, XsFilterProfile jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsFilterProfileArray(long jarg1);
  public final static native void XsFilterProfileArray_clear(long jarg1, XsFilterProfileArray jarg1_);
  public final static native boolean XsFilterProfileArray_opEquals(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfileArray jarg2_);
  public final static native boolean XsFilterProfileArray_opUnequals(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfileArray jarg2_);
  public final static native void XsFilterProfileArray_reserve(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native long XsFilterProfileArray_reserved(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_descriptor(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_begin(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_end(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_rbegin(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_rend(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_opSquareBracket(long jarg1, XsFilterProfileArray jarg1_, int jarg2);
  public final static native long XsFilterProfileArray_value(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native long XsFilterProfileArray_first(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_last(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_at(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_insert__SWIG_0(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3);
  public final static native void XsFilterProfileArray_insert__SWIG_1(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3, long jarg4);
  public final static native void XsFilterProfileArray_insert__SWIG_2(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3);
  public final static native void XsFilterProfileArray_insert__SWIG_3(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3);
  public final static native void XsFilterProfileArray_insert__SWIG_4(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3, long jarg4);
  public final static native void XsFilterProfileArray_insert__SWIG_5(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3, long jarg4);
  public final static native void XsFilterProfileArray_push_back(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArray_pop_back__SWIG_0(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_pop_back__SWIG_1(long jarg1, XsFilterProfileArray jarg1_);
  public final static native void XsFilterProfileArray_push_front(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArray_pop_front__SWIG_0(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_pop_front__SWIG_1(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_size(long jarg1, XsFilterProfileArray jarg1_);
  public final static native void XsFilterProfileArray_erase__SWIG_0(long jarg1, XsFilterProfileArray jarg1_, long jarg2, long jarg3);
  public final static native void XsFilterProfileArray_erase__SWIG_1(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native long XsFilterProfileArray_erase__SWIG_2(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native long XsFilterProfileArray_erase__SWIG_3(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_assign(long jarg1, XsFilterProfileArray jarg1_, long jarg2, long jarg3, XsFilterProfile jarg3_);
  public final static native void XsFilterProfileArray_resize(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_setSize(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_append(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfileArray jarg2_);
  public final static native long XsFilterProfileArray_opSet(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfileArray jarg2_);
  public final static native boolean XsFilterProfileArray_empty(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long XsFilterProfileArray_inherited(long jarg1, XsFilterProfileArray jarg1_);
  public final static native void XsFilterProfileArray_swap__SWIG_0(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfileArray jarg2_);
  public final static native void XsFilterProfileArray_swap__SWIG_1(long jarg1, XsFilterProfileArray jarg1_, long jarg2, long jarg3);
  public final static native long XsFilterProfileArray_opLeftShift(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native long XsFilterProfileArray_find(long jarg1, XsFilterProfileArray jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsFilterProfileArray_removeDuplicates(long jarg1, XsFilterProfileArray jarg1_);
  public final static native void XsFilterProfileArray_removeDuplicatesPredicate(long jarg1, XsFilterProfileArray jarg1_, long jarg2);
  public final static native void XsFilterProfileArray_sort(long jarg1, XsFilterProfileArray jarg1_);
  public final static native void XsFilterProfileArray_reverse(long jarg1, XsFilterProfileArray jarg1_);
  public final static native long g_xsFilterProfileArrayDescriptor_get();
  public final static native long new_XsDeviceIdArray__SWIG_0(long jarg1, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long new_XsDeviceIdArray__SWIG_1(long jarg1);
  public final static native long new_XsDeviceIdArray__SWIG_2();
  public final static native long new_XsDeviceIdArray__SWIG_3(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long new_XsDeviceIdArray__SWIG_4(long jarg1, XsDeviceIdClass jarg1_, long jarg2, long jarg3);
  public final static native void delete_XsDeviceIdArray(long jarg1);
  public final static native void XsDeviceIdArray_clear(long jarg1, XsDeviceIdArray jarg1_);
  public final static native boolean XsDeviceIdArray_opEquals(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdArray jarg2_);
  public final static native boolean XsDeviceIdArray_opUnequals(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdArray jarg2_);
  public final static native void XsDeviceIdArray_reserve(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native long XsDeviceIdArray_reserved(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_descriptor(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_begin(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_end(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_rbegin(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_rend(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_opSquareBracket(long jarg1, XsDeviceIdArray jarg1_, int jarg2);
  public final static native long XsDeviceIdArray_value(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native long XsDeviceIdArray_first(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_last(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_at(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_insert__SWIG_0(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3);
  public final static native void XsDeviceIdArray_insert__SWIG_1(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3, long jarg4);
  public final static native void XsDeviceIdArray_insert__SWIG_2(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3);
  public final static native void XsDeviceIdArray_insert__SWIG_3(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3);
  public final static native void XsDeviceIdArray_insert__SWIG_4(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3, long jarg4);
  public final static native void XsDeviceIdArray_insert__SWIG_5(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_, long jarg3, long jarg4);
  public final static native void XsDeviceIdArray_push_back(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsDeviceIdArray_pop_back__SWIG_0(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_pop_back__SWIG_1(long jarg1, XsDeviceIdArray jarg1_);
  public final static native void XsDeviceIdArray_push_front(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsDeviceIdArray_pop_front__SWIG_0(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_pop_front__SWIG_1(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_size(long jarg1, XsDeviceIdArray jarg1_);
  public final static native void XsDeviceIdArray_erase__SWIG_0(long jarg1, XsDeviceIdArray jarg1_, long jarg2, long jarg3);
  public final static native void XsDeviceIdArray_erase__SWIG_1(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native long XsDeviceIdArray_erase__SWIG_2(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native long XsDeviceIdArray_erase__SWIG_3(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_assign(long jarg1, XsDeviceIdArray jarg1_, long jarg2, long jarg3, XsDeviceIdClass jarg3_);
  public final static native void XsDeviceIdArray_resize(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_setSize(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_append(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdArray jarg2_);
  public final static native long XsDeviceIdArray_opSet(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdArray jarg2_);
  public final static native boolean XsDeviceIdArray_empty(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long XsDeviceIdArray_inherited(long jarg1, XsDeviceIdArray jarg1_);
  public final static native void XsDeviceIdArray_swap__SWIG_0(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdArray jarg2_);
  public final static native void XsDeviceIdArray_swap__SWIG_1(long jarg1, XsDeviceIdArray jarg1_, long jarg2, long jarg3);
  public final static native long XsDeviceIdArray_opLeftShift(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDeviceIdArray_find(long jarg1, XsDeviceIdArray jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsDeviceIdArray_removeDuplicates(long jarg1, XsDeviceIdArray jarg1_);
  public final static native void XsDeviceIdArray_removeDuplicatesPredicate(long jarg1, XsDeviceIdArray jarg1_, long jarg2);
  public final static native void XsDeviceIdArray_sort(long jarg1, XsDeviceIdArray jarg1_);
  public final static native void XsDeviceIdArray_reverse(long jarg1, XsDeviceIdArray jarg1_);
  public final static native long g_xsDeviceIdArrayDescriptor_get();
  public final static native long new_XsSyncSettingArray__SWIG_0(long jarg1, long jarg2);
  public final static native long new_XsSyncSettingArray__SWIG_1(long jarg1);
  public final static native long new_XsSyncSettingArray__SWIG_2();
  public final static native long new_XsSyncSettingArray__SWIG_3(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long new_XsSyncSettingArray__SWIG_4(long jarg1, long jarg2, long jarg3);
  public final static native void delete_XsSyncSettingArray(long jarg1);
  public final static native void XsSyncSettingArray_clear(long jarg1, XsSyncSettingArray jarg1_);
  public final static native boolean XsSyncSettingArray_opEquals(long jarg1, XsSyncSettingArray jarg1_, long jarg2, XsSyncSettingArray jarg2_);
  public final static native boolean XsSyncSettingArray_opUnequals(long jarg1, XsSyncSettingArray jarg1_, long jarg2, XsSyncSettingArray jarg2_);
  public final static native void XsSyncSettingArray_reserve(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native long XsSyncSettingArray_reserved(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_descriptor(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_begin(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_end(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_rbegin(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_rend(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_opSquareBracket(long jarg1, XsSyncSettingArray jarg1_, int jarg2);
  public final static native long XsSyncSettingArray_value(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native long XsSyncSettingArray_first(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_last(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_at(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_insert__SWIG_0(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native void XsSyncSettingArray_insert__SWIG_1(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsSyncSettingArray_insert__SWIG_2(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native void XsSyncSettingArray_insert__SWIG_3(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native void XsSyncSettingArray_insert__SWIG_4(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsSyncSettingArray_insert__SWIG_5(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsSyncSettingArray_push_back(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_pop_back__SWIG_0(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_pop_back__SWIG_1(long jarg1, XsSyncSettingArray jarg1_);
  public final static native void XsSyncSettingArray_push_front(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_pop_front__SWIG_0(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_pop_front__SWIG_1(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_size(long jarg1, XsSyncSettingArray jarg1_);
  public final static native void XsSyncSettingArray_erase__SWIG_0(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native void XsSyncSettingArray_erase__SWIG_1(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native long XsSyncSettingArray_erase__SWIG_2(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native long XsSyncSettingArray_erase__SWIG_3(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_assign(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native void XsSyncSettingArray_resize(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_setSize(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_append(long jarg1, XsSyncSettingArray jarg1_, long jarg2, XsSyncSettingArray jarg2_);
  public final static native long XsSyncSettingArray_opSet(long jarg1, XsSyncSettingArray jarg1_, long jarg2, XsSyncSettingArray jarg2_);
  public final static native boolean XsSyncSettingArray_empty(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long XsSyncSettingArray_inherited(long jarg1, XsSyncSettingArray jarg1_);
  public final static native void XsSyncSettingArray_swap__SWIG_0(long jarg1, XsSyncSettingArray jarg1_, long jarg2, XsSyncSettingArray jarg2_);
  public final static native void XsSyncSettingArray_swap__SWIG_1(long jarg1, XsSyncSettingArray jarg1_, long jarg2, long jarg3);
  public final static native long XsSyncSettingArray_opLeftShift(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native long XsSyncSettingArray_find(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_removeDuplicates(long jarg1, XsSyncSettingArray jarg1_);
  public final static native void XsSyncSettingArray_removeDuplicatesPredicate(long jarg1, XsSyncSettingArray jarg1_, long jarg2);
  public final static native void XsSyncSettingArray_sort(long jarg1, XsSyncSettingArray jarg1_);
  public final static native void XsSyncSettingArray_reverse(long jarg1, XsSyncSettingArray jarg1_);
  public final static native long g_xsSyncSettingArrayDescriptor_get();
  public final static native void XsFilterProfile_toStringClass(long jarg1, XsFilterProfile jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native int XsFilterProfile_emptyClass(long jarg1, XsFilterProfile jarg1_);
  public final static native void XsFilterProfile_swapClass(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native int XS_MAX_FILTERPROFILES_get();
  public final static native int XS_LEN_FILTERPROFILELABEL_TERM_get();
  public final static native int XS_LEN_FILTERPROFILEKIND_TERM_get();
  public final static native int XS_MAX_FILTERPROFILES_IN_MT_get();
  public final static native long new_XsFilterProfile__SWIG_0(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5, short jarg6, short jarg7);
  public final static native long new_XsFilterProfile__SWIG_1(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5, short jarg6);
  public final static native long new_XsFilterProfile__SWIG_2(short jarg1, short jarg2, String jarg3, String jarg4, char jarg5);
  public final static native long new_XsFilterProfile__SWIG_3(short jarg1, short jarg2, String jarg3, String jarg4);
  public final static native long new_XsFilterProfile__SWIG_4(short jarg1, short jarg2, String jarg3);
  public final static native long new_XsFilterProfile__SWIG_5(short jarg1, short jarg2);
  public final static native long new_XsFilterProfile__SWIG_6(short jarg1);
  public final static native long new_XsFilterProfile__SWIG_7();
  public final static native long new_XsFilterProfile__SWIG_8(long jarg1, XsFilterProfile jarg1_);
  public final static native void delete_XsFilterProfile(long jarg1);
  public final static native boolean XsFilterProfile_empty(long jarg1, XsFilterProfile jarg1_);
  public final static native long XsFilterProfile_toString(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_type(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_version(long jarg1, XsFilterProfile jarg1_);
  public final static native String XsFilterProfile_label(long jarg1, XsFilterProfile jarg1_);
  public final static native String XsFilterProfile_kind(long jarg1, XsFilterProfile jarg1_);
  public final static native char XsFilterProfile_filterType(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_filterMajor(long jarg1, XsFilterProfile jarg1_);
  public final static native short XsFilterProfile_filterMinor(long jarg1, XsFilterProfile jarg1_);
  public final static native void XsFilterProfile_setType(long jarg1, XsFilterProfile jarg1_, short jarg2);
  public final static native void XsFilterProfile_setVersion(long jarg1, XsFilterProfile jarg1_, short jarg2);
  public final static native void XsFilterProfile_setLabel(long jarg1, XsFilterProfile jarg1_, String jarg2);
  public final static native void XsFilterProfile_setKind(long jarg1, XsFilterProfile jarg1_, String jarg2);
  public final static native void XsFilterProfile_setFilterType(long jarg1, XsFilterProfile jarg1_, char jarg2);
  public final static native void XsFilterProfile_setFilterVersion(long jarg1, XsFilterProfile jarg1_, short jarg2, short jarg3);
  public final static native void XsFilterProfile_swap(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void swap__SWIG_4(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native boolean XsFilterProfile_opEquals(long jarg1, XsFilterProfile jarg1_, long jarg2, XsFilterProfile jarg2_);
  public final static native void XsAnalogInData_m_data_set(long jarg1, XsAnalogInData jarg1_, int jarg2);
  public final static native int XsAnalogInData_m_data_get(long jarg1, XsAnalogInData jarg1_);
  public final static native long new_XsAnalogInData__SWIG_0();
  public final static native long new_XsAnalogInData__SWIG_1(int jarg1);
  public final static native boolean XsAnalogInData_opEquals(long jarg1, XsAnalogInData jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native void delete_XsAnalogInData(long jarg1);
  public final static native void XsDataPacket_construct(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_copyConstruct(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDataPacket_destruct(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_clear(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native void XsDataPacket_copy(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDataPacket_swap(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native int XsDataPacket_empty(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_itemCount(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setMessage(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native int XsDataPacket_dataFormat(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacket_rawAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawAccelerationConverted(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsRawAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeDataConverted(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsRawGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawGyroscopeTemperatureDataConverted(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsRawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacket_rawMagneticFieldConverted(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsRawMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native int XsDataPacket_rawTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsRawTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawTemperature(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacket_rawData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsScrData jarg2_);
  public final static native int XsDataPacket_containsRawData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsScrData jarg2_);
  public final static native long XsDataPacket_velocityIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsVelocityIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setVelocityIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_calibratedAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsCalibratedAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setCalibratedAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_orientationIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native int XsDataPacket_containsOrientationIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setOrientationIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long XsDataPacket_calibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsCalibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setCalibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_calibratedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsCalibratedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setCalibratedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_correctedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsCorrectedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setCorrectedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_calibratedData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsCalibratedData jarg2_);
  public final static native int XsDataPacket_containsCalibratedData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setCalibratedData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsCalibratedData jarg2_);
  public final static native long XsDataPacket_orientationQuaternion(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_, int jarg3);
  public final static native void XsDataPacket_setOrientationQuaternion(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_, int jarg3);
  public final static native long XsDataPacket_orientationEuler(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsEulerClass jarg2_, int jarg3);
  public final static native void XsDataPacket_setOrientationEuler(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsEulerClass jarg2_, int jarg3);
  public final static native long XsDataPacket_orientationMatrix(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMatrixClass jarg2_, int jarg3);
  public final static native void XsDataPacket_setOrientationMatrix(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMatrixClass jarg2_, int jarg3);
  public final static native int XsDataPacket_containsOrientation(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_orientationIdentifier(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_coordinateSystemOrientation(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacket_sdiData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native int XsDataPacket_containsSdiData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setSdiData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native long XsDataPacket_gloveData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveData jarg2_, int jarg3);
  public final static native int XsDataPacket_containsGloveData(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native void XsDataPacket_setGloveData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveData jarg2_, int jarg3);
  public final static native long XsDataPacket_storedDeviceId(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDataPacket_containsStoredDeviceId(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setStoredDeviceId(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDataPacket_storedLocationId(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsStoredLocationId(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setStoredLocationId(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacket_status(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsStatus(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsDetailedStatus(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setStatus(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native void XsDataPacket_setStatusByte(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native short XsDataPacket_packetCounter8(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsPacketCounter8(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setPacketCounter8(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native int XsDataPacket_packetCounter(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsPacketCounter(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setPacketCounter(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacket_sampleTimeFine(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsSampleTimeFine(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setSampleTimeFine(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacket_sampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsSampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setSampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native java.math.BigInteger XsDataPacket_sampleTime64(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsSampleTime64(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setSampleTime64(long jarg1, XsDataPacketClass jarg1_, java.math.BigInteger jarg2);
  public final static native long XsDataPacket_freeAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsFreeAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setFreeAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native double XsDataPacket_temperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setTemperature(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native int XsDataPacket_containsPressure(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacket_pressure(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsPressure jarg2_);
  public final static native int XsDataPacket_containsPressureAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setPressure(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsPressure jarg2_);
  public final static native long XsDataPacket_analogIn1Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native int XsDataPacket_containsAnalogIn1Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setAnalogIn1Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacket_analogIn2Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native int XsDataPacket_containsAnalogIn2Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setAnalogIn2Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacket_positionLLA(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsPositionLLA(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setPositionLLA(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_latitudeLongitude(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsLatitudeLongitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setLatitudeLongitude(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native double XsDataPacket_altitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsAltitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setAltitude(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native double XsDataPacket_altitudeMsl(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsAltitudeMsl(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setAltitudeMsl(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native long XsDataPacket_velocity(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_, int jarg3);
  public final static native int XsDataPacket_containsVelocity(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setVelocity(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_, int jarg3);
  public final static native int XsDataPacket_velocityIdentifier(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_coordinateSystemVelocity(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacket_utcTime(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native int XsDataPacket_containsUtcTime(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setUtcTime(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacket_frameRange(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native int XsDataPacket_containsFrameRange(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setFrameRange(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native int XsDataPacket_rssi(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsRssi(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRssi(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacket_rawGnssPvtData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssPvtData jarg2_);
  public final static native int XsDataPacket_containsRawGnssPvtData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawGnssPvtData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssPvtData jarg2_);
  public final static native short XsDataPacket_gnssAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsGnssAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setGnssAge(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native long XsDataPacket_rawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssSatInfo jarg2_);
  public final static native int XsDataPacket_containsRawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssSatInfo jarg2_);
  public final static native long XsDataPacket_gnssPvtPulse(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_containsGnssPvtPulse(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setGnssPvtPulse(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacket_merge(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_, int jarg3);
  public final static native void XsDataPacket_setTriggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2, long jarg3);
  public final static native long XsDataPacket_triggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2, long jarg3);
  public final static native int XsDataPacket_containsTriggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native void XsDataPacket_toMessage(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDataPacket_setAwindaSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_, int jarg3);
  public final static native long XsDataPacket_awindaSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_);
  public final static native int XsDataPacket_containsAwindaSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacket_isAwindaSnapshotARetransmission(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setFullSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_, int jarg3);
  public final static native long XsDataPacket_fullSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_);
  public final static native int XsDataPacket_containsFullSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setGloveSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveSnapshot jarg2_, int jarg3, int jarg4);
  public final static native long XsDataPacket_gloveSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveSnapshot jarg2_, int jarg3);
  public final static native int XsDataPacket_containsGloveSnapshot(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native void XsDataPacket_setRawBlob(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacket_rawBlob(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native int XsDataPacket_containsRawBlob(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacket_accelerationHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsAccelerationHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setAccelerationHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacket_rateOfTurnHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_containsRateOfTurnHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacket_setRateOfTurnHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native int XsDataPacket_privateCount();
  public final static native long new_XsDataPacketClass__SWIG_0(long jarg1, XsMessageClass jarg1_);
  public final static native long new_XsDataPacketClass__SWIG_1();
  public final static native long new_XsDataPacketClass__SWIG_2(long jarg1, XsDataPacketClass jarg1_);
  public final static native void delete_XsDataPacketClass(long jarg1);
  public final static native long XsDataPacketClass_opSet(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDataPacketClass_swap(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDataPacketClass_clear__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native void XsDataPacketClass_clear__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_empty(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_deviceId(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacketClass_itemCount(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setMessage(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native long XsDataPacketClass_toMessage(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setDeviceId(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDataPacketClass_dataFormat(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_rawAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_rawAccelerationConverted(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacketClass_rawGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_rawGyroscopeDataConverted(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacketClass_rawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_rawGyroscopeTemperatureDataConverted(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawGyroscopeTemperatureData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsDataPacketClass_rawMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_rawMagneticFieldConverted(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native int XsDataPacketClass_rawTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawTemperature(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_rawData(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsScrData jarg2_);
  public final static native long XsDataPacketClass_velocityIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsVelocityIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setVelocityIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_calibratedAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsCalibratedAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setCalibratedAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_orientationIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsOrientationIncrement(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setOrientationIncrement(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long XsDataPacketClass_calibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsCalibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setCalibratedGyroscopeData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_calibratedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsCalibratedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setCalibratedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_correctedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsCorrectedMagneticField(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setCorrectedMagneticField(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_calibratedData(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsCalibratedData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setCalibratedData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsCalibratedData jarg2_);
  public final static native long XsDataPacketClass_orientationQuaternion__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_orientationQuaternion__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setOrientationQuaternion(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsQuaternionClass jarg2_, int jarg3);
  public final static native long XsDataPacketClass_orientationEuler__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_orientationEuler__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setOrientationEuler(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsEulerClass jarg2_, int jarg3);
  public final static native long XsDataPacketClass_orientationMatrix__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_orientationMatrix__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setOrientationMatrix(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsMatrixClass jarg2_, int jarg3);
  public final static native boolean XsDataPacketClass_containsOrientation(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacketClass_orientationIdentifier(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacketClass_coordinateSystemOrientation(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_sdiData(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsSdiData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setSdiData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native long XsDataPacketClass_gloveData(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native boolean XsDataPacketClass_containsGloveData__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native boolean XsDataPacketClass_containsGloveData__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setGloveData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveData jarg2_, int jarg3);
  public final static native long XsDataPacketClass_storedDeviceId(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsStoredDeviceId(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setStoredDeviceId(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsDataPacketClass_storedLocationId(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsStoredLocationId(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setStoredLocationId(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_status(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsStatus(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsDetailedStatus(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setStatus(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native void XsDataPacketClass_setStatusByte(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native short XsDataPacketClass_packetCounter8(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsPacketCounter8(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setPacketCounter8(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native int XsDataPacketClass_packetCounter(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsPacketCounter(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setPacketCounter(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_sampleTimeFine(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsSampleTimeFine(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setSampleTimeFine(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_sampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsSampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setSampleTimeCoarse(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native java.math.BigInteger XsDataPacketClass_sampleTime64(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsSampleTime64(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setSampleTime64(long jarg1, XsDataPacketClass jarg1_, java.math.BigInteger jarg2);
  public final static native long XsDataPacketClass_freeAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsFreeAcceleration(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setFreeAcceleration(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native double XsDataPacketClass_temperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsTemperature(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setTemperature(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native long XsDataPacketClass_pressure(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsPressure(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsPressureAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setPressure(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsPressure jarg2_);
  public final static native long XsDataPacketClass_analogIn1Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAnalogIn1Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAnalogIn1Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacketClass_analogIn2Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAnalogIn2Data(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAnalogIn2Data(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsAnalogInData jarg2_);
  public final static native long XsDataPacketClass_positionLLA(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsPositionLLA(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setPositionLLA(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_latitudeLongitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsLatitudeLongitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setLatitudeLongitude(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native double XsDataPacketClass_altitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAltitude(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAltitude(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native double XsDataPacketClass_altitudeMsl(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAltitudeMsl(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAltitudeMsl(long jarg1, XsDataPacketClass jarg1_, double jarg2);
  public final static native long XsDataPacketClass_velocity__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_velocity__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsVelocity(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setVelocity(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_, int jarg3);
  public final static native int XsDataPacketClass_velocityIdentifier(long jarg1, XsDataPacketClass jarg1_);
  public final static native int XsDataPacketClass_coordinateSystemVelocity(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_utcTime(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsUtcTime(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setUtcTime(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_frameRange(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsFrameRange(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setFrameRange(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native int XsDataPacketClass_rssi(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRssi(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRssi(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_rawGnssPvtData(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawGnssPvtData(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawGnssPvtData(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssPvtData jarg2_);
  public final static native short XsDataPacketClass_gnssAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsGnssAge(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setGnssAge(long jarg1, XsDataPacketClass jarg1_, short jarg2);
  public final static native long XsDataPacketClass_rawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawGnssSatInfo(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsRawGnssSatInfo jarg2_);
  public final static native long XsDataPacketClass_gnssPvtPulse(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsGnssPvtPulse(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setGnssPvtPulse(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_fullSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsFullSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setFullSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_, boolean jarg3);
  public final static native long XsDataPacketClass_awindaSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAwindaSnapshot(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAwindaSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsSnapshot jarg2_, boolean jarg3);
  public final static native boolean XsDataPacketClass_isAwindaSnapshotARetransmission(long jarg1, XsDataPacketClass jarg1_);
  public final static native long XsDataPacketClass_gloveSnapshot(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native boolean XsDataPacketClass_containsGloveSnapshot__SWIG_0(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native boolean XsDataPacketClass_containsGloveSnapshot__SWIG_1(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setGloveSnapshot(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsGloveSnapshot jarg2_, boolean jarg3, int jarg4);
  public final static native long XsDataPacketClass_merge__SWIG_0(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_, boolean jarg3);
  public final static native long XsDataPacketClass_merge__SWIG_1(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDataPacketClass_setTimeOfArrival(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsDataPacketClass_timeOfArrival(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setEstimatedTimeOfSampling(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsDataPacketClass_estimatedTimeOfSampling(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setPacketId(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_packetId(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setTriggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2, long jarg3);
  public final static native boolean XsDataPacketClass_containsTriggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_triggerIndication(long jarg1, XsDataPacketClass jarg1_, int jarg2);
  public final static native long XsDataPacketClass_rawBlob(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRawBlob(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRawBlob(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_accelerationHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsAccelerationHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setAccelerationHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_rateOfTurnHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native boolean XsDataPacketClass_containsRateOfTurnHR(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_setRateOfTurnHR(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDataPacketClass_simplifiedContents(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_d_set(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_d_get(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_m_deviceId_set(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDataPacketClass_m_deviceId_get(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_m_toa_set(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsDataPacketClass_m_toa_get(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_m_packetId_set(long jarg1, XsDataPacketClass jarg1_, long jarg2);
  public final static native long XsDataPacketClass_m_packetId_get(long jarg1, XsDataPacketClass jarg1_);
  public final static native void XsDataPacketClass_m_etos_set(long jarg1, XsDataPacketClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsDataPacketClass_m_etos_get(long jarg1, XsDataPacketClass jarg1_);
  public final static native int B230400_get();
  public final static native int B460800_get();
  public final static native int B921600_get();
  public final static native int XBR_Invalid_get();
  public final static native int XBR_4800_get();
  public final static native int XBR_9600_get();
  public final static native int XBR_19k2_get();
  public final static native int XBR_38k4_get();
  public final static native int XBR_57k6_get();
  public final static native int XBR_115k2_get();
  public final static native int XBR_230k4_get();
  public final static native int XBR_460k8_get();
  public final static native int XBR_921k6_get();
  public final static native int XBR_2000k_get();
  public final static native int XBR_3500k_get();
  public final static native int XBR_4000k_get();
  public final static native void XsCalibratedData_construct(long jarg1, XsCalibratedData jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void XsCalibratedData_destruct(long jarg1, XsCalibratedData jarg1_);
  public final static native void XsCalibratedData_m_acc_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_acc_get(long jarg1, XsCalibratedData jarg1_);
  public final static native void XsCalibratedData_m_gyr_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_gyr_get(long jarg1, XsCalibratedData jarg1_);
  public final static native void XsCalibratedData_m_mag_set(long jarg1, XsCalibratedData jarg1_, long jarg2, XsVector3 jarg2_);
  public final static native long XsCalibratedData_m_mag_get(long jarg1, XsCalibratedData jarg1_);
  public final static native long new_XsCalibratedData__SWIG_0();
  public final static native long new_XsCalibratedData__SWIG_1(long jarg1, XsCalibratedData jarg1_);
  public final static native void delete_XsCalibratedData(long jarg1);
  public final static native long XsCalibratedData_opSet(long jarg1, XsCalibratedData jarg1_, long jarg2, XsCalibratedData jarg2_);
  public final static native int XDI_None_get();
  public final static native int XDI_TypeMask_get();
  public final static native int XDI_FullTypeMask_get();
  public final static native int XDI_FullMask_get();
  public final static native int XDI_FormatMask_get();
  public final static native int XDI_DataFormatMask_get();
  public final static native int XDI_SubFormatMask_get();
  public final static native int XDI_SubFormatFloat_get();
  public final static native int XDI_SubFormatFp1220_get();
  public final static native int XDI_SubFormatFp1632_get();
  public final static native int XDI_SubFormatDouble_get();
  public final static native int XDI_SubFormatLeft_get();
  public final static native int XDI_SubFormatRight_get();
  public final static native int XDI_TemperatureGroup_get();
  public final static native int XDI_Temperature_get();
  public final static native int XDI_TimestampGroup_get();
  public final static native int XDI_UtcTime_get();
  public final static native int XDI_PacketCounter_get();
  public final static native int XDI_Itow_get();
  public final static native int XDI_GnssAge_get();
  public final static native int XDI_PressureAge_get();
  public final static native int XDI_SampleTimeFine_get();
  public final static native int XDI_SampleTimeCoarse_get();
  public final static native int XDI_FrameRange_get();
  public final static native int XDI_PacketCounter8_get();
  public final static native int XDI_SampleTime64_get();
  public final static native int XDI_OrientationGroup_get();
  public final static native int XDI_CoordSysMask_get();
  public final static native int XDI_CoordSysEnu_get();
  public final static native int XDI_CoordSysNed_get();
  public final static native int XDI_CoordSysNwu_get();
  public final static native int XDI_Quaternion_get();
  public final static native int XDI_RotationMatrix_get();
  public final static native int XDI_EulerAngles_get();
  public final static native int XDI_PressureGroup_get();
  public final static native int XDI_BaroPressure_get();
  public final static native int XDI_AccelerationGroup_get();
  public final static native int XDI_DeltaV_get();
  public final static native int XDI_Acceleration_get();
  public final static native int XDI_FreeAcceleration_get();
  public final static native int XDI_AccelerationHR_get();
  public final static native int XDI_IndicationGroup_get();
  public final static native int XDI_TriggerIn1_get();
  public final static native int XDI_TriggerIn2_get();
  public final static native int XDI_TriggerIn3_get();
  public final static native int XDI_PositionGroup_get();
  public final static native int XDI_AltitudeMsl_get();
  public final static native int XDI_AltitudeEllipsoid_get();
  public final static native int XDI_PositionEcef_get();
  public final static native int XDI_LatLon_get();
  public final static native int XDI_GnssGroup_get();
  public final static native int XDI_GnssPvtData_get();
  public final static native int XDI_GnssSatInfo_get();
  public final static native int XDI_GnssPvtPulse_get();
  public final static native int XDI_AngularVelocityGroup_get();
  public final static native int XDI_RateOfTurn_get();
  public final static native int XDI_DeltaQ_get();
  public final static native int XDI_RateOfTurnHR_get();
  public final static native int XDI_RawSensorGroup_get();
  public final static native int XDI_RawUnsigned_get();
  public final static native int XDI_RawSigned_get();
  public final static native int XDI_RawAccGyrMagTemp_get();
  public final static native int XDI_RawGyroTemp_get();
  public final static native int XDI_RawAcc_get();
  public final static native int XDI_RawGyr_get();
  public final static native int XDI_RawMag_get();
  public final static native int XDI_RawDeltaQ_get();
  public final static native int XDI_RawDeltaV_get();
  public final static native int XDI_RawBlob_get();
  public final static native int XDI_AnalogInGroup_get();
  public final static native int XDI_AnalogIn1_get();
  public final static native int XDI_AnalogIn2_get();
  public final static native int XDI_MagneticGroup_get();
  public final static native int XDI_MagneticField_get();
  public final static native int XDI_MagneticFieldCorrected_get();
  public final static native int XDI_SnapshotGroup_get();
  public final static native int XDI_RetransmissionMask_get();
  public final static native int XDI_RetransmissionFlag_get();
  public final static native int XDI_AwindaSnapshot_get();
  public final static native int XDI_FullSnapshot_get();
  public final static native int XDI_GloveSnapshotLeft_get();
  public final static native int XDI_GloveSnapshotRight_get();
  public final static native int XDI_GloveDataGroup_get();
  public final static native int XDI_GloveDataLeft_get();
  public final static native int XDI_GloveDataRight_get();
  public final static native int XDI_VelocityGroup_get();
  public final static native int XDI_VelocityXYZ_get();
  public final static native int XDI_StatusGroup_get();
  public final static native int XDI_StatusByte_get();
  public final static native int XDI_StatusWord_get();
  public final static native int XDI_Rssi_get();
  public final static native int XDI_DeviceId_get();
  public final static native int XDI_LocationId_get();
  public final static native int opOr__SWIG_0(int jarg1, int jarg2);
  public final static native int opAnd__SWIG_0(int jarg1, int jarg2);
  public final static native int opNot__SWIG_0(int jarg1);
  public final static native long new_XsDeviceParameter__SWIG_0(int jarg1);
  public final static native long new_XsDeviceParameter__SWIG_1(int jarg1, int jarg2);
  public final static native int XsDeviceParameter_id(long jarg1, XsDeviceParameter jarg1_);
  public final static native void delete_XsDeviceParameter(long jarg1);
  public final static native int XDPI_Unknown_get();
  public final static native int XDPI_PacketErrorRate_get();
  public final static native int XDPI_ExtendedBuffer_get();
  public final static native int XDPI_UplinkTimeout_get();
  public final static native int XDPI_SyncLossTimeout_get();
  public final static native int XCDI_MAX_FREQUENCY_VAL_get();
  public final static native int XCDI_Invalid_get();
  public final static native int XCDI_Error_get();
  public final static native int XCDI_Warning_get();
  public final static native int XCDI_SampleTime_get();
  public final static native int XCDI_GroupCounter_get();
  public final static native int XCDI_UtcTime_get();
  public final static native int XCDI_StatusWord_get();
  public final static native int XCDI_Quaternion_get();
  public final static native int XCDI_EulerAngles_get();
  public final static native int XCDI_RotationMatrix_get();
  public final static native int XCDI_DeltaV_get();
  public final static native int XCDI_RateOfTurn_get();
  public final static native int XCDI_DeltaQ_get();
  public final static native int XCDI_Acceleration_get();
  public final static native int XCDI_FreeAcceleration_get();
  public final static native int XCDI_MagneticField_get();
  public final static native int XCDI_Temperature_get();
  public final static native int XCDI_BaroPressure_get();
  public final static native int XCDI_RateOfTurnHR_get();
  public final static native int XCDI_AccelerationHR_get();
  public final static native int XCDI_LatLong_get();
  public final static native int XCDI_AltitudeEllipsoid_get();
  public final static native int XCDI_PositionEcef_X_get();
  public final static native int XCDI_PositionEcef_Y_get();
  public final static native int XCDI_PositionEcef_Z_get();
  public final static native int XCDI_Velocity_get();
  public final static native int XCDI_Latitude_get();
  public final static native int XCDI_Longitude_get();
  public final static native int XCDI_GnssReceiverStatus_get();
  public final static native int XCDI_GnssReceiverDop_get();
  public final static native int XS_MAX_CANOUTPUTCONFIGURATIONS_get();
  public final static native void XsCanOutputConfiguration_swap(long jarg1, XsCanOutputConfiguration jarg1_, long jarg2, XsCanOutputConfiguration jarg2_);
  public final static native void XsCanOutputConfiguration_m_frameFormat_set(long jarg1, XsCanOutputConfiguration jarg1_, int jarg2);
  public final static native int XsCanOutputConfiguration_m_frameFormat_get(long jarg1, XsCanOutputConfiguration jarg1_);
  public final static native void XsCanOutputConfiguration_m_dataIdentifier_set(long jarg1, XsCanOutputConfiguration jarg1_, int jarg2);
  public final static native int XsCanOutputConfiguration_m_dataIdentifier_get(long jarg1, XsCanOutputConfiguration jarg1_);
  public final static native void XsCanOutputConfiguration_m_id_set(long jarg1, XsCanOutputConfiguration jarg1_, long jarg2);
  public final static native long XsCanOutputConfiguration_m_id_get(long jarg1, XsCanOutputConfiguration jarg1_);
  public final static native void XsCanOutputConfiguration_m_frequency_set(long jarg1, XsCanOutputConfiguration jarg1_, int jarg2);
  public final static native int XsCanOutputConfiguration_m_frequency_get(long jarg1, XsCanOutputConfiguration jarg1_);
  public final static native long new_XsCanOutputConfiguration__SWIG_0();
  public final static native long new_XsCanOutputConfiguration__SWIG_1(int jarg1, int jarg2, long jarg3, int jarg4);
  public final static native boolean XsCanOutputConfiguration_opEquals(long jarg1, XsCanOutputConfiguration jarg1_, long jarg2, XsCanOutputConfiguration jarg2_);
  public final static native boolean XsCanOutputConfiguration_opUnequals(long jarg1, XsCanOutputConfiguration jarg1_, long jarg2, XsCanOutputConfiguration jarg2_);
  public final static native void delete_XsCanOutputConfiguration(long jarg1);
  public final static native int XCFF_11Bit_Identifier_get();
  public final static native int XCFF_29Bit_Identifier_get();
  public final static native void XsIccRepMotionResult_m_ddtAccuracy_set(long jarg1, XsIccRepMotionResult jarg1_, float jarg2);
  public final static native float XsIccRepMotionResult_m_ddtAccuracy_get(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native void XsIccRepMotionResult_m_dimension_set(long jarg1, XsIccRepMotionResult jarg1_, short jarg2);
  public final static native short XsIccRepMotionResult_m_dimension_get(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native void XsIccRepMotionResult_m_status_set(long jarg1, XsIccRepMotionResult jarg1_, short jarg2);
  public final static native short XsIccRepMotionResult_m_status_get(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native long new_XsIccRepMotionResult__SWIG_0();
  public final static native long new_XsIccRepMotionResult__SWIG_1(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native float XsIccRepMotionResult_ddtAccuracy(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native short XsIccRepMotionResult_dimension(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native short XsIccRepMotionResult_status(long jarg1, XsIccRepMotionResult jarg1_);
  public final static native void delete_XsIccRepMotionResult(long jarg1);
  public final static native void XsTimeStamp_setMilliSecondTime(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native double XsTimeStamp_timeOfDay(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStamp_secondTime(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStamp_milliSecondPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStamp_secondPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStamp_minutePart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStamp_hourPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStamp_now(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStamp_maxValue();
  public final static native long XsTimeStamp_fromTimeInfo(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native void XsTimeStamp_toTimeInfo(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native void XsTimeStamp_toString(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsTimeStamp_utcToLocalTime(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native void XsTimeStamp_localToUtcTime(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native void XsTimeStamp_utcToLocalTime2(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_, long jarg3);
  public final static native void XsTimeStamp_localToUtcTime2(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_, long jarg3);
  public final static native void XsTimeStamp_utcToLocalTime_ms(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_, long jarg3);
  public final static native void XsTimeStamp_localToUtcTime_ms(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_, long jarg3);
  public final static native long new_XsTimeStampClass__SWIG_0(long jarg1);
  public final static native long new_XsTimeStampClass__SWIG_1();
  public final static native long new_XsTimeStampClass__SWIG_2(int jarg1);
  public final static native long new_XsTimeStampClass__SWIG_3(double jarg1);
  public final static native long new_XsTimeStampClass__SWIG_4(long jarg1, XsTimeStampClass jarg1_);
  public final static native long new_XsTimeStampClass__SWIG_5(long jarg1);
  public final static native long XsTimeStampClass_toTimeInfo__SWIG_0(long jarg1, XsTimeStampClass jarg1_);
  public final static native void XsTimeStampClass_toTimeInfo__SWIG_1(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native long XsTimeStampClass_toString(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_opSet(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsTimeStampClass_msTime(long jarg1, XsTimeStampClass jarg1_);
  public final static native void XsTimeStampClass_setMsTime(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native double XsTimeStampClass_timeOfDay(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_msTimeOfDay(long jarg1, XsTimeStampClass jarg1_);
  public final static native double XsTimeStampClass_secTime(long jarg1, XsTimeStampClass jarg1_);
  public final static native void XsTimeStampClass_setSecTime(long jarg1, XsTimeStampClass jarg1_, double jarg2);
  public final static native long XsTimeStampClass_opPlus(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsTimeStampClass_opSubtract(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsTimeStampClass_opPlusEquals(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native long XsTimeStampClass_opSubtractEquals(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opLessThen__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opLessEquals__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opEquals__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opGreaterThen__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opGreaterEquals__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opUnequals__SWIG_0(long jarg1, XsTimeStampClass jarg1_, long jarg2, XsTimeStampClass jarg2_);
  public final static native boolean XsTimeStampClass_opLessThen__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native boolean XsTimeStampClass_opLessEquals__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native boolean XsTimeStampClass_opEquals__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native boolean XsTimeStampClass_opGreaterThen__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native boolean XsTimeStampClass_opGreaterEquals__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native boolean XsTimeStampClass_opUnequals__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native long XsTimeStampClass_secondTime(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStampClass_milliSecondPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStampClass_secondPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStampClass_minutePart(long jarg1, XsTimeStampClass jarg1_);
  public final static native int XsTimeStampClass_hourPart(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_now();
  public final static native long XsTimeStampClass_nowMs();
  public final static native long XsTimeStampClass_elapsedToNow(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_maxValue();
  public final static native long XsTimeStampClass_opIncrement__SWIG_0(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_opIncrement__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native long XsTimeStampClass_opDecrement__SWIG_0(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_opDecrement__SWIG_1(long jarg1, XsTimeStampClass jarg1_, int jarg2);
  public final static native long XsTimeStampClass_utcToLocalTime__SWIG_0(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_localToUtcTime__SWIG_0(long jarg1, XsTimeStampClass jarg1_);
  public final static native long XsTimeStampClass_utcToLocalTime__SWIG_1(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native long XsTimeStampClass_localToUtcTime__SWIG_1(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native long XsTimeStampClass_utcToLocalTime__SWIG_2(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native long XsTimeStampClass_localToUtcTime__SWIG_2(long jarg1, XsTimeStampClass jarg1_, long jarg2);
  public final static native void delete_XsTimeStampClass(long jarg1);
  public final static native int XsRange_count(long jarg1, XsRangeClass jarg1_);
  public final static native int XsRange_contains(long jarg1, XsRangeClass jarg1_, int jarg2);
  public final static native int XsRange_interval(long jarg1, XsRangeClass jarg1_);
  public final static native void XsRange_setRange(long jarg1, XsRangeClass jarg1_, int jarg2, int jarg3);
  public final static native int XsRange_empty(long jarg1, XsRangeClass jarg1_);
  public final static native long new_XsRangeClass__SWIG_0(int jarg1, int jarg2);
  public final static native long new_XsRangeClass__SWIG_1(int jarg1);
  public final static native long new_XsRangeClass__SWIG_2();
  public final static native long new_XsRangeClass__SWIG_3(long jarg1, XsRangeClass jarg1_);
  public final static native long XsRangeClass_opSet(long jarg1, XsRangeClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native int XsRangeClass_count(long jarg1, XsRangeClass jarg1_);
  public final static native int XsRangeClass_interval(long jarg1, XsRangeClass jarg1_);
  public final static native boolean XsRangeClass_contains(long jarg1, XsRangeClass jarg1_, int jarg2);
  public final static native void XsRangeClass_setRange(long jarg1, XsRangeClass jarg1_, int jarg2, int jarg3);
  public final static native boolean XsRangeClass_empty(long jarg1, XsRangeClass jarg1_);
  public final static native int XsRangeClass_first(long jarg1, XsRangeClass jarg1_);
  public final static native int XsRangeClass_last(long jarg1, XsRangeClass jarg1_);
  public final static native boolean XsRangeClass_opEquals(long jarg1, XsRangeClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native boolean XsRangeClass_opLessThen(long jarg1, XsRangeClass jarg1_, long jarg2, XsRangeClass jarg2_);
  public final static native void delete_XsRangeClass(long jarg1);
  public final static native void XsSnapshot_construct(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_destruct(long jarg1, XsSnapshot jarg1_);
  public final static native int ST_Awinda_get();
  public final static native void XsSnapshot_m_deviceId_set(long jarg1, XsSnapshot jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsSnapshot_m_deviceId_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_frameNumber_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_frameNumber_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_timestamp_set(long jarg1, XsSnapshot jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger XsSnapshot_m_timestamp_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_iQ_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_iQ_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_iV_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_iV_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_mag_set(long jarg1, XsSnapshot jarg1_, long jarg2);
  public final static native long XsSnapshot_m_mag_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_baro_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_baro_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_status_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_status_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_accClippingCounter_set(long jarg1, XsSnapshot jarg1_, short jarg2);
  public final static native short XsSnapshot_m_accClippingCounter_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_gyrClippingCounter_set(long jarg1, XsSnapshot jarg1_, short jarg2);
  public final static native short XsSnapshot_m_gyrClippingCounter_get(long jarg1, XsSnapshot jarg1_);
  public final static native void XsSnapshot_m_type_set(long jarg1, XsSnapshot jarg1_, int jarg2);
  public final static native int XsSnapshot_m_type_get(long jarg1, XsSnapshot jarg1_);
  public final static native boolean XsSnapshot_opEquals(long jarg1, XsSnapshot jarg1_, long jarg2, XsSnapshot jarg2_);
  public final static native long new_XsSnapshot();
  public final static native void delete_XsSnapshot(long jarg1);
  public final static native int FSFL_ClipAccX_get();
  public final static native int FSFL_ClipAccY_get();
  public final static native int FSFL_ClipAccZ_get();
  public final static native int FSFL_ClipAccMask_get();
  public final static native int FSFL_ClipGyrX_get();
  public final static native int FSFL_ClipGyrY_get();
  public final static native int FSFL_ClipGyrZ_get();
  public final static native int FSFL_ClipGyrMask_get();
  public final static native int FSFL_ClipMagX_get();
  public final static native int FSFL_ClipMagY_get();
  public final static native int FSFL_ClipMagZ_get();
  public final static native int FSFL_ClipMagMask_get();
  public final static native int FSFL_MagIsNew_get();
  public final static native int FSFL_BaroIsNew_get();
  public final static native int FSFL_RotationMask_get();
  public final static native int FSFL_ClipAccShift_get();
  public final static native int FSFL_ClipGyrShift_get();
  public final static native int FSFL_ClipMagshift_get();
  public final static native int FSFL_RotationShift_get();
  public final static native void int24_t_m_vals_set(long jarg1, int24_t jarg1_, long jarg2);
  public final static native long int24_t_m_vals_get(long jarg1, int24_t jarg1_);
  public final static native double int24_t_toDouble(long jarg1, int24_t jarg1_);
  public final static native long new_int24_t();
  public final static native void delete_int24_t(long jarg1);
  public final static native void XsFingerSnapshot_m_iQ_set(long jarg1, XsFingerSnapshot jarg1_, long jarg2, int24_t jarg2_);
  public final static native long XsFingerSnapshot_m_iQ_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native void XsFingerSnapshot_m_iV_set(long jarg1, XsFingerSnapshot jarg1_, long jarg2);
  public final static native long XsFingerSnapshot_m_iV_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native void XsFingerSnapshot_m_mag_set(long jarg1, XsFingerSnapshot jarg1_, long jarg2);
  public final static native long XsFingerSnapshot_m_mag_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native void XsFingerSnapshot_m_flags_set(long jarg1, XsFingerSnapshot jarg1_, int jarg2);
  public final static native int XsFingerSnapshot_m_flags_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native void XsFingerSnapshot_m_accClippingCounter_set(long jarg1, XsFingerSnapshot jarg1_, short jarg2);
  public final static native short XsFingerSnapshot_m_accClippingCounter_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native void XsFingerSnapshot_m_gyrClippingCounter_set(long jarg1, XsFingerSnapshot jarg1_, short jarg2);
  public final static native short XsFingerSnapshot_m_gyrClippingCounter_get(long jarg1, XsFingerSnapshot jarg1_);
  public final static native long new_XsFingerSnapshot();
  public final static native void delete_XsFingerSnapshot(long jarg1);
  public final static native void XsGloveSnapshot_m_frameNumber_set(long jarg1, XsGloveSnapshot jarg1_, long jarg2);
  public final static native long XsGloveSnapshot_m_frameNumber_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_validSampleFlags_set(long jarg1, XsGloveSnapshot jarg1_, int jarg2);
  public final static native int XsGloveSnapshot_m_validSampleFlags_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_padByte_set(long jarg1, XsGloveSnapshot jarg1_, short jarg2);
  public final static native short XsGloveSnapshot_m_padByte_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native void XsGloveSnapshot_m_fingers_set(long jarg1, XsGloveSnapshot jarg1_, long jarg2, XsFingerSnapshot jarg2_);
  public final static native long XsGloveSnapshot_m_fingers_get(long jarg1, XsGloveSnapshot jarg1_);
  public final static native long new_XsGloveSnapshot();
  public final static native void delete_XsGloveSnapshot(long jarg1);
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_NONE_get();
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_SINGLE_get();
  public final static native int GNSS_PVT_FLAGS_GNSS_FIX_DIFFERENTIAL_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_NONE_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_FLOATING_get();
  public final static native int GNSS_PVT_FLAGS_CARRIER_SOLUTION_FIXED_get();
  public final static native int GNSS_ACCURACY_DEFAULT_DEVIATION_get();
  public final static native int XPDUF_ValidDate_get();
  public final static native int XPDUF_ValidTime_get();
  public final static native int XPDUF_FullyResolved_get();
  public final static native int XPDUF_ValidMag_get();
  public final static native int XPDQI_NoFix_get();
  public final static native int XPDQI_DeadReckiningOnly_get();
  public final static native int XPDQI_2DFix_get();
  public final static native int XPDQI_3DFix_get();
  public final static native int XPDQI_GnssAndDeadReck_get();
  public final static native int XPDQI_TimeOnlyFix_get();
  public final static native void XsRawGnssPvtData_m_itow_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_itow_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_year_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_year_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_month_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_month_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_day_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_day_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hour_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_hour_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_min_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_min_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_sec_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_sec_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_valid_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_valid_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_tAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_tAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_nano_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_nano_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_fixType_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_fixType_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_flags_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_flags_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_numSv_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_numSv_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_res1_set(long jarg1, XsRawGnssPvtData jarg1_, short jarg2);
  public final static native short XsRawGnssPvtData_m_res1_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_lon_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_lon_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_lat_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_lat_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_height_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_height_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hMsl_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_hMsl_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_hAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_vAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_vAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velN_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velN_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velE_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velE_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_velD_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_velD_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_gSpeed_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_gSpeed_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headMot_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_headMot_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_sAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_sAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headAcc_set(long jarg1, XsRawGnssPvtData jarg1_, long jarg2);
  public final static native long XsRawGnssPvtData_m_headAcc_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_headVeh_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_headVeh_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_gdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_gdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_pdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_pdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_tdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_tdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_vdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_vdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_hdop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_hdop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_ndop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_ndop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native void XsRawGnssPvtData_m_edop_set(long jarg1, XsRawGnssPvtData jarg1_, int jarg2);
  public final static native int XsRawGnssPvtData_m_edop_get(long jarg1, XsRawGnssPvtData jarg1_);
  public final static native boolean XsRawGnssPvtData_opEquals(long jarg1, XsRawGnssPvtData jarg1_, long jarg2, XsRawGnssPvtData jarg2_);
  public final static native long new_XsRawGnssPvtData();
  public final static native void delete_XsRawGnssPvtData(long jarg1);
  public final static native int XSENS_VENDOR_ID_get();
  public final static native int FTDI_VENDOR_ID_get();
  public final static native void XsPortInfo_clear(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_empty(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_portNumber(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_isUsb(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_isBluetooth(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_isNetwork(long jarg1, XsPortInfoClass jarg1_);
  public final static native String XsPortInfo_networkServiceName(long jarg1, XsPortInfoClass jarg1_);
  public final static native String XsPortInfo_bluetoothAddress(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_usbBus(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfo_usbAddress(long jarg1, XsPortInfoClass jarg1_);
  public final static native void XsPortInfo_swap(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native int XPLO_Invalid_get();
  public final static native int XPLO_RTS_Set_get();
  public final static native int XPLO_RTS_Clear_get();
  public final static native int XPLO_RTS_Ignore_get();
  public final static native int XPLO_DTR_Set_get();
  public final static native int XPLO_DTR_Clear_get();
  public final static native int XPLO_DTR_Ignore_get();
  public final static native int XPLO_All_Set_get();
  public final static native int XPLO_All_Clear_get();
  public final static native int XPLO_All_Ignore_get();
  public final static native int XPLO_RtsCtsFlowControl_get();
  public final static native long new_XsPortInfoClass__SWIG_0();
  public final static native long new_XsPortInfoClass__SWIG_1(long jarg1, XsStringClass jarg1_, int jarg2, int jarg3);
  public final static native long new_XsPortInfoClass__SWIG_2(long jarg1, XsStringClass jarg1_, int jarg2);
  public final static native long new_XsPortInfoClass__SWIG_3(long jarg1, XsStringClass jarg1_);
  public final static native long new_XsPortInfoClass__SWIG_4(int jarg1, int jarg2, int jarg3);
  public final static native long new_XsPortInfoClass__SWIG_5(int jarg1, int jarg2);
  public final static native long new_XsPortInfoClass__SWIG_6(int jarg1);
  public final static native void XsPortInfoClass_clear(long jarg1, XsPortInfoClass jarg1_);
  public final static native boolean XsPortInfoClass_empty(long jarg1, XsPortInfoClass jarg1_);
  public final static native boolean XsPortInfoClass_opGreaterThen(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native boolean XsPortInfoClass_opLessThen(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native boolean XsPortInfoClass_opEquals__SWIG_0(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native boolean XsPortInfoClass_opEquals__SWIG_1(long jarg1, XsPortInfoClass jarg1_, String jarg2);
  public final static native int XsPortInfoClass_portNumber(long jarg1, XsPortInfoClass jarg1_);
  public final static native long XsPortInfoClass_portName(long jarg1, XsPortInfoClass jarg1_);
  public final static native String XsPortInfoClass_portName_c_str(long jarg1, XsPortInfoClass jarg1_);
  public final static native void XsPortInfoClass_setPortName(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsPortInfoClass_isUsb(long jarg1, XsPortInfoClass jarg1_);
  public final static native boolean XsPortInfoClass_isBluetooth(long jarg1, XsPortInfoClass jarg1_);
  public final static native boolean XsPortInfoClass_isNetwork(long jarg1, XsPortInfoClass jarg1_);
  public final static native long XsPortInfoClass_networkServiceName(long jarg1, XsPortInfoClass jarg1_);
  public final static native long XsPortInfoClass_bluetoothAddress(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfoClass_usbBus(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfoClass_usbAddress(long jarg1, XsPortInfoClass jarg1_);
  public final static native int XsPortInfoClass_baudrate(long jarg1, XsPortInfoClass jarg1_);
  public final static native void XsPortInfoClass_setBaudrate(long jarg1, XsPortInfoClass jarg1_, int jarg2);
  public final static native long XsPortInfoClass_deviceId(long jarg1, XsPortInfoClass jarg1_);
  public final static native void XsPortInfoClass_setDeviceId(long jarg1, XsPortInfoClass jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native int XsPortInfoClass_linesOptions(long jarg1, XsPortInfoClass jarg1_);
  public final static native void XsPortInfoClass_setLinesOptions(long jarg1, XsPortInfoClass jarg1_, int jarg2);
  public final static native void XsPortInfoClass_getVidPid(long jarg1, XsPortInfoClass jarg1_, long jarg2, long jarg3);
  public final static native void XsPortInfoClass_setVidPid(long jarg1, XsPortInfoClass jarg1_, int jarg2, int jarg3);
  public final static native void delete_XsPortInfoClass(long jarg1);
  public final static native long new_XsPressure__SWIG_0();
  public final static native long new_XsPressure__SWIG_1(double jarg1, short jarg2);
  public final static native long new_XsPressure__SWIG_2(double jarg1);
  public final static native long new_XsPressure__SWIG_3(long jarg1, XsPressure jarg1_);
  public final static native long XsPressure_opSet(long jarg1, XsPressure jarg1_, long jarg2, XsPressure jarg2_);
  public final static native boolean XsPressure_opEquals(long jarg1, XsPressure jarg1_, long jarg2, XsPressure jarg2_);
  public final static native boolean XsPressure_opUnequals(long jarg1, XsPressure jarg1_, long jarg2, XsPressure jarg2_);
  public final static native void XsPressure_m_pressure_set(long jarg1, XsPressure jarg1_, double jarg2);
  public final static native double XsPressure_m_pressure_get(long jarg1, XsPressure jarg1_);
  public final static native void XsPressure_m_pressureAge_set(long jarg1, XsPressure jarg1_, short jarg2);
  public final static native short XsPressure_m_pressureAge_get(long jarg1, XsPressure jarg1_);
  public final static native void delete_XsPressure(long jarg1);
  public final static native int XHI_LeftHand_get();
  public final static native int XHI_RightHand_get();
  public final static native void XsSdiData_construct(long jarg1, XsSdiData jarg1_, long jarg2, long jarg3);
  public final static native void XsSdiData_destruct(long jarg1, XsSdiData jarg1_);
  public final static native long new_XsSdiData__SWIG_0();
  public final static native long new_XsSdiData__SWIG_1(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long new_XsSdiData__SWIG_2(long jarg1, XsSdiData jarg1_);
  public final static native long XsSdiData_opSet(long jarg1, XsSdiData jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native void XsSdiData_zero(long jarg1, XsSdiData jarg1_);
  public final static native long XsSdiData_orientationIncrement(long jarg1, XsSdiData jarg1_);
  public final static native void XsSdiData_setOrientationIncrement(long jarg1, XsSdiData jarg1_, long jarg2, XsQuaternionClass jarg2_);
  public final static native long XsSdiData_velocityIncrement(long jarg1, XsSdiData jarg1_);
  public final static native void XsSdiData_setVelocityIncrement(long jarg1, XsSdiData jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native boolean XsSdiData_opEquals(long jarg1, XsSdiData jarg1_, long jarg2, XsSdiData jarg2_);
  public final static native void delete_XsSdiData(long jarg1);
  public final static native void XsScrData_m_acc_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_acc_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_gyr_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_gyr_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_mag_set(long jarg1, XsScrData jarg1_, long jarg2, XsUShortVector jarg2_);
  public final static native long XsScrData_m_mag_get(long jarg1, XsScrData jarg1_);
  public final static native void XsScrData_m_temp_set(long jarg1, XsScrData jarg1_, int jarg2);
  public final static native int XsScrData_m_temp_get(long jarg1, XsScrData jarg1_);
  public final static native long new_XsScrData();
  public final static native void delete_XsScrData(long jarg1);
  public final static native int XRV_OK_get();
  public final static native int XRV_NOBUS_get();
  public final static native int XRV_BUSNOTREADY_get();
  public final static native int XRV_INVALIDPERIOD_get();
  public final static native int XRV_INVALIDMSG_get();
  public final static native int XRV_INITBUSFAIL1_get();
  public final static native int XRV_INITBUSFAIL2_get();
  public final static native int XRV_INITBUSFAIL3_get();
  public final static native int XRV_SETBIDFAIL1_get();
  public final static native int XRV_SETBIDFAIL2_get();
  public final static native int XRV_MEASUREMENTFAIL1_get();
  public final static native int XRV_MEASUREMENTFAIL2_get();
  public final static native int XRV_MEASUREMENTFAIL3_get();
  public final static native int XRV_MEASUREMENTFAIL4_get();
  public final static native int XRV_MEASUREMENTFAIL5_get();
  public final static native int XRV_MEASUREMENTFAIL6_get();
  public final static native int XRV_TIMEROVERFLOW_get();
  public final static native int XRV_BAUDRATEINVALID_get();
  public final static native int XRV_INVALIDPARAM_get();
  public final static native int XRV_MEASUREMENTFAIL7_get();
  public final static native int XRV_MEASUREMENTFAIL8_get();
  public final static native int XRV_WIRELESSFAIL_get();
  public final static native int XRV_DEVICEERROR_get();
  public final static native int XRV_DATAOVERFLOW_get();
  public final static native int XRV_BUFFEROVERFLOW_get();
  public final static native int XRV_EXTTRIGGERERROR_get();
  public final static native int XRV_SAMPLESTREAMERROR_get();
  public final static native int XRV_POWER_DIP_get();
  public final static native int XRV_POWER_OVERCURRENT_get();
  public final static native int XRV_OVERHEATING_get();
  public final static native int XRV_BATTERYLOW_get();
  public final static native int XRV_INVALIDFILTERPROFILE_get();
  public final static native int XRV_INVALIDSTOREDSETTINGS_get();
  public final static native int XRV_ACCESSDENIED_get();
  public final static native int XRV_FILEERROR_get();
  public final static native int XRV_OUTPUTCONFIGERROR_get();
  public final static native int XRV_FILE_SYSTEM_CORRUPT_get();
  public final static native int XRV_ERROR_get();
  public final static native int XRV_NOTIMPLEMENTED_get();
  public final static native int XRV_TIMEOUT_get();
  public final static native int XRV_TIMEOUTNODATA_get();
  public final static native int XRV_CHECKSUMFAULT_get();
  public final static native int XRV_OUTOFMEMORY_get();
  public final static native int XRV_NOTFOUND_get();
  public final static native int XRV_UNEXPECTEDMSG_get();
  public final static native int XRV_INVALIDID_get();
  public final static native int XRV_INVALIDOPERATION_get();
  public final static native int XRV_INSUFFICIENTSPACE_get();
  public final static native int XRV_INPUTCANNOTBEOPENED_get();
  public final static native int XRV_OUTPUTCANNOTBEOPENED_get();
  public final static native int XRV_ALREADYOPEN_get();
  public final static native int XRV_ENDOFFILE_get();
  public final static native int XRV_COULDNOTREADSETTINGS_get();
  public final static native int XRV_NODATA_get();
  public final static native int XRV_READONLY_get();
  public final static native int XRV_NULLPTR_get();
  public final static native int XRV_INSUFFICIENTDATA_get();
  public final static native int XRV_BUSY_get();
  public final static native int XRV_INVALIDINSTANCE_get();
  public final static native int XRV_DATACORRUPT_get();
  public final static native int XRV_READINITFAILED_get();
  public final static native int XRV_NOXMFOUND_get();
  public final static native int XRV_DEVICECOUNTZERO_get();
  public final static native int XRV_MTLOCATIONINVALID_get();
  public final static native int XRV_INSUFFICIENTMTS_get();
  public final static native int XRV_INITFUSIONFAILED_get();
  public final static native int XRV_OTHER_get();
  public final static native int XRV_NOFILEOPEN_get();
  public final static native int XRV_NOPORTOPEN_get();
  public final static native int XRV_NOFILEORPORTOPEN_get();
  public final static native int XRV_PORTNOTFOUND_get();
  public final static native int XRV_INITPORTFAILED_get();
  public final static native int XRV_CALIBRATIONFAILED_get();
  public final static native int XRV_CONFIGCHECKFAIL_get();
  public final static native int XRV_ALREADYDONE_get();
  public final static native int XRV_SYNC_SINGLE_SLAVE_get();
  public final static native int XRV_SYNC_SECOND_MASTER_get();
  public final static native int XRV_SYNC_NO_SYNC_get();
  public final static native int XRV_SYNC_NO_MASTER_get();
  public final static native int XRV_SYNC_DATA_MISSING_get();
  public final static native int XRV_VERSION_TOO_LOW_get();
  public final static native int XRV_VERSION_PROBLEM_get();
  public final static native int XRV_ABORTED_get();
  public final static native int XRV_UNSUPPORTED_get();
  public final static native int XRV_PACKETCOUNTERMISSED_get();
  public final static native int XRV_MEASUREMENTFAILED_get();
  public final static native int XRV_STARTRECORDINGFAILED_get();
  public final static native int XRV_STOPRECORDINGFAILED_get();
  public final static native int XRV_RADIO_CHANNEL_IN_USE_get();
  public final static native int XRV_UNEXPECTED_DISCONNECT_get();
  public final static native int XRV_TOO_MANY_CONNECTED_TRACKERS_get();
  public final static native int XRV_GOTOCONFIGFAILED_get();
  public final static native int XRV_OUTOFRANGE_get();
  public final static native int XRV_BACKINRANGE_get();
  public final static native int XRV_EXPECTED_DISCONNECT_get();
  public final static native int XRV_RESTORE_COMMUNICATION_FAILED_get();
  public final static native int XRV_RESTORE_COMMUNICATION_STOPPED_get();
  public final static native int XRV_EXPECTED_CONNECT_get();
  public final static native int XRV_IN_USE_get();
  public final static native int XRV_PERFORMANCE_WARNING_get();
  public final static native int XRV_PERFORMANCE_OK_get();
  public final static native int XRV_SHUTTINGDOWN_get();
  public final static native int XRV_GNSSCONFIGURATIONERROR_get();
  public final static native int XRV_GNSSCOMMTIMEOUT_get();
  public final static native int XRV_GNSSERROR_get();
  public final static native int XRV_DEVICE_NOT_CALIBRATED_get();
  public final static native int XERR_Unknown_get();
  public final static native int XERR_ImcuTimeout_get();
  public final static native int XERR_ImcuSettingsInvalid_get();
  public final static native int XERR_ImcuSettingsFailure_get();
  public final static native int XERR_ImcuEmtsWriteFailure_get();
  public final static native int XERR_ImcuEmtsReadFailure_get();
  public final static native int XERR_DspCrashed_get();
  public final static native int XERR_DspBootingTimeout_get();
  public final static native int XERR_DspSettingsInvalid_get();
  public final static native String XsResultValue_toString(int jarg1);
  public final static native int XSIF_SignalQualityIndicator_Mask_get();
  public final static native int XSIF_SignalQualityIndicator_NoSignal_get();
  public final static native int XSIF_SignalQualityIndicator_Searching_get();
  public final static native int XSIF_SignalQualityIndicator_Acquired_get();
  public final static native int XSIF_SignalQualityIndicator_Unusable_get();
  public final static native int XSIF_SignalQualityIndicator_CodeTimeOk_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk1_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk2_get();
  public final static native int XSIF_SignalQualityIndicator_CodeCarrierTimeOk3_get();
  public final static native int XSIF_UsedForNavigation_Mask_get();
  public final static native int XSIF_UsedForNavigation_Used_get();
  public final static native int XSIF_HealthFlag_Mask_get();
  public final static native int XSIF_HealthFlag_Unknown_get();
  public final static native int XSIF_HealthFlag_Healthy_get();
  public final static native int XSIF_HealthFlag_Unhealthy_get();
  public final static native int XSIF_Differential_Mask_get();
  public final static native int XSIF_Differential_Available_get();
  public final static native void XsSatInfo_m_gnssId_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_gnssId_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_svId_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_svId_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_cno_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_cno_get(long jarg1, XsSatInfo jarg1_);
  public final static native void XsSatInfo_m_flags_set(long jarg1, XsSatInfo jarg1_, short jarg2);
  public final static native short XsSatInfo_m_flags_get(long jarg1, XsSatInfo jarg1_);
  public final static native long new_XsSatInfo();
  public final static native void delete_XsSatInfo(long jarg1);
  public final static native void XsRawGnssSatInfo_m_itow_set(long jarg1, XsRawGnssSatInfo jarg1_, long jarg2);
  public final static native long XsRawGnssSatInfo_m_itow_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_numSvs_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_numSvs_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res1_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res1_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res2_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res2_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_res3_set(long jarg1, XsRawGnssSatInfo jarg1_, short jarg2);
  public final static native short XsRawGnssSatInfo_m_res3_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native void XsRawGnssSatInfo_m_satInfos_set(long jarg1, XsRawGnssSatInfo jarg1_, long jarg2, XsSatInfo jarg2_);
  public final static native long XsRawGnssSatInfo_m_satInfos_get(long jarg1, XsRawGnssSatInfo jarg1_);
  public final static native boolean XsRawGnssSatInfo_opEquals(long jarg1, XsRawGnssSatInfo jarg1_, long jarg2, XsRawGnssSatInfo jarg2_);
  public final static native long new_XsRawGnssSatInfo();
  public final static native void delete_XsRawGnssSatInfo(long jarg1);
  public final static native void XsFingerData_construct(long jarg1, XsFingerData jarg1_);
  public final static native void XsFingerData_destruct(long jarg1, XsFingerData jarg1_);
  public final static native void XsFingerData_copy(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void XsFingerData_swapClass(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void XsGloveData_construct(long jarg1, XsGloveData jarg1_);
  public final static native void XsGloveData_destruct(long jarg1, XsGloveData jarg1_);
  public final static native void XsGloveData_copy(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void XsGloveData_swapClass(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native int XSFINGERSEGMENTCOUNT_get();
  public final static native long new_XsFingerData__SWIG_0();
  public final static native long new_XsFingerData__SWIG_1(long jarg1, XsQuaternionClass jarg1_, long jarg2, XsVectorClass jarg2_, long jarg3, XsVectorClass jarg3_, int jarg4);
  public final static native long new_XsFingerData__SWIG_2(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_opSet(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void XsFingerData_clear(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_orientationIncrement(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_velocityIncrement(long jarg1, XsFingerData jarg1_);
  public final static native long XsFingerData_mag(long jarg1, XsFingerData jarg1_);
  public final static native int XsFingerData_flags(long jarg1, XsFingerData jarg1_);
  public final static native boolean XsFingerData_opEquals(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native boolean XsFingerData_opUnequals(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void XsFingerData_swap(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void swap__SWIG_5(long jarg1, XsFingerData jarg1_, long jarg2, XsFingerData jarg2_);
  public final static native void delete_XsFingerData(long jarg1);
  public final static native long new_XsGloveData__SWIG_0();
  public final static native long new_XsGloveData__SWIG_1(int jarg1, int jarg2, long jarg3, XsFingerData jarg3_);
  public final static native long new_XsGloveData__SWIG_2(long jarg1, XsGloveData jarg1_);
  public final static native long XsGloveData_frameNumber(long jarg1, XsGloveData jarg1_);
  public final static native int XsGloveData_validSampleFlags(long jarg1, XsGloveData jarg1_);
  public final static native int XsGloveData_fingerSegmentCount();
  public final static native long XsGloveData_fingerData(long jarg1, XsGloveData jarg1_, int jarg2);
  public final static native boolean XsGloveData_opEquals(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native boolean XsGloveData_opUnequals(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native long XsGloveData_opSet(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void XsGloveData_swap(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void swap__SWIG_6(long jarg1, XsGloveData jarg1_, long jarg2, XsGloveData jarg2_);
  public final static native void delete_XsGloveData(long jarg1);
  public final static native void CallbackManagerXda_onDeviceStateChanged(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3, int jarg4);
  public final static native void CallbackManagerXda_onLiveDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsDataPacketClass jarg3_);
  public final static native void CallbackManagerXda_onAllLiveDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, long jarg3);
  public final static native void CallbackManagerXda_onMissedPackets(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void CallbackManagerXda_onDataUnavailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3);
  public final static native void CallbackManagerXda_onWakeupReceived(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void CallbackManagerXda_onProgressUpdated(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3, int jarg4, long jarg5, XsStringClass jarg5_);
  public final static native int CallbackManagerXda_onWriteMessageToLogFile(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsMessageClass jarg3_);
  public final static native void CallbackManagerXda_onBufferedDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsDataPacketClass jarg3_);
  public final static native void CallbackManagerXda_onAllBufferedDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, long jarg3);
  public final static native void CallbackManagerXda_onConnectivityChanged(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3);
  public final static native void CallbackManagerXda_onInfoResponse(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3);
  public final static native void CallbackManagerXda_onError(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3);
  public final static native void CallbackManagerXda_onNonDataMessage(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsMessageClass jarg3_);
  public final static native void CallbackManagerXda_onMessageDetected(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, int jarg3, long jarg4);
  public final static native void CallbackManagerXda_onMessageReceivedFromDevice(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsMessageClass jarg3_);
  public final static native void CallbackManagerXda_onMessageSentToDevice(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsMessageClass jarg3_);
  public final static native void CallbackManagerXda_onDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsDataPacketClass jarg3_);
  public final static native void CallbackManagerXda_onAllDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, long jarg3);
  public final static native void CallbackManagerXda_onRecordedDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsDevice jarg2_, long jarg3, XsDataPacketClass jarg3_);
  public final static native void CallbackManagerXda_onAllRecordedDataAvailable(long jarg1, CallbackManagerXda jarg1_, long jarg2, long jarg3);
  public final static native void CallbackManagerXda_onTransmissionRequest(long jarg1, CallbackManagerXda jarg1_, int jarg2, long jarg3);
  public final static native void CallbackManagerXda_onRestoreCommunication(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsStringClass jarg2_, int jarg3);
  public final static native long new_CallbackManagerXda();
  public final static native void delete_CallbackManagerXda(long jarg1);
  public final static native void CallbackManagerXda_clearCallbackHandlers__SWIG_0(long jarg1, CallbackManagerXda jarg1_, boolean jarg2);
  public final static native void CallbackManagerXda_clearCallbackHandlers__SWIG_1(long jarg1, CallbackManagerXda jarg1_);
  public final static native void CallbackManagerXda_addCallbackHandler__SWIG_0(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsCallbackPlainC jarg2_, boolean jarg3);
  public final static native void CallbackManagerXda_addCallbackHandler__SWIG_1(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsCallbackPlainC jarg2_);
  public final static native void CallbackManagerXda_removeCallbackHandler__SWIG_0(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsCallbackPlainC jarg2_, boolean jarg3);
  public final static native void CallbackManagerXda_removeCallbackHandler__SWIG_1(long jarg1, CallbackManagerXda jarg1_, long jarg2, XsCallbackPlainC jarg2_);
  public final static native void CallbackManagerXda_clearChainedManagers(long jarg1, CallbackManagerXda jarg1_);
  public final static native void CallbackManagerXda_addChainedManager(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_);
  public final static native void CallbackManagerXda_removeChainedManager(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_);
  public final static native void CallbackManagerXda_copyCallbackHandlersTo__SWIG_0(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_, boolean jarg3);
  public final static native void CallbackManagerXda_copyCallbackHandlersTo__SWIG_1(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_);
  public final static native void CallbackManagerXda_copyCallbackHandlersFrom__SWIG_0(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_, boolean jarg3);
  public final static native void CallbackManagerXda_copyCallbackHandlersFrom__SWIG_1(long jarg1, CallbackManagerXda jarg1_, long jarg2, CallbackManagerXda jarg2_);
  public final static native void Communicator_destroy(long jarg1, Communicator jarg1_);
  public final static native void Communicator_Deleter_opRoundBrackets(long jarg1, Communicator.Deleter jarg1_, long jarg2, Communicator jarg2_);
  public final static native long new_Communicator_Deleter();
  public final static native void delete_Communicator_Deleter(long jarg1);
  public final static native boolean Communicator_doTransaction__SWIG_0(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native boolean Communicator_doTransaction__SWIG_1(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_, long jarg3);
  public final static native boolean Communicator_doTransaction__SWIG_2(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_, long jarg3, XsMessageClass jarg3_);
  public final static native boolean Communicator_doTransaction__SWIG_3(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_, long jarg3, XsMessageClass jarg3_, long jarg4);
  public final static native void Communicator_setDefaultTimeout(long jarg1, Communicator jarg1_, long jarg2);
  public final static native long Communicator_defaultTimeout(long jarg1, Communicator jarg1_);
  public final static native int Communicator_lastResult(long jarg1, Communicator jarg1_);
  public final static native long Communicator_lastResultText(long jarg1, Communicator jarg1_);
  public final static native void Communicator_handleMessage(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native long Communicator_childDeviceCount(long jarg1, Communicator jarg1_);
  public final static native long Communicator_masterDeviceId(long jarg1, Communicator jarg1_);
  public final static native long Communicator_addReplyObject__SWIG_0(long jarg1, Communicator jarg1_, short jarg2);
  public final static native long Communicator_addReplyObject__SWIG_1(long jarg1, Communicator jarg1_, short jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long Communicator_addReplyObject__SWIG_2(long jarg1, Communicator jarg1_, long jarg2, ReplyObject jarg2_);
  public final static native int Communicator_gotoConfig__SWIG_0(long jarg1, Communicator jarg1_, boolean jarg2);
  public final static native int Communicator_gotoConfig__SWIG_1(long jarg1, Communicator jarg1_);
  public final static native int Communicator_gotoMeasurement(long jarg1, Communicator jarg1_);
  public final static native int Communicator_getDeviceId(long jarg1, Communicator jarg1_);
  public final static native void Communicator_setGotoConfigTimeout(long jarg1, Communicator jarg1_, long jarg2);
  public final static native boolean Communicator_writeMessage(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void Communicator_flushPort(long jarg1, Communicator jarg1_);
  public final static native void Communicator_closePort(long jarg1, Communicator jarg1_);
  public final static native void Communicator_scheduleClosePort(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_isPortOpen(long jarg1, Communicator jarg1_);
  public final static native long Communicator_portInfo(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_openPort__SWIG_0(long jarg1, Communicator jarg1_, long jarg2, XsPortInfoClass jarg2_, int jarg3, boolean jarg4);
  public final static native boolean Communicator_openPort__SWIG_1(long jarg1, Communicator jarg1_, long jarg2, XsPortInfoClass jarg2_, int jarg3);
  public final static native boolean Communicator_openPort__SWIG_2(long jarg1, Communicator jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native boolean Communicator_reopenPort__SWIG_0(long jarg1, Communicator jarg1_, int jarg2, boolean jarg3);
  public final static native boolean Communicator_reopenPort__SWIG_1(long jarg1, Communicator jarg1_, int jarg2);
  public final static native boolean Communicator_reopenPort__SWIG_2(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_isDockedAt(long jarg1, Communicator jarg1_, long jarg2, Communicator jarg2_);
  public final static native void Communicator_setKeepAlive(long jarg1, Communicator jarg1_, boolean jarg2);
  public final static native void Communicator_closeLogFile(long jarg1, Communicator jarg1_);
  public final static native long Communicator_readMessage__SWIG_0(long jarg1, Communicator jarg1_, short jarg2);
  public final static native long Communicator_readMessage__SWIG_1(long jarg1, Communicator jarg1_);
  public final static native long Communicator_readMessageFromStartOfFile__SWIG_0(long jarg1, Communicator jarg1_, short jarg2, int jarg3);
  public final static native long Communicator_readMessageFromStartOfFile__SWIG_1(long jarg1, Communicator jarg1_, short jarg2);
  public final static native long Communicator_readMessagesFromStartOfFile__SWIG_0(long jarg1, Communicator jarg1_, short jarg2, int jarg3);
  public final static native long Communicator_readMessagesFromStartOfFile__SWIG_1(long jarg1, Communicator jarg1_, short jarg2);
  public final static native void Communicator_loadLogFile(long jarg1, Communicator jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void Communicator_abortLoadLogFile(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_openLogFile(long jarg1, Communicator jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long Communicator_logFileName(long jarg1, Communicator jarg1_);
  public final static native long Communicator_logFileSize(long jarg1, Communicator jarg1_);
  public final static native long Communicator_logFileDate(long jarg1, Communicator jarg1_);
  public final static native long Communicator_logFileReadPosition(long jarg1, Communicator jarg1_);
  public final static native void Communicator_resetLogFileReadPosition(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_isReadingFromFile(long jarg1, Communicator jarg1_);
  public final static native void Communicator_waitForLastTaskCompletion(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_isLoadLogFileInProgress(long jarg1, Communicator jarg1_);
  public final static native boolean Communicator_allowReprocessing(long jarg1, Communicator jarg1_);
  public final static native int Communicator_configurationMessageSearchLimit();
  public final static native void Communicator_setCredentials(long jarg1, Communicator jarg1_, long jarg2, XsStringClass jarg2_, long jarg3, XsStringClass jarg3_);
  public final static native boolean Communicator_sanityCheck(long jarg1, Communicator jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void Communicator_addProtocolHandler(long jarg1, Communicator jarg1_, long jarg2, IProtocolHandler jarg2_);
  public final static native void Communicator_removeProtocolHandler(long jarg1, Communicator jarg1_, int jarg2);
  public final static native boolean Communicator_hasProtocol(long jarg1, Communicator jarg1_, int jarg2);
  public final static native void Communicator_setMasterDevice(long jarg1, Communicator jarg1_, long jarg2, XsDevice jarg2_);
  public final static native void delete_DataLogger(long jarg1);
  public final static native boolean DataLogger_writeMessage(long jarg1, DataLogger jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void DataLogger_close(long jarg1, DataLogger jarg1_);
  public final static native int XACM_None_get();
  public final static native int XACM_BlackList_get();
  public final static native int XACM_WhiteList_get();
  public final static native String XsConnectivityState_toString(int jarg1);
  public final static native int XDOF_DisableAutoStore_get();
  public final static native int XDOF_DisableAutoMeasurement_get();
  public final static native int XDOF_EnableBeidou_get();
  public final static native int XDOF_DisableGps_get();
  public final static native int XDOF_EnableAhs_get();
  public final static native int XDOF_EnableOrientationSmoother_get();
  public final static native int XDOF_EnableConfigurableBusId_get();
  public final static native int XDOF_EnableInrunCompassCalibration_get();
  public final static native int XDOF_DisableSleepMode_get();
  public final static native int XDOF_EnableConfigMessageAtStartup_get();
  public final static native int XDOF_EnableColdFilterResets_get();
  public final static native int XDOF_EnablePositionVelocitySmoother_get();
  public final static native int XDOF_EnableContinuousZRU_get();
  public final static native int XDOF_None_get();
  public final static native int XDOF_All_get();
  public final static native int opOr__SWIG_1(int jarg1, int jarg2);
  public final static native int opAnd__SWIG_1(int jarg1, int jarg2);
  public final static native int opXOr__SWIG_0(int jarg1, int jarg2);
  public final static native int opNot__SWIG_1(int jarg1);
  public final static native String XsDeviceState_toString(int jarg1);
  public final static native int XEM_Ignore_get();
  public final static native int XEM_IncreasePacketCounter_get();
  public final static native int XEM_IncreasePacketCounterAndSendError_get();
  public final static native int XEM_SendErrorAndGoToConfig_get();
  public final static native int XGP_Portable_get();
  public final static native int XGP_Stationary_get();
  public final static native int XGP_Pedestrian_get();
  public final static native int XGP_Automotive_get();
  public final static native int XGP_AtSea_get();
  public final static native int XGP_Airborne1g_get();
  public final static native int XGP_Airborne2g_get();
  public final static native int XGP_Airborne4g_get();
  public final static native int XGP_Wrist_get();
  public final static native int XSO_None_get();
  public final static native int XSO_Calibrate_get();
  public final static native int XSO_Orientation_get();
  public final static native int XSO_KeepLastLiveData_get();
  public final static native int XSO_RetainLiveData_get();
  public final static native int XSO_RetainBufferedData_get();
  public final static native int XSO_OrientationInLiveStream_get();
  public final static native int XSO_OrientationInBufferedStream_get();
  public final static native int XSO_ApplyOrientationResetToCalData_get();
  public final static native int XSO_InterpolateMissingData_get();
  public final static native int XSO_SkipDataBundling_get();
  public final static native int XSO_ExpectNoRetransmissionsInFile_get();
  public final static native int XSO_Reserved_get();
  public final static native int opOr__SWIG_2(int jarg1, int jarg2);
  public final static native int opAnd__SWIG_2(int jarg1, int jarg2);
  public final static native int opXOr__SWIG_1(int jarg1, int jarg2);
  public final static native int opNot__SWIG_2(int jarg1);
  public final static native int XsOption_purify(int jarg1);
  public final static native int XS_MAX_OUTPUTCONFIGURATIONS_get();
  public final static native void XsOutputConfiguration_swap(long jarg1, XsOutputConfiguration jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native void XsOutputConfiguration_m_dataIdentifier_set(long jarg1, XsOutputConfiguration jarg1_, int jarg2);
  public final static native int XsOutputConfiguration_m_dataIdentifier_get(long jarg1, XsOutputConfiguration jarg1_);
  public final static native void XsOutputConfiguration_m_frequency_set(long jarg1, XsOutputConfiguration jarg1_, int jarg2);
  public final static native int XsOutputConfiguration_m_frequency_get(long jarg1, XsOutputConfiguration jarg1_);
  public final static native long new_XsOutputConfiguration__SWIG_0();
  public final static native long new_XsOutputConfiguration__SWIG_1(int jarg1, int jarg2);
  public final static native boolean XsOutputConfiguration_opEquals(long jarg1, XsOutputConfiguration jarg1_, long jarg2, XsOutputConfiguration jarg2_);
  public final static native void delete_XsOutputConfiguration(long jarg1);
  public final static native int XPT_Xbus_get();
  public final static native int XRR_Unknown_get();
  public final static native int XRR_VersionMismatch_get();
  public final static native int XRR_Blacklisted_get();
  public final static native int XRR_StationIsDisconnecting_get();
  public final static native int XRR_SystemIsOperational_get();
  public final static native String XsRejectReason_toString(int jarg1);
  public final static native String toString(int jarg1);
  public final static native int XRM_StoreAlignmentMatrix_get();
  public final static native int XRM_Heading_get();
  public final static native int XRM_Object_get();
  public final static native int XRM_Inclination_get();
  public final static native int XRM_Alignment_get();
  public final static native int XRM_Global_get();
  public final static native int XRM_DefaultHeading_get();
  public final static native int XRM_DefaultInclination_get();
  public final static native int XRM_DefaultAlignment_get();
  public final static native void delete_IProtocolHandler(long jarg1);
  public final static native long IProtocolHandler_findMessage(long jarg1, IProtocolHandler jarg1_, long jarg2, long jarg3);
  public final static native long IProtocolHandler_convertToMessage(long jarg1, IProtocolHandler jarg1_, long jarg2, MessageLocation jarg2_, long jarg3);
  public final static native int IProtocolHandler_minimumMessageSize(long jarg1, IProtocolHandler jarg1_);
  public final static native int IProtocolHandler_maximumMessageSize(long jarg1, IProtocolHandler jarg1_);
  public final static native int IProtocolHandler_type(long jarg1, IProtocolHandler jarg1_);
  public final static native void IProtocolHandler_ignoreMaximumMessageSize(long jarg1, IProtocolHandler jarg1_, boolean jarg2);
  public final static native void MessageLocation_m_startPos_set(long jarg1, MessageLocation jarg1_, int jarg2);
  public final static native int MessageLocation_m_startPos_get(long jarg1, MessageLocation jarg1_);
  public final static native void MessageLocation_m_size_set(long jarg1, MessageLocation jarg1_, int jarg2);
  public final static native int MessageLocation_m_size_get(long jarg1, MessageLocation jarg1_);
  public final static native void MessageLocation_m_incompletePos_set(long jarg1, MessageLocation jarg1_, int jarg2);
  public final static native int MessageLocation_m_incompletePos_get(long jarg1, MessageLocation jarg1_);
  public final static native void MessageLocation_m_incompleteSize_set(long jarg1, MessageLocation jarg1_, int jarg2);
  public final static native int MessageLocation_m_incompleteSize_get(long jarg1, MessageLocation jarg1_);
  public final static native long new_MessageLocation__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long new_MessageLocation__SWIG_1(int jarg1, int jarg2, int jarg3);
  public final static native long new_MessageLocation__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MessageLocation__SWIG_3(int jarg1);
  public final static native long new_MessageLocation__SWIG_4();
  public final static native boolean MessageLocation_isValid(long jarg1, MessageLocation jarg1_);
  public final static native void delete_MessageLocation(long jarg1);
  public final static native int OPS_OpenPort_get();
  public final static native int OPS_InitDevice_get();
  public final static native int OPS_InitStart_get();
  public final static native int OPS_Full_get();
  public final static native void delete_ReplyObject(long jarg1);
  public final static native void ReplyObject_setMessage(long jarg1, ReplyObject jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native long ReplyObject_message(long jarg1, ReplyObject jarg1_, long jarg2);
  public final static native boolean ReplyObject_isReplyFor(long jarg1, ReplyObject jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native short ReplyObject_msgId(long jarg1, ReplyObject jarg1_);
  public final static native long new_MidReplyObject(short jarg1);
  public final static native void delete_MidReplyObject(long jarg1);
  public final static native boolean MidReplyObject_isReplyFor(long jarg1, MidReplyObject jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native short MidReplyObject_msgId(long jarg1, MidReplyObject jarg1_);
  public final static native long new_MidAndDataReplyObject(short jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void delete_MidAndDataReplyObject(long jarg1);
  public final static native void MidAndDataReplyObject_setData(long jarg1, MidAndDataReplyObject jarg1_, long jarg2);
  public final static native boolean MidAndDataReplyObject_isReplyFor(long jarg1, MidAndDataReplyObject jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native short MidAndDataReplyObject_msgId(long jarg1, MidAndDataReplyObject jarg1_);
  public final static native void XsDeviceConfiguration_construct(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native void XsDeviceConfiguration_assign(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, long jarg3, XsDeviceConfiguration jarg3_);
  public final static native void XsDeviceConfiguration_destruct(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native void XsDeviceConfiguration_copy(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceConfiguration jarg2_);
  public final static native int XsDeviceConfiguration_emptyClass(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native long XsDeviceConfiguration_findDevice(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsMtDeviceConfiguration_m_deviceId_set(long jarg1, XsMtDeviceConfiguration jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger XsMtDeviceConfiguration_m_deviceId_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_reserved_set(long jarg1, XsMtDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMtDeviceConfiguration_m_reserved_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_filterProfile_set(long jarg1, XsMtDeviceConfiguration jarg1_, int jarg2);
  public final static native int XsMtDeviceConfiguration_m_filterProfile_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_fwRevMajor_set(long jarg1, XsMtDeviceConfiguration jarg1_, short jarg2);
  public final static native short XsMtDeviceConfiguration_m_fwRevMajor_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_fwRevMinor_set(long jarg1, XsMtDeviceConfiguration jarg1_, short jarg2);
  public final static native short XsMtDeviceConfiguration_m_fwRevMinor_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_fwRevRevision_set(long jarg1, XsMtDeviceConfiguration jarg1_, short jarg2);
  public final static native short XsMtDeviceConfiguration_m_fwRevRevision_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_filterType_set(long jarg1, XsMtDeviceConfiguration jarg1_, char jarg2);
  public final static native char XsMtDeviceConfiguration_m_filterType_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_filterMajor_set(long jarg1, XsMtDeviceConfiguration jarg1_, short jarg2);
  public final static native short XsMtDeviceConfiguration_m_filterMajor_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native void XsMtDeviceConfiguration_m_filterMinor_set(long jarg1, XsMtDeviceConfiguration jarg1_, short jarg2);
  public final static native short XsMtDeviceConfiguration_m_filterMinor_get(long jarg1, XsMtDeviceConfiguration jarg1_);
  public final static native long new_XsMtDeviceConfiguration();
  public final static native void delete_XsMtDeviceConfiguration(long jarg1);
  public final static native void XsMasterDeviceConfiguration_m_masterDeviceId_set(long jarg1, XsMasterDeviceConfiguration jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger XsMasterDeviceConfiguration_m_masterDeviceId_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_samplingPeriod_set(long jarg1, XsMasterDeviceConfiguration jarg1_, int jarg2);
  public final static native int XsMasterDeviceConfiguration_m_samplingPeriod_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_outputSkipFactor_set(long jarg1, XsMasterDeviceConfiguration jarg1_, int jarg2);
  public final static native int XsMasterDeviceConfiguration_m_outputSkipFactor_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_reserved1_set(long jarg1, XsMasterDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMasterDeviceConfiguration_m_reserved1_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_date_set(long jarg1, XsMasterDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMasterDeviceConfiguration_m_date_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_time_set(long jarg1, XsMasterDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMasterDeviceConfiguration_m_time_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_productCode_set(long jarg1, XsMasterDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMasterDeviceConfiguration_m_productCode_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native void XsMasterDeviceConfiguration_m_reserved2_set(long jarg1, XsMasterDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsMasterDeviceConfiguration_m_reserved2_get(long jarg1, XsMasterDeviceConfiguration jarg1_);
  public final static native long new_XsMasterDeviceConfiguration();
  public final static native void delete_XsMasterDeviceConfiguration(long jarg1);
  public final static native long new_XsDeviceConfigurationException();
  public final static native void delete_XsDeviceConfigurationException(long jarg1);
  public final static native long new_XsDeviceConfiguration__SWIG_0(int jarg1);
  public final static native long new_XsDeviceConfiguration__SWIG_1();
  public final static native long new_XsDeviceConfiguration__SWIG_2(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native long XsDeviceConfiguration_opSet(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceConfiguration jarg2_);
  public final static native void delete_XsDeviceConfiguration(long jarg1);
  public final static native void XsDeviceConfiguration_clear(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native boolean XsDeviceConfiguration_empty(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native void XsDeviceConfiguration_readFromMessage(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDeviceConfiguration_writeToMessage(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native boolean XsDeviceConfiguration_containsDevice(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDeviceConfiguration_deviceInfo__SWIG_0(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDeviceConfiguration_XsDeviceConfiguration_deviceInfo__SWIG_0(long jarg1, XsDeviceConfiguration jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDeviceConfiguration_XsDeviceConfiguration_deviceInfo__SWIG_1(long jarg1, XsDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsDeviceConfiguration_deviceInfo__SWIG_1(long jarg1, XsDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsDeviceConfiguration_XsDeviceConfiguration_masterInfo(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native long XsDeviceConfiguration_masterInfo(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native void XsDeviceConfiguration_setNumberOfDevices(long jarg1, XsDeviceConfiguration jarg1_, long jarg2);
  public final static native long XsDeviceConfiguration_numberOfDevices(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native long XsDeviceConfiguration_deviceCount(long jarg1, XsDeviceConfiguration jarg1_);
  public final static native long new_CallbackHandler__SWIG_0(long jarg1);
  public final static native long new_CallbackHandler__SWIG_1();
  public final static native void delete_CallbackHandler(long jarg1);
  public final static native boolean CallbackHandler_packetAvailable(long jarg1, CallbackHandler jarg1_);
  public final static native long CallbackHandler_getNextPacket(long jarg1, CallbackHandler jarg1_);
  public final static native void delete_XsDevice(long jarg1);
  public final static native void XsDevice_addRef(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_removeRef(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_refCounter(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_master(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_findDevice(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDevice_findDeviceConst(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDevice_subDevice(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_subDeviceCount(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_busId(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_deviceId(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_firmwareVersion(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isMasterDevice(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isContainerDevice(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isInitialized(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isStandaloneDevice(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_deviceAtBusIdConst(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_deviceAtBusId(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_communicator(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_logFileInterface(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native int XsDevice_updatePortInfo(long jarg1, XsDevice jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native void XsDevice_setGotoConfigOnClose(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native int XsDevice_createLogFile(long jarg1, XsDevice jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsDevice_closeLogFile(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isMeasuring(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isRecording(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isReadingFromFile(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_checkDataCache(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_restartFilter(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_lastResult(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_lastResultText(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_recordingQueueLength(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_cacheSize(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_deviceState(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_supportsSyncSettings(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDevice_isCompatibleSyncSetting(long jarg1, XsDeviceIdClass jarg1_, long jarg2, long jarg3);
  public final static native long XsDevice_syncSettingsTimeResolutionInMicroSeconds(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDevice_opLessThen__SWIG_0(long jarg1, XsDevice jarg1_, long jarg2, XsDevice jarg2_);
  public final static native boolean XsDevice_opEquals__SWIG_0(long jarg1, XsDevice jarg1_, long jarg2, XsDevice jarg2_);
  public final static native boolean XsDevice_opLessThen__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDevice_opEquals__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsDevice_deviceConfiguration(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_deviceConfigurationRef(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_deviceConfigurationConst(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_initialize(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_initializeSoftwareCalibration(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_deinitializeSoftwareCalibration(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_batteryLevel(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_updateRateForDataIdentifier(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_updateRateForProcessedDataIdentifier(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_supportedUpdateRates__SWIG_0(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_supportedUpdateRates__SWIG_1(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_maximumUpdateRate(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_hasDataEnabled(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_hasProcessedDataEnabled(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_productCode(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_shortProductCode(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_portName(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_portInfo(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_baudRate(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_serialBaudRate(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_hardwareVersion(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_startRecording(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_triggerStartRecording(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_stopRecording(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_getStartRecordingPacketId(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_getStopRecordingPacketId(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_setOptions(long jarg1, XsDevice jarg1_, int jarg2, int jarg3);
  public final static native boolean XsDevice_areOptionsEnabled(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_getOptions(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_sendCustomMessage__SWIG_0(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_, boolean jarg3, long jarg4, XsMessageClass jarg4_, int jarg5);
  public final static native boolean XsDevice_sendCustomMessage__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_, boolean jarg3, long jarg4, XsMessageClass jarg4_);
  public final static native boolean XsDevice_sendRawMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native boolean XsDevice_sendCustomMessage__SWIG_2(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_, boolean jarg3, long jarg4, long jarg5, XsMessageClass jarg5_, int jarg6);
  public final static native boolean XsDevice_sendCustomMessage__SWIG_3(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_, boolean jarg3, long jarg4, long jarg5, XsMessageClass jarg5_);
  public final static native boolean XsDevice_waitForCustomMessage__SWIG_0(long jarg1, XsDevice jarg1_, long jarg2, long jarg3, XsMessageClass jarg3_, int jarg4);
  public final static native boolean XsDevice_waitForCustomMessage__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, long jarg3, XsMessageClass jarg3_);
  public final static native boolean XsDevice_waitForCustomMessage__SWIG_2(long jarg1, XsDevice jarg1_, long jarg2, long jarg3, XsMessageClass jarg3_, int jarg4);
  public final static native long XsDevice_addReplyObject(long jarg1, XsDevice jarg1_, long jarg2, short jarg3);
  public final static native void XsDevice_handleMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_handleDataPacket(long jarg1, XsDevice jarg1_, long jarg2, XsDataPacketClass jarg2_);
  public final static native void XsDevice_handleNonDataMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_handleErrorMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_handleWarningMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_handleWakeupMessage(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native boolean XsDevice_setSerialBaudRate(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_portConfiguration(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setPortConfiguration(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_isMotionTracker(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_operationalMode(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setOperationalMode(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_updateRate(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setUpdateRate(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_deviceOptionFlags(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setDeviceOptionFlags(long jarg1, XsDevice jarg1_, int jarg2, int jarg3);
  public final static native long XsDevice_outputConfiguration(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_processedOutputConfiguration(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setOutputConfiguration(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_isInStringOutputMode(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_canOutputConfiguration(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setCanOutputConfiguration(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native long XsDevice_canConfiguration(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setCanConfiguration(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_usesLegacyDeviceMode(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_stringOutputType(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_stringSamplePeriod(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_stringSkipFactor(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setStringOutputMode(long jarg1, XsDevice jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native long XsDevice_supportedStringOutputTypes(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_dataLength(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_syncSettings(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setSyncSettings(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_isSyncMaster(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isSyncSlave(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_supportedSyncSettings__SWIG_0(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_supportedSyncSettings__SWIG_1(long jarg1, XsDeviceIdClass jarg1_);
  public final static native boolean XsDevice_gotoMeasurement(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_gotoConfig(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_restoreFactoryDefaults(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_reset__SWIG_0(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_reset__SWIG_1(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_reopenPort__SWIG_0(long jarg1, XsDevice jarg1_, boolean jarg2, boolean jarg3);
  public final static native boolean XsDevice_reopenPort__SWIG_1(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native void XsDevice_writeDeviceSettingsToFile(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_flushInputBuffers(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_syncRole(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_loadLogFile(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_abortLoadLogFile(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_logFileName(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_resetOrientation(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_resetLogFileReadPosition(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_logFileSize(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_logFileReadPosition(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_updateCachedDeviceInformation(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_enableProtocol(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_disableProtocol(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_isProtocolEnabled(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_deviceBufferSize(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setDeviceBufferSize(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native int XsDevice_connectivityState(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_waitForAllDevicesInitialized(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_children(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_childCount(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_enableRadio(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_disableRadio(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_radioChannel(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isRadioEnabled(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_makeOperational(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isOperational(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isInSyncStationMode(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setSyncStationMode(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_stealthMode(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setStealthMode(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native void XsDevice_discardRetransmissions(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native void XsDevice_handleMasterIndication(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native boolean XsDevice_abortFlushing(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setDeviceAccepted(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDevice_setDeviceRejected(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsDevice_setAccessControlMode(long jarg1, XsDevice jarg1_, int jarg2, long jarg3);
  public final static native int XsDevice_accessControlMode(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_currentAccessControlList(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_setDeviceParameter(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceParameter jarg2_);
  public final static native int XsDevice_deviceParameter(long jarg1, XsDevice jarg1_, long jarg2, XsDeviceParameter jarg2_);
  public final static native int XsDevice_gnssPlatform(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setGnssPlatform(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_acceptConnection(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_rejectConnection(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_wirelessPriority(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setWirelessPriority(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_rejectReason(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_requestBatteryLevel(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_batteryLevelTime(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setTransportMode(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_transportMode(long jarg1, XsDevice jarg1_);
  public final static native short XsDevice_lastKnownRssi(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_setPacketErrorRate(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_packetErrorRate(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isBlueToothEnabled(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setBlueToothEnabled(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_isBusPowerEnabled(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setBusPowerEnabled(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_powerDown(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_errorMode(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setErrorMode(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_setHeadingOffset(long jarg1, XsDevice jarg1_, double jarg2);
  public final static native double XsDevice_headingOffset(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setLocationId(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native int XsDevice_locationId(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_getDeviceFromLocationId(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_objectAlignment(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setObjectAlignment(long jarg1, XsDevice jarg1_, long jarg2, XsMatrixClass jarg2_);
  public final static native double XsDevice_gravityMagnitude(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setGravityMagnitude(long jarg1, XsDevice jarg1_, double jarg2);
  public final static native long XsDevice_initialPositionLLA(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setInitialPositionLLA(long jarg1, XsDevice jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDevice_utcTime(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setUtcTime(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_reinitialize(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_xdaFilterProfile(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setXdaFilterProfile__SWIG_0(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_setXdaFilterProfile__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native long XsDevice_onboardFilterProfile(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setOnboardFilterProfile__SWIG_0(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_setOnboardFilterProfile__SWIG_1(long jarg1, XsDevice jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsDevice_replaceFilterProfile(long jarg1, XsDevice jarg1_, long jarg2, XsFilterProfile jarg2_, long jarg3, XsFilterProfile jarg3_);
  public final static native long XsDevice_availableOnboardFilterProfiles(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_availableXdaFilterProfiles(long jarg1, XsDevice jarg1_);
  public final static native double XsDevice_accelerometerRange(long jarg1, XsDevice jarg1_);
  public final static native double XsDevice_gyroscopeRange(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setNoRotation(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_startRepresentativeMotion(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_representativeMotionState(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_stopRepresentativeMotion(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_storeIccResults(long jarg1, XsDevice jarg1_);
  public final static native int XsDevice_rs485TransmissionDelay(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setRs485TransmissionDelay(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_runSelfTest(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_requestData(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_storeFilterState(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_getDataPacketByIndex(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native long XsDevice_getDataPacketCount(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_lastAvailableLiveData(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_takeFirstDataPacketInQueue(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_isInitialBiasUpdateEnabled(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setInitialBiasUpdateEnabled(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_isFixedGravityEnabled(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setFixedGravityEnabled(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native int XsDevice_createConfigFile(long jarg1, XsDevice jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native int XsDevice_applyConfigFile(long jarg1, XsDevice jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native boolean XsDevice_setAlignmentRotationMatrix(long jarg1, XsDevice jarg1_, int jarg2, long jarg3, XsMatrixClass jarg3_);
  public final static native long XsDevice_alignmentRotationMatrix(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native boolean XsDevice_setAlignmentRotationQuaternion(long jarg1, XsDevice jarg1_, int jarg2, long jarg3, XsQuaternionClass jarg3_);
  public final static native long XsDevice_alignmentRotationQuaternion(long jarg1, XsDevice jarg1_, int jarg2);
  public final static native long XsDevice_mutex(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_deviceIsDocked(long jarg1, XsDevice jarg1_, long jarg2, XsDevice jarg2_);
  public final static native boolean XsDevice_isLoadLogFileInProgress(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_waitForLoadLogFileDone(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_messageLooksSane(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_prepareForTermination(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_setGnssLeverArm(long jarg1, XsDevice jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsDevice_gnssLeverArm(long jarg1, XsDevice jarg1_);
  public final static native boolean XsDevice_requestUtcTime(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_handleUnavailableData(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native boolean XsDevice_writeEmtsPage(long jarg1, XsDevice jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void XsDevice_setSkipEmtsReadOnInit(long jarg1, XsDevice jarg1_, boolean jarg2);
  public final static native boolean XsDevice_readEmtsAndDeviceConfiguration(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_supportedStatusFlags(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_readMetaDataFromLogFile(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_onMessageSent(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_onMessageReceived(long jarg1, XsDevice jarg1_, long jarg2, XsMessageClass jarg2_);
  public final static native void XsDevice_onMessageDetected2(long jarg1, XsDevice jarg1_, int jarg2, long jarg3);
  public final static native void XsDevice_onSessionRestarted(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_onConnectionLost(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_onEofReached(long jarg1, XsDevice jarg1_);
  public final static native void XsDevice_onWirelessConnectionLost(long jarg1, XsDevice jarg1_);
  public final static native long XsDevice_deviceRecordingBufferItemCount(long jarg1, XsDevice jarg1_, long jarg2);
  public final static native long new_XsControl();
  public final static native void delete_XsControl(long jarg1);
  public final static native void XsControl_flushInputBuffers(long jarg1, XsControl jarg1_);
  public final static native long XsControl_resultText(int jarg1);
  public final static native void XsControl_clearHardwareError(long jarg1, XsControl jarg1_);
  public final static native void XsControl_close(long jarg1, XsControl jarg1_);
  public final static native boolean XsControl_openPort__SWIG_0(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_, int jarg3, long jarg4, boolean jarg5);
  public final static native boolean XsControl_openPort__SWIG_1(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_, int jarg3, long jarg4);
  public final static native boolean XsControl_openPort__SWIG_2(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_, int jarg3);
  public final static native boolean XsControl_openPort__SWIG_3(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, boolean jarg4);
  public final static native boolean XsControl_openPort__SWIG_4(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3);
  public final static native boolean XsControl_openPort__SWIG_5(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native boolean XsControl_openPortWithCredentials__SWIG_0(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, XsStringClass jarg3_, long jarg4, XsStringClass jarg4_, long jarg5);
  public final static native boolean XsControl_openPortWithCredentials__SWIG_1(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_, long jarg3, XsStringClass jarg3_, long jarg4, XsStringClass jarg4_);
  public final static native boolean XsControl_openCustomPort__SWIG_0(long jarg1, XsControl jarg1_, int jarg2, long jarg3, boolean jarg4);
  public final static native boolean XsControl_openCustomPort__SWIG_1(long jarg1, XsControl jarg1_, int jarg2, long jarg3);
  public final static native boolean XsControl_openImarPort_internal__SWIG_0(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_, int jarg3, int jarg4, long jarg5);
  public final static native boolean XsControl_openImarPort_internal__SWIG_1(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_, int jarg3, int jarg4);
  public final static native void XsControl_closePort__SWIG_0(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsControl_closePort__SWIG_1(long jarg1, XsControl jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native void XsControl_closePort__SWIG_2(long jarg1, XsControl jarg1_, long jarg2, XsPortInfoClass jarg2_);
  public final static native void XsControl_closeCustomPort(long jarg1, XsControl jarg1_, int jarg2);
  public final static native void XsControl_closePort__SWIG_3(long jarg1, XsControl jarg1_, long jarg2, XsDevice jarg2_);
  public final static native long XsControl_customPortInfo(long jarg1, XsControl jarg1_, int jarg2);
  public final static native boolean XsControl_openLogFile(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native int XsControl_lastResult(long jarg1, XsControl jarg1_);
  public final static native long XsControl_lastResultText(long jarg1, XsControl jarg1_);
  public final static native int XsControl_lastHardwareError(long jarg1, XsControl jarg1_);
  public final static native long XsControl_lastHardwareErrorDeviceId(long jarg1, XsControl jarg1_);
  public final static native int XsControl_deviceCount(long jarg1, XsControl jarg1_);
  public final static native int XsControl_mainDeviceCount(long jarg1, XsControl jarg1_);
  public final static native long XsControl_mainDeviceIds(long jarg1, XsControl jarg1_);
  public final static native int XsControl_mtCount(long jarg1, XsControl jarg1_);
  public final static native long XsControl_mtDeviceIds(long jarg1, XsControl jarg1_);
  public final static native long XsControl_deviceIds(long jarg1, XsControl jarg1_);
  public final static native long XsControl_getDeviceFromLocationId(long jarg1, XsControl jarg1_, int jarg2);
  public final static native long XsControl_dockDeviceId(long jarg1, XsControl jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsControl_isDeviceWireless(long jarg1, XsControl jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsControl_isDeviceDocked(long jarg1, XsControl jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native boolean XsControl_loadFilterProfiles(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native int XsControl_enabledOptions(long jarg1, XsControl jarg1_);
  public final static native int XsControl_disabledOptions(long jarg1, XsControl jarg1_);
  public final static native void XsControl_setOptions(long jarg1, XsControl jarg1_, int jarg2, int jarg3);
  public final static native void XsControl_setOptionsForce(long jarg1, XsControl jarg1_, int jarg2);
  public final static native boolean XsControl_setInitialPositionLLA(long jarg1, XsControl jarg1_, long jarg2, XsVectorClass jarg2_);
  public final static native long XsControl_device(long jarg1, XsControl jarg1_, long jarg2, XsDeviceIdClass jarg2_);
  public final static native long XsControl_mainDevices(long jarg1, XsControl jarg1_);
  public final static native long XsControl_broadcast(long jarg1, XsControl jarg1_);
  public final static native void XsControl_transmissionReceived(long jarg1, XsControl jarg1_, int jarg2, long jarg3);
  public final static native long XsControl_construct();
  public final static native void XsControl_destruct(long jarg1, XsControl jarg1_);
  public final static native boolean XsControl_finalizeOpenPort(long jarg1, XsControl jarg1_, long jarg2, Communicator jarg2_, long jarg3, XsPortInfoClass jarg3_, long jarg4, boolean jarg5);
  public final static native void XsControl_gotoConfig(long jarg1, XsControl jarg1_);
  public final static native void XsControl_gotoMeasurement(long jarg1, XsControl jarg1_);
  public final static native int XsControl_startRestoreCommunication(long jarg1, XsControl jarg1_, long jarg2, XsStringClass jarg2_);
  public final static native void XsControl_stopRestoreCommunication(long jarg1, XsControl jarg1_);
  public final static native long XsScanner_scanPorts__SWIG_0(int jarg1, int jarg2, boolean jarg3, boolean jarg4);
  public final static native long XsScanner_scanPorts__SWIG_1(int jarg1, int jarg2, boolean jarg3);
  public final static native long XsScanner_scanPorts__SWIG_2(int jarg1, int jarg2);
  public final static native long XsScanner_scanPorts__SWIG_3(int jarg1);
  public final static native long XsScanner_scanPorts__SWIG_4();
  public final static native long new_XsScanner();
  public final static native void delete_XsScanner(long jarg1);
  public final static native long XsVector3_SWIGUpcast(long jarg1);
  public final static native long XsPortInfoArrayClass_SWIGUpcast(long jarg1);
  public final static native long CallbackManagerXda_SWIGUpcast(long jarg1);
  public final static native long Communicator_SWIGUpcast(long jarg1);
  public final static native long DataLogger_SWIGUpcast(long jarg1);
  public final static native long MidReplyObject_SWIGUpcast(long jarg1);
  public final static native long MidAndDataReplyObject_SWIGUpcast(long jarg1);
  public final static native long CallbackHandler_SWIGUpcast(long jarg1);
  public final static native long XsDevice_SWIGUpcast(long jarg1);
  public final static native long XsControl_SWIGUpcast(long jarg1);
}
