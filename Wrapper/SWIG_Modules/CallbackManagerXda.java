/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class CallbackManagerXda extends XsCallback {
  private transient long swigCPtr;

  protected CallbackManagerXda(long cPtr, boolean cMemoryOwn) {
    super(minimalJNI.CallbackManagerXda_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CallbackManagerXda obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        minimalJNI.delete_CallbackManagerXda(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void onDeviceStateChanged(XsDevice dev, XsDeviceState newState, XsDeviceState oldState) {
    minimalJNI.CallbackManagerXda_onDeviceStateChanged(swigCPtr, this, XsDevice.getCPtr(dev), dev, newState.swigValue(), oldState.swigValue());
  }

  public void onLiveDataAvailable(XsDevice dev, XsDataPacketClass packet) {
    minimalJNI.CallbackManagerXda_onLiveDataAvailable(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsDataPacketClass.getCPtr(packet), packet);
  }

  public void onAllLiveDataAvailable(SWIGTYPE_p_XsDevicePtrArray devs, SWIGTYPE_p_XsDataPacketPtrArray packets) {
    minimalJNI.CallbackManagerXda_onAllLiveDataAvailable(swigCPtr, this, SWIGTYPE_p_XsDevicePtrArray.getCPtr(devs), SWIGTYPE_p_XsDataPacketPtrArray.getCPtr(packets));
  }

  public void onMissedPackets(XsDevice dev, int count, int first, int last) {
    minimalJNI.CallbackManagerXda_onMissedPackets(swigCPtr, this, XsDevice.getCPtr(dev), dev, count, first, last);
  }

  public void onDataUnavailable(XsDevice dev, long packetId) {
    minimalJNI.CallbackManagerXda_onDataUnavailable(swigCPtr, this, XsDevice.getCPtr(dev), dev, packetId);
  }

  public void onWakeupReceived(XsDevice dev) {
    minimalJNI.CallbackManagerXda_onWakeupReceived(swigCPtr, this, XsDevice.getCPtr(dev), dev);
  }

  public void onProgressUpdated(XsDevice dev, int current, int total, XsStringClass identifier) {
    minimalJNI.CallbackManagerXda_onProgressUpdated(swigCPtr, this, XsDevice.getCPtr(dev), dev, current, total, XsStringClass.getCPtr(identifier), identifier);
  }

  public int onWriteMessageToLogFile(XsDevice dev, XsMessageClass message) {
    return minimalJNI.CallbackManagerXda_onWriteMessageToLogFile(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsMessageClass.getCPtr(message), message);
  }

  public void onBufferedDataAvailable(XsDevice dev, XsDataPacketClass data) {
    minimalJNI.CallbackManagerXda_onBufferedDataAvailable(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsDataPacketClass.getCPtr(data), data);
  }

  public void onAllBufferedDataAvailable(SWIGTYPE_p_XsDevicePtrArray devs, SWIGTYPE_p_XsDataPacketPtrArray packets) {
    minimalJNI.CallbackManagerXda_onAllBufferedDataAvailable(swigCPtr, this, SWIGTYPE_p_XsDevicePtrArray.getCPtr(devs), SWIGTYPE_p_XsDataPacketPtrArray.getCPtr(packets));
  }

  public void onConnectivityChanged(XsDevice dev, XsConnectivityState newState) {
    minimalJNI.CallbackManagerXda_onConnectivityChanged(swigCPtr, this, XsDevice.getCPtr(dev), dev, newState.swigValue());
  }

  public void onInfoResponse(XsDevice dev, SWIGTYPE_p_XsInfoRequest request) {
    minimalJNI.CallbackManagerXda_onInfoResponse(swigCPtr, this, XsDevice.getCPtr(dev), dev, SWIGTYPE_p_XsInfoRequest.getCPtr(request));
  }

  public void onError(XsDevice dev, XsResultValue error) {
    minimalJNI.CallbackManagerXda_onError(swigCPtr, this, XsDevice.getCPtr(dev), dev, error.swigValue());
  }

  public void onNonDataMessage(XsDevice dev, XsMessageClass message) {
    minimalJNI.CallbackManagerXda_onNonDataMessage(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsMessageClass.getCPtr(message), message);
  }

  public void onMessageDetected(XsDevice dev, XsProtocolType type, SWIGTYPE_p_XsByteArray rawMessage) {
    minimalJNI.CallbackManagerXda_onMessageDetected(swigCPtr, this, XsDevice.getCPtr(dev), dev, type.swigValue(), SWIGTYPE_p_XsByteArray.getCPtr(rawMessage));
  }

  public void onMessageReceivedFromDevice(XsDevice dev, XsMessageClass message) {
    minimalJNI.CallbackManagerXda_onMessageReceivedFromDevice(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsMessageClass.getCPtr(message), message);
  }

  public void onMessageSentToDevice(XsDevice dev, XsMessageClass message) {
    minimalJNI.CallbackManagerXda_onMessageSentToDevice(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsMessageClass.getCPtr(message), message);
  }

  public void onDataAvailable(XsDevice dev, XsDataPacketClass data) {
    minimalJNI.CallbackManagerXda_onDataAvailable(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsDataPacketClass.getCPtr(data), data);
  }

  public void onAllDataAvailable(SWIGTYPE_p_XsDevicePtrArray devs, SWIGTYPE_p_XsDataPacketPtrArray packets) {
    minimalJNI.CallbackManagerXda_onAllDataAvailable(swigCPtr, this, SWIGTYPE_p_XsDevicePtrArray.getCPtr(devs), SWIGTYPE_p_XsDataPacketPtrArray.getCPtr(packets));
  }

  public void onRecordedDataAvailable(XsDevice dev, XsDataPacketClass data) {
    minimalJNI.CallbackManagerXda_onRecordedDataAvailable(swigCPtr, this, XsDevice.getCPtr(dev), dev, XsDataPacketClass.getCPtr(data), data);
  }

  public void onAllRecordedDataAvailable(SWIGTYPE_p_XsDevicePtrArray devs, SWIGTYPE_p_XsDataPacketPtrArray packets) {
    minimalJNI.CallbackManagerXda_onAllRecordedDataAvailable(swigCPtr, this, SWIGTYPE_p_XsDevicePtrArray.getCPtr(devs), SWIGTYPE_p_XsDataPacketPtrArray.getCPtr(packets));
  }

  public void onTransmissionRequest(int channelId, SWIGTYPE_p_XsByteArray data) {
    minimalJNI.CallbackManagerXda_onTransmissionRequest(swigCPtr, this, channelId, SWIGTYPE_p_XsByteArray.getCPtr(data));
  }

  public void onRestoreCommunication(XsStringClass portName, XsResultValue result) {
    minimalJNI.CallbackManagerXda_onRestoreCommunication(swigCPtr, this, XsStringClass.getCPtr(portName), portName, result.swigValue());
  }

  public CallbackManagerXda() {
    this(minimalJNI.new_CallbackManagerXda(), true);
  }

  public void clearCallbackHandlers(boolean chain) {
    minimalJNI.CallbackManagerXda_clearCallbackHandlers__SWIG_0(swigCPtr, this, chain);
  }

  public void clearCallbackHandlers() {
    minimalJNI.CallbackManagerXda_clearCallbackHandlers__SWIG_1(swigCPtr, this);
  }

  public void addCallbackHandler(XsCallbackPlainC cb, boolean chain) {
    minimalJNI.CallbackManagerXda_addCallbackHandler__SWIG_0(swigCPtr, this, XsCallbackPlainC.getCPtr(cb), cb, chain);
  }

  public void addCallbackHandler(XsCallbackPlainC cb) {
    minimalJNI.CallbackManagerXda_addCallbackHandler__SWIG_1(swigCPtr, this, XsCallbackPlainC.getCPtr(cb), cb);
  }

  public void removeCallbackHandler(XsCallbackPlainC cb, boolean chain) {
    minimalJNI.CallbackManagerXda_removeCallbackHandler__SWIG_0(swigCPtr, this, XsCallbackPlainC.getCPtr(cb), cb, chain);
  }

  public void removeCallbackHandler(XsCallbackPlainC cb) {
    minimalJNI.CallbackManagerXda_removeCallbackHandler__SWIG_1(swigCPtr, this, XsCallbackPlainC.getCPtr(cb), cb);
  }

  public void clearChainedManagers() {
    minimalJNI.CallbackManagerXda_clearChainedManagers(swigCPtr, this);
  }

  public void addChainedManager(CallbackManagerXda cm) {
    minimalJNI.CallbackManagerXda_addChainedManager(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm);
  }

  public void removeChainedManager(CallbackManagerXda cm) {
    minimalJNI.CallbackManagerXda_removeChainedManager(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm);
  }

  public void copyCallbackHandlersTo(CallbackManagerXda cm, boolean chain) {
    minimalJNI.CallbackManagerXda_copyCallbackHandlersTo__SWIG_0(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm, chain);
  }

  public void copyCallbackHandlersTo(CallbackManagerXda cm) {
    minimalJNI.CallbackManagerXda_copyCallbackHandlersTo__SWIG_1(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm);
  }

  public void copyCallbackHandlersFrom(CallbackManagerXda cm, boolean chain) {
    minimalJNI.CallbackManagerXda_copyCallbackHandlersFrom__SWIG_0(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm, chain);
  }

  public void copyCallbackHandlersFrom(CallbackManagerXda cm) {
    minimalJNI.CallbackManagerXda_copyCallbackHandlersFrom__SWIG_1(swigCPtr, this, CallbackManagerXda.getCPtr(cm), cm);
  }

}
