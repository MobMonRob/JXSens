/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package asdf;

public class XsVectorClass {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsVectorClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsVectorClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        minimalJNI.delete_XsVectorClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsVectorClass(SWIGTYPE_p_XsSize sz, SWIGTYPE_p_XsReal src) {
    this(minimalJNI.new_XsVectorClass__SWIG_0(SWIGTYPE_p_XsSize.getCPtr(sz), SWIGTYPE_p_XsReal.getCPtr(src)), true);
  }

  public XsVectorClass(SWIGTYPE_p_XsSize sz) {
    this(minimalJNI.new_XsVectorClass__SWIG_1(SWIGTYPE_p_XsSize.getCPtr(sz)), true);
  }

  public XsVectorClass() {
    this(minimalJNI.new_XsVectorClass__SWIG_2(), true);
  }

  public XsVectorClass(XsVectorClass other) {
    this(minimalJNI.new_XsVectorClass__SWIG_3(XsVectorClass.getCPtr(other), other), true);
  }

  public XsVectorClass(SWIGTYPE_p_XsReal ref, SWIGTYPE_p_XsSize sz, SWIGTYPE_p_XsDataFlags flags_) {
    this(minimalJNI.new_XsVectorClass__SWIG_4(SWIGTYPE_p_XsReal.getCPtr(ref), SWIGTYPE_p_XsSize.getCPtr(sz), SWIGTYPE_p_XsDataFlags.getCPtr(flags_)), true);
  }

  public XsVectorClass(SWIGTYPE_p_XsReal ref, SWIGTYPE_p_XsSize sz) {
    this(minimalJNI.new_XsVectorClass__SWIG_5(SWIGTYPE_p_XsReal.getCPtr(ref), SWIGTYPE_p_XsSize.getCPtr(sz)), true);
  }

  public XsVectorClass(XsVectorClass other, SWIGTYPE_p_XsReal ref, SWIGTYPE_p_XsSize sz, SWIGTYPE_p_XsDataFlags flags_) {
    this(minimalJNI.new_XsVectorClass__SWIG_6(XsVectorClass.getCPtr(other), other, SWIGTYPE_p_XsReal.getCPtr(ref), SWIGTYPE_p_XsSize.getCPtr(sz), SWIGTYPE_p_XsDataFlags.getCPtr(flags_)), true);
  }

  public XsVectorClass(XsVectorClass other, SWIGTYPE_p_XsReal ref, SWIGTYPE_p_XsSize sz) {
    this(minimalJNI.new_XsVectorClass__SWIG_7(XsVectorClass.getCPtr(other), other, SWIGTYPE_p_XsReal.getCPtr(ref), SWIGTYPE_p_XsSize.getCPtr(sz)), true);
  }

  public XsVectorClass(XsQuaternionClass quat, SWIGTYPE_p_XsReal deltaT) {
    this(minimalJNI.new_XsVectorClass__SWIG_8(XsQuaternionClass.getCPtr(quat), quat, SWIGTYPE_p_XsReal.getCPtr(deltaT)), true);
  }

  public XsVectorClass opSet(XsVectorClass other) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opSet(swigCPtr, this, XsVectorClass.getCPtr(other), other), false);
  }

  public void assign(SWIGTYPE_p_XsSize sz, SWIGTYPE_p_XsReal src) {
    minimalJNI.XsVectorClass_assign(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(sz), SWIGTYPE_p_XsReal.getCPtr(src));
  }

  public void setSize(SWIGTYPE_p_XsSize sz) {
    minimalJNI.XsVectorClass_setSize(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(sz));
  }

  public SWIGTYPE_p_XsSize size() {
    return new SWIGTYPE_p_XsSize(minimalJNI.XsVectorClass_size(swigCPtr, this), true);
  }

  public SWIGTYPE_p_XsReal data() {
    long cPtr = minimalJNI.XsVectorClass_data(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_XsReal(cPtr, false);
  }

  public XsVectorClass opMult(SWIGTYPE_p_XsReal scalar) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opMult(swigCPtr, this, SWIGTYPE_p_XsReal.getCPtr(scalar)), true);
  }

  public void opSelfMultiplication(SWIGTYPE_p_XsReal scalar) {
    minimalJNI.XsVectorClass_opSelfMultiplication(swigCPtr, this, SWIGTYPE_p_XsReal.getCPtr(scalar));
  }

  public SWIGTYPE_p_XsReal at(SWIGTYPE_p_XsSize index) {
    return new SWIGTYPE_p_XsReal(minimalJNI.XsVectorClass_at(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index)), false);
  }

  public SWIGTYPE_p_XsReal value(SWIGTYPE_p_XsSize index) {
    return new SWIGTYPE_p_XsReal(minimalJNI.XsVectorClass_value(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index)), true);
  }

  public void setValue(SWIGTYPE_p_XsSize index, SWIGTYPE_p_XsReal val) {
    minimalJNI.XsVectorClass_setValue(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index), SWIGTYPE_p_XsReal.getCPtr(val));
  }

  public SWIGTYPE_p_XsReal opSquareBracket(SWIGTYPE_p_XsSize index) {
    return new SWIGTYPE_p_XsReal(minimalJNI.XsVectorClass_opSquareBracket(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index)), true);
  }

  public SWIGTYPE_p_XsReal dotProduct(XsVectorClass v) {
    return new SWIGTYPE_p_XsReal(minimalJNI.XsVectorClass_dotProduct(swigCPtr, this, XsVectorClass.getCPtr(v), v), true);
  }

  public SWIGTYPE_p_XsReal cartesianLength() {
    return new SWIGTYPE_p_XsReal(minimalJNI.XsVectorClass_cartesianLength(swigCPtr, this), true);
  }

  public void normalize() {
    minimalJNI.XsVectorClass_normalize(swigCPtr, this);
  }

  public void setZero() {
    minimalJNI.XsVectorClass_setZero(swigCPtr, this);
  }

  public boolean empty() {
    return minimalJNI.XsVectorClass_empty(swigCPtr, this);
  }

  public XsVectorClass angularVelocityFromQuaternion(XsQuaternionClass quat, SWIGTYPE_p_XsReal deltaT) {
    return new XsVectorClass(minimalJNI.XsVectorClass_angularVelocityFromQuaternion(swigCPtr, this, XsQuaternionClass.getCPtr(quat), quat, SWIGTYPE_p_XsReal.getCPtr(deltaT)), false);
  }

  public XsVectorClass opSubtract(XsVectorClass sub) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opSubtract(swigCPtr, this, XsVectorClass.getCPtr(sub), sub), true);
  }

  public XsVectorClass opPlus(XsVectorClass sub) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opPlus(swigCPtr, this, XsVectorClass.getCPtr(sub), sub), true);
  }

  public XsVectorClass opSubtractEquals(XsVectorClass sub) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opSubtractEquals(swigCPtr, this, XsVectorClass.getCPtr(sub), sub), true);
  }

  public XsVectorClass opPlusEquals(XsVectorClass sub) {
    return new XsVectorClass(minimalJNI.XsVectorClass_opPlusEquals(swigCPtr, this, XsVectorClass.getCPtr(sub), sub), true);
  }

  public boolean opEquals(XsVectorClass other) {
    return minimalJNI.XsVectorClass_opEquals(swigCPtr, this, XsVectorClass.getCPtr(other), other);
  }

  public boolean isEqual(XsVectorClass other, SWIGTYPE_p_XsReal epsilon) {
    return minimalJNI.XsVectorClass_isEqual(swigCPtr, this, XsVectorClass.getCPtr(other), other, SWIGTYPE_p_XsReal.getCPtr(epsilon));
  }

  public SWIGTYPE_p_std__vectorT_XsReal_t toVector() {
    return new SWIGTYPE_p_std__vectorT_XsReal_t(minimalJNI.XsVectorClass_toVector(swigCPtr, this), true);
  }

  public void zero() {
    minimalJNI.XsVectorClass_zero(swigCPtr, this);
  }

  public void fill(SWIGTYPE_p_XsReal val) {
    minimalJNI.XsVectorClass_fill(swigCPtr, this, SWIGTYPE_p_XsReal.getCPtr(val));
  }

  public void swap(XsVectorClass b) {
    minimalJNI.XsVectorClass_swap(swigCPtr, this, XsVectorClass.getCPtr(b), b);
  }

  public void append(XsVectorClass other) {
    minimalJNI.XsVectorClass_append(swigCPtr, this, XsVectorClass.getCPtr(other), other);
  }

  public void clear() {
    minimalJNI.XsVectorClass_clear(swigCPtr, this);
  }

  public void reverse() {
    minimalJNI.XsVectorClass_reverse(swigCPtr, this);
  }

}
