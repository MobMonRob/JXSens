/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package asdf;

public final class XsResultValue {
  public final static XsResultValue XRV_OK = new XsResultValue("XRV_OK", minimalJNI.XRV_OK_get());
  public final static XsResultValue XRV_NOBUS = new XsResultValue("XRV_NOBUS", minimalJNI.XRV_NOBUS_get());
  public final static XsResultValue XRV_BUSNOTREADY = new XsResultValue("XRV_BUSNOTREADY", minimalJNI.XRV_BUSNOTREADY_get());
  public final static XsResultValue XRV_INVALIDPERIOD = new XsResultValue("XRV_INVALIDPERIOD", minimalJNI.XRV_INVALIDPERIOD_get());
  public final static XsResultValue XRV_INVALIDMSG = new XsResultValue("XRV_INVALIDMSG", minimalJNI.XRV_INVALIDMSG_get());
  public final static XsResultValue XRV_INITBUSFAIL1 = new XsResultValue("XRV_INITBUSFAIL1", minimalJNI.XRV_INITBUSFAIL1_get());
  public final static XsResultValue XRV_INITBUSFAIL2 = new XsResultValue("XRV_INITBUSFAIL2", minimalJNI.XRV_INITBUSFAIL2_get());
  public final static XsResultValue XRV_INITBUSFAIL3 = new XsResultValue("XRV_INITBUSFAIL3", minimalJNI.XRV_INITBUSFAIL3_get());
  public final static XsResultValue XRV_SETBIDFAIL1 = new XsResultValue("XRV_SETBIDFAIL1", minimalJNI.XRV_SETBIDFAIL1_get());
  public final static XsResultValue XRV_SETBIDFAIL2 = new XsResultValue("XRV_SETBIDFAIL2", minimalJNI.XRV_SETBIDFAIL2_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL1 = new XsResultValue("XRV_MEASUREMENTFAIL1", minimalJNI.XRV_MEASUREMENTFAIL1_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL2 = new XsResultValue("XRV_MEASUREMENTFAIL2", minimalJNI.XRV_MEASUREMENTFAIL2_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL3 = new XsResultValue("XRV_MEASUREMENTFAIL3", minimalJNI.XRV_MEASUREMENTFAIL3_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL4 = new XsResultValue("XRV_MEASUREMENTFAIL4", minimalJNI.XRV_MEASUREMENTFAIL4_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL5 = new XsResultValue("XRV_MEASUREMENTFAIL5", minimalJNI.XRV_MEASUREMENTFAIL5_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL6 = new XsResultValue("XRV_MEASUREMENTFAIL6", minimalJNI.XRV_MEASUREMENTFAIL6_get());
  public final static XsResultValue XRV_TIMEROVERFLOW = new XsResultValue("XRV_TIMEROVERFLOW", minimalJNI.XRV_TIMEROVERFLOW_get());
  public final static XsResultValue XRV_BAUDRATEINVALID = new XsResultValue("XRV_BAUDRATEINVALID", minimalJNI.XRV_BAUDRATEINVALID_get());
  public final static XsResultValue XRV_INVALIDPARAM = new XsResultValue("XRV_INVALIDPARAM", minimalJNI.XRV_INVALIDPARAM_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL7 = new XsResultValue("XRV_MEASUREMENTFAIL7", minimalJNI.XRV_MEASUREMENTFAIL7_get());
  public final static XsResultValue XRV_MEASUREMENTFAIL8 = new XsResultValue("XRV_MEASUREMENTFAIL8", minimalJNI.XRV_MEASUREMENTFAIL8_get());
  public final static XsResultValue XRV_WIRELESSFAIL = new XsResultValue("XRV_WIRELESSFAIL", minimalJNI.XRV_WIRELESSFAIL_get());
  public final static XsResultValue XRV_DEVICEERROR = new XsResultValue("XRV_DEVICEERROR", minimalJNI.XRV_DEVICEERROR_get());
  public final static XsResultValue XRV_DATAOVERFLOW = new XsResultValue("XRV_DATAOVERFLOW", minimalJNI.XRV_DATAOVERFLOW_get());
  public final static XsResultValue XRV_BUFFEROVERFLOW = new XsResultValue("XRV_BUFFEROVERFLOW", minimalJNI.XRV_BUFFEROVERFLOW_get());
  public final static XsResultValue XRV_EXTTRIGGERERROR = new XsResultValue("XRV_EXTTRIGGERERROR", minimalJNI.XRV_EXTTRIGGERERROR_get());
  public final static XsResultValue XRV_SAMPLESTREAMERROR = new XsResultValue("XRV_SAMPLESTREAMERROR", minimalJNI.XRV_SAMPLESTREAMERROR_get());
  public final static XsResultValue XRV_POWER_DIP = new XsResultValue("XRV_POWER_DIP", minimalJNI.XRV_POWER_DIP_get());
  public final static XsResultValue XRV_POWER_OVERCURRENT = new XsResultValue("XRV_POWER_OVERCURRENT", minimalJNI.XRV_POWER_OVERCURRENT_get());
  public final static XsResultValue XRV_OVERHEATING = new XsResultValue("XRV_OVERHEATING", minimalJNI.XRV_OVERHEATING_get());
  public final static XsResultValue XRV_BATTERYLOW = new XsResultValue("XRV_BATTERYLOW", minimalJNI.XRV_BATTERYLOW_get());
  public final static XsResultValue XRV_INVALIDFILTERPROFILE = new XsResultValue("XRV_INVALIDFILTERPROFILE", minimalJNI.XRV_INVALIDFILTERPROFILE_get());
  public final static XsResultValue XRV_INVALIDSTOREDSETTINGS = new XsResultValue("XRV_INVALIDSTOREDSETTINGS", minimalJNI.XRV_INVALIDSTOREDSETTINGS_get());
  public final static XsResultValue XRV_ACCESSDENIED = new XsResultValue("XRV_ACCESSDENIED", minimalJNI.XRV_ACCESSDENIED_get());
  public final static XsResultValue XRV_FILEERROR = new XsResultValue("XRV_FILEERROR", minimalJNI.XRV_FILEERROR_get());
  public final static XsResultValue XRV_OUTPUTCONFIGERROR = new XsResultValue("XRV_OUTPUTCONFIGERROR", minimalJNI.XRV_OUTPUTCONFIGERROR_get());
  public final static XsResultValue XRV_FILE_SYSTEM_CORRUPT = new XsResultValue("XRV_FILE_SYSTEM_CORRUPT", minimalJNI.XRV_FILE_SYSTEM_CORRUPT_get());
  public final static XsResultValue XRV_ERROR = new XsResultValue("XRV_ERROR", minimalJNI.XRV_ERROR_get());
  public final static XsResultValue XRV_NOTIMPLEMENTED = new XsResultValue("XRV_NOTIMPLEMENTED", minimalJNI.XRV_NOTIMPLEMENTED_get());
  public final static XsResultValue XRV_TIMEOUT = new XsResultValue("XRV_TIMEOUT", minimalJNI.XRV_TIMEOUT_get());
  public final static XsResultValue XRV_TIMEOUTNODATA = new XsResultValue("XRV_TIMEOUTNODATA", minimalJNI.XRV_TIMEOUTNODATA_get());
  public final static XsResultValue XRV_CHECKSUMFAULT = new XsResultValue("XRV_CHECKSUMFAULT", minimalJNI.XRV_CHECKSUMFAULT_get());
  public final static XsResultValue XRV_OUTOFMEMORY = new XsResultValue("XRV_OUTOFMEMORY", minimalJNI.XRV_OUTOFMEMORY_get());
  public final static XsResultValue XRV_NOTFOUND = new XsResultValue("XRV_NOTFOUND", minimalJNI.XRV_NOTFOUND_get());
  public final static XsResultValue XRV_UNEXPECTEDMSG = new XsResultValue("XRV_UNEXPECTEDMSG", minimalJNI.XRV_UNEXPECTEDMSG_get());
  public final static XsResultValue XRV_INVALIDID = new XsResultValue("XRV_INVALIDID", minimalJNI.XRV_INVALIDID_get());
  public final static XsResultValue XRV_INVALIDOPERATION = new XsResultValue("XRV_INVALIDOPERATION", minimalJNI.XRV_INVALIDOPERATION_get());
  public final static XsResultValue XRV_INSUFFICIENTSPACE = new XsResultValue("XRV_INSUFFICIENTSPACE", minimalJNI.XRV_INSUFFICIENTSPACE_get());
  public final static XsResultValue XRV_INPUTCANNOTBEOPENED = new XsResultValue("XRV_INPUTCANNOTBEOPENED", minimalJNI.XRV_INPUTCANNOTBEOPENED_get());
  public final static XsResultValue XRV_OUTPUTCANNOTBEOPENED = new XsResultValue("XRV_OUTPUTCANNOTBEOPENED", minimalJNI.XRV_OUTPUTCANNOTBEOPENED_get());
  public final static XsResultValue XRV_ALREADYOPEN = new XsResultValue("XRV_ALREADYOPEN", minimalJNI.XRV_ALREADYOPEN_get());
  public final static XsResultValue XRV_ENDOFFILE = new XsResultValue("XRV_ENDOFFILE", minimalJNI.XRV_ENDOFFILE_get());
  public final static XsResultValue XRV_COULDNOTREADSETTINGS = new XsResultValue("XRV_COULDNOTREADSETTINGS", minimalJNI.XRV_COULDNOTREADSETTINGS_get());
  public final static XsResultValue XRV_NODATA = new XsResultValue("XRV_NODATA", minimalJNI.XRV_NODATA_get());
  public final static XsResultValue XRV_READONLY = new XsResultValue("XRV_READONLY", minimalJNI.XRV_READONLY_get());
  public final static XsResultValue XRV_NULLPTR = new XsResultValue("XRV_NULLPTR", minimalJNI.XRV_NULLPTR_get());
  public final static XsResultValue XRV_INSUFFICIENTDATA = new XsResultValue("XRV_INSUFFICIENTDATA", minimalJNI.XRV_INSUFFICIENTDATA_get());
  public final static XsResultValue XRV_BUSY = new XsResultValue("XRV_BUSY", minimalJNI.XRV_BUSY_get());
  public final static XsResultValue XRV_INVALIDINSTANCE = new XsResultValue("XRV_INVALIDINSTANCE", minimalJNI.XRV_INVALIDINSTANCE_get());
  public final static XsResultValue XRV_DATACORRUPT = new XsResultValue("XRV_DATACORRUPT", minimalJNI.XRV_DATACORRUPT_get());
  public final static XsResultValue XRV_READINITFAILED = new XsResultValue("XRV_READINITFAILED", minimalJNI.XRV_READINITFAILED_get());
  public final static XsResultValue XRV_NOXMFOUND = new XsResultValue("XRV_NOXMFOUND", minimalJNI.XRV_NOXMFOUND_get());
  public final static XsResultValue XRV_DEVICECOUNTZERO = new XsResultValue("XRV_DEVICECOUNTZERO", minimalJNI.XRV_DEVICECOUNTZERO_get());
  public final static XsResultValue XRV_MTLOCATIONINVALID = new XsResultValue("XRV_MTLOCATIONINVALID", minimalJNI.XRV_MTLOCATIONINVALID_get());
  public final static XsResultValue XRV_INSUFFICIENTMTS = new XsResultValue("XRV_INSUFFICIENTMTS", minimalJNI.XRV_INSUFFICIENTMTS_get());
  public final static XsResultValue XRV_INITFUSIONFAILED = new XsResultValue("XRV_INITFUSIONFAILED", minimalJNI.XRV_INITFUSIONFAILED_get());
  public final static XsResultValue XRV_OTHER = new XsResultValue("XRV_OTHER", minimalJNI.XRV_OTHER_get());
  public final static XsResultValue XRV_NOFILEOPEN = new XsResultValue("XRV_NOFILEOPEN", minimalJNI.XRV_NOFILEOPEN_get());
  public final static XsResultValue XRV_NOPORTOPEN = new XsResultValue("XRV_NOPORTOPEN", minimalJNI.XRV_NOPORTOPEN_get());
  public final static XsResultValue XRV_NOFILEORPORTOPEN = new XsResultValue("XRV_NOFILEORPORTOPEN", minimalJNI.XRV_NOFILEORPORTOPEN_get());
  public final static XsResultValue XRV_PORTNOTFOUND = new XsResultValue("XRV_PORTNOTFOUND", minimalJNI.XRV_PORTNOTFOUND_get());
  public final static XsResultValue XRV_INITPORTFAILED = new XsResultValue("XRV_INITPORTFAILED", minimalJNI.XRV_INITPORTFAILED_get());
  public final static XsResultValue XRV_CALIBRATIONFAILED = new XsResultValue("XRV_CALIBRATIONFAILED", minimalJNI.XRV_CALIBRATIONFAILED_get());
  public final static XsResultValue XRV_CONFIGCHECKFAIL = new XsResultValue("XRV_CONFIGCHECKFAIL", minimalJNI.XRV_CONFIGCHECKFAIL_get());
  public final static XsResultValue XRV_ALREADYDONE = new XsResultValue("XRV_ALREADYDONE", minimalJNI.XRV_ALREADYDONE_get());
  public final static XsResultValue XRV_SYNC_SINGLE_SLAVE = new XsResultValue("XRV_SYNC_SINGLE_SLAVE", minimalJNI.XRV_SYNC_SINGLE_SLAVE_get());
  public final static XsResultValue XRV_SYNC_SECOND_MASTER = new XsResultValue("XRV_SYNC_SECOND_MASTER", minimalJNI.XRV_SYNC_SECOND_MASTER_get());
  public final static XsResultValue XRV_SYNC_NO_SYNC = new XsResultValue("XRV_SYNC_NO_SYNC", minimalJNI.XRV_SYNC_NO_SYNC_get());
  public final static XsResultValue XRV_SYNC_NO_MASTER = new XsResultValue("XRV_SYNC_NO_MASTER", minimalJNI.XRV_SYNC_NO_MASTER_get());
  public final static XsResultValue XRV_SYNC_DATA_MISSING = new XsResultValue("XRV_SYNC_DATA_MISSING", minimalJNI.XRV_SYNC_DATA_MISSING_get());
  public final static XsResultValue XRV_VERSION_TOO_LOW = new XsResultValue("XRV_VERSION_TOO_LOW", minimalJNI.XRV_VERSION_TOO_LOW_get());
  public final static XsResultValue XRV_VERSION_PROBLEM = new XsResultValue("XRV_VERSION_PROBLEM", minimalJNI.XRV_VERSION_PROBLEM_get());
  public final static XsResultValue XRV_ABORTED = new XsResultValue("XRV_ABORTED", minimalJNI.XRV_ABORTED_get());
  public final static XsResultValue XRV_UNSUPPORTED = new XsResultValue("XRV_UNSUPPORTED", minimalJNI.XRV_UNSUPPORTED_get());
  public final static XsResultValue XRV_PACKETCOUNTERMISSED = new XsResultValue("XRV_PACKETCOUNTERMISSED", minimalJNI.XRV_PACKETCOUNTERMISSED_get());
  public final static XsResultValue XRV_MEASUREMENTFAILED = new XsResultValue("XRV_MEASUREMENTFAILED", minimalJNI.XRV_MEASUREMENTFAILED_get());
  public final static XsResultValue XRV_STARTRECORDINGFAILED = new XsResultValue("XRV_STARTRECORDINGFAILED", minimalJNI.XRV_STARTRECORDINGFAILED_get());
  public final static XsResultValue XRV_STOPRECORDINGFAILED = new XsResultValue("XRV_STOPRECORDINGFAILED", minimalJNI.XRV_STOPRECORDINGFAILED_get());
  public final static XsResultValue XRV_RADIO_CHANNEL_IN_USE = new XsResultValue("XRV_RADIO_CHANNEL_IN_USE", minimalJNI.XRV_RADIO_CHANNEL_IN_USE_get());
  public final static XsResultValue XRV_UNEXPECTED_DISCONNECT = new XsResultValue("XRV_UNEXPECTED_DISCONNECT", minimalJNI.XRV_UNEXPECTED_DISCONNECT_get());
  public final static XsResultValue XRV_TOO_MANY_CONNECTED_TRACKERS = new XsResultValue("XRV_TOO_MANY_CONNECTED_TRACKERS", minimalJNI.XRV_TOO_MANY_CONNECTED_TRACKERS_get());
  public final static XsResultValue XRV_GOTOCONFIGFAILED = new XsResultValue("XRV_GOTOCONFIGFAILED", minimalJNI.XRV_GOTOCONFIGFAILED_get());
  public final static XsResultValue XRV_OUTOFRANGE = new XsResultValue("XRV_OUTOFRANGE", minimalJNI.XRV_OUTOFRANGE_get());
  public final static XsResultValue XRV_BACKINRANGE = new XsResultValue("XRV_BACKINRANGE", minimalJNI.XRV_BACKINRANGE_get());
  public final static XsResultValue XRV_EXPECTED_DISCONNECT = new XsResultValue("XRV_EXPECTED_DISCONNECT", minimalJNI.XRV_EXPECTED_DISCONNECT_get());
  public final static XsResultValue XRV_RESTORE_COMMUNICATION_FAILED = new XsResultValue("XRV_RESTORE_COMMUNICATION_FAILED", minimalJNI.XRV_RESTORE_COMMUNICATION_FAILED_get());
  public final static XsResultValue XRV_RESTORE_COMMUNICATION_STOPPED = new XsResultValue("XRV_RESTORE_COMMUNICATION_STOPPED", minimalJNI.XRV_RESTORE_COMMUNICATION_STOPPED_get());
  public final static XsResultValue XRV_EXPECTED_CONNECT = new XsResultValue("XRV_EXPECTED_CONNECT", minimalJNI.XRV_EXPECTED_CONNECT_get());
  public final static XsResultValue XRV_IN_USE = new XsResultValue("XRV_IN_USE", minimalJNI.XRV_IN_USE_get());
  public final static XsResultValue XRV_PERFORMANCE_WARNING = new XsResultValue("XRV_PERFORMANCE_WARNING", minimalJNI.XRV_PERFORMANCE_WARNING_get());
  public final static XsResultValue XRV_PERFORMANCE_OK = new XsResultValue("XRV_PERFORMANCE_OK", minimalJNI.XRV_PERFORMANCE_OK_get());
  public final static XsResultValue XRV_SHUTTINGDOWN = new XsResultValue("XRV_SHUTTINGDOWN", minimalJNI.XRV_SHUTTINGDOWN_get());
  public final static XsResultValue XRV_GNSSCONFIGURATIONERROR = new XsResultValue("XRV_GNSSCONFIGURATIONERROR", minimalJNI.XRV_GNSSCONFIGURATIONERROR_get());
  public final static XsResultValue XRV_GNSSCOMMTIMEOUT = new XsResultValue("XRV_GNSSCOMMTIMEOUT", minimalJNI.XRV_GNSSCOMMTIMEOUT_get());
  public final static XsResultValue XRV_GNSSERROR = new XsResultValue("XRV_GNSSERROR", minimalJNI.XRV_GNSSERROR_get());
  public final static XsResultValue XRV_DEVICE_NOT_CALIBRATED = new XsResultValue("XRV_DEVICE_NOT_CALIBRATED", minimalJNI.XRV_DEVICE_NOT_CALIBRATED_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static XsResultValue swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + XsResultValue.class + " with value " + swigValue);
  }

  private XsResultValue(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private XsResultValue(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private XsResultValue(String swigName, XsResultValue swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static XsResultValue[] swigValues = { XRV_OK, XRV_NOBUS, XRV_BUSNOTREADY, XRV_INVALIDPERIOD, XRV_INVALIDMSG, XRV_INITBUSFAIL1, XRV_INITBUSFAIL2, XRV_INITBUSFAIL3, XRV_SETBIDFAIL1, XRV_SETBIDFAIL2, XRV_MEASUREMENTFAIL1, XRV_MEASUREMENTFAIL2, XRV_MEASUREMENTFAIL3, XRV_MEASUREMENTFAIL4, XRV_MEASUREMENTFAIL5, XRV_MEASUREMENTFAIL6, XRV_TIMEROVERFLOW, XRV_BAUDRATEINVALID, XRV_INVALIDPARAM, XRV_MEASUREMENTFAIL7, XRV_MEASUREMENTFAIL8, XRV_WIRELESSFAIL, XRV_DEVICEERROR, XRV_DATAOVERFLOW, XRV_BUFFEROVERFLOW, XRV_EXTTRIGGERERROR, XRV_SAMPLESTREAMERROR, XRV_POWER_DIP, XRV_POWER_OVERCURRENT, XRV_OVERHEATING, XRV_BATTERYLOW, XRV_INVALIDFILTERPROFILE, XRV_INVALIDSTOREDSETTINGS, XRV_ACCESSDENIED, XRV_FILEERROR, XRV_OUTPUTCONFIGERROR, XRV_FILE_SYSTEM_CORRUPT, XRV_ERROR, XRV_NOTIMPLEMENTED, XRV_TIMEOUT, XRV_TIMEOUTNODATA, XRV_CHECKSUMFAULT, XRV_OUTOFMEMORY, XRV_NOTFOUND, XRV_UNEXPECTEDMSG, XRV_INVALIDID, XRV_INVALIDOPERATION, XRV_INSUFFICIENTSPACE, XRV_INPUTCANNOTBEOPENED, XRV_OUTPUTCANNOTBEOPENED, XRV_ALREADYOPEN, XRV_ENDOFFILE, XRV_COULDNOTREADSETTINGS, XRV_NODATA, XRV_READONLY, XRV_NULLPTR, XRV_INSUFFICIENTDATA, XRV_BUSY, XRV_INVALIDINSTANCE, XRV_DATACORRUPT, XRV_READINITFAILED, XRV_NOXMFOUND, XRV_DEVICECOUNTZERO, XRV_MTLOCATIONINVALID, XRV_INSUFFICIENTMTS, XRV_INITFUSIONFAILED, XRV_OTHER, XRV_NOFILEOPEN, XRV_NOPORTOPEN, XRV_NOFILEORPORTOPEN, XRV_PORTNOTFOUND, XRV_INITPORTFAILED, XRV_CALIBRATIONFAILED, XRV_CONFIGCHECKFAIL, XRV_ALREADYDONE, XRV_SYNC_SINGLE_SLAVE, XRV_SYNC_SECOND_MASTER, XRV_SYNC_NO_SYNC, XRV_SYNC_NO_MASTER, XRV_SYNC_DATA_MISSING, XRV_VERSION_TOO_LOW, XRV_VERSION_PROBLEM, XRV_ABORTED, XRV_UNSUPPORTED, XRV_PACKETCOUNTERMISSED, XRV_MEASUREMENTFAILED, XRV_STARTRECORDINGFAILED, XRV_STOPRECORDINGFAILED, XRV_RADIO_CHANNEL_IN_USE, XRV_UNEXPECTED_DISCONNECT, XRV_TOO_MANY_CONNECTED_TRACKERS, XRV_GOTOCONFIGFAILED, XRV_OUTOFRANGE, XRV_BACKINRANGE, XRV_EXPECTED_DISCONNECT, XRV_RESTORE_COMMUNICATION_FAILED, XRV_RESTORE_COMMUNICATION_STOPPED, XRV_EXPECTED_CONNECT, XRV_IN_USE, XRV_PERFORMANCE_WARNING, XRV_PERFORMANCE_OK, XRV_SHUTTINGDOWN, XRV_GNSSCONFIGURATIONERROR, XRV_GNSSCOMMTIMEOUT, XRV_GNSSERROR, XRV_DEVICE_NOT_CALIBRATED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

