/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package asdf;

public class XsPortInfoArray {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsPortInfoArray(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsPortInfoArray obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        minimalJNI.delete_XsPortInfoArray(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsPortInfoArray(SWIGTYPE_p_XsSize count, XsPortInfoClass src) {
    this(minimalJNI.new_XsPortInfoArray__SWIG_0(SWIGTYPE_p_XsSize.getCPtr(count), XsPortInfoClass.getCPtr(src), src), true);
  }

  public XsPortInfoArray(SWIGTYPE_p_XsSize count) {
    this(minimalJNI.new_XsPortInfoArray__SWIG_1(SWIGTYPE_p_XsSize.getCPtr(count)), true);
  }

  public XsPortInfoArray() {
    this(minimalJNI.new_XsPortInfoArray__SWIG_2(), true);
  }

  public XsPortInfoArray(XsPortInfoArray other) {
    this(minimalJNI.new_XsPortInfoArray__SWIG_3(XsPortInfoArray.getCPtr(other), other), true);
  }

  public XsPortInfoArray(XsPortInfoClass ref, SWIGTYPE_p_XsSize sz, SWIGTYPE_p_XsDataFlags flags) {
    this(minimalJNI.new_XsPortInfoArray__SWIG_4(XsPortInfoClass.getCPtr(ref), ref, SWIGTYPE_p_XsSize.getCPtr(sz), SWIGTYPE_p_XsDataFlags.getCPtr(flags)), true);
  }

  public void clear() {
    minimalJNI.XsPortInfoArray_clear(swigCPtr, this);
  }

  public boolean opEquals(XsPortInfoArray other) {
    return minimalJNI.XsPortInfoArray_opEquals(swigCPtr, this, XsPortInfoArray.getCPtr(other), other);
  }

  public boolean opUnequals(XsPortInfoArray other) {
    return minimalJNI.XsPortInfoArray_opUnequals(swigCPtr, this, XsPortInfoArray.getCPtr(other), other);
  }

  public void reserve(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_reserve(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public SWIGTYPE_p_XsSize reserved() {
    return new SWIGTYPE_p_XsSize(minimalJNI.XsPortInfoArray_reserved(swigCPtr, this), true);
  }

  public XsArrayDescriptor descriptor() {
    return new XsArrayDescriptor(minimalJNI.XsPortInfoArray_descriptor(swigCPtr, this), false);
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t begin() {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t(minimalJNI.XsPortInfoArray_begin(swigCPtr, this), true);
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t end() {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t(minimalJNI.XsPortInfoArray_end(swigCPtr, this), true);
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t rbegin() {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t(minimalJNI.XsPortInfoArray_rbegin(swigCPtr, this), true);
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t rend() {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t(minimalJNI.XsPortInfoArray_rend(swigCPtr, this), true);
  }

  public XsPortInfoClass opSquareBracket(int index) {
    return new XsPortInfoClass(minimalJNI.XsPortInfoArray_opSquareBracket(swigCPtr, this, index), false);
  }

  public XsPortInfoClass value(SWIGTYPE_p_XsSize index) {
    return new XsPortInfoClass(minimalJNI.XsPortInfoArray_value(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index)), true);
  }

  public XsPortInfoClass first() {
    return new XsPortInfoClass(minimalJNI.XsPortInfoArray_first(swigCPtr, this), true);
  }

  public XsPortInfoClass last() {
    return new XsPortInfoClass(minimalJNI.XsPortInfoArray_last(swigCPtr, this), true);
  }

  public XsPortInfoClass at(SWIGTYPE_p_XsSize index) {
    return new XsPortInfoClass(minimalJNI.XsPortInfoArray_at(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index)), false);
  }

  public void insert(XsPortInfoClass item, SWIGTYPE_p_XsSize index) {
    minimalJNI.XsPortInfoArray_insert__SWIG_0(swigCPtr, this, XsPortInfoClass.getCPtr(item), item, SWIGTYPE_p_XsSize.getCPtr(index));
  }

  public void insert(XsPortInfoClass items, SWIGTYPE_p_XsSize index, SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_insert__SWIG_1(swigCPtr, this, XsPortInfoClass.getCPtr(items), items, SWIGTYPE_p_XsSize.getCPtr(index), SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void insert(XsPortInfoClass item, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t it) {
    minimalJNI.XsPortInfoArray_insert__SWIG_2(swigCPtr, this, XsPortInfoClass.getCPtr(item), item, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t.getCPtr(it));
  }

  public void insert(XsPortInfoClass item, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t it) {
    minimalJNI.XsPortInfoArray_insert__SWIG_3(swigCPtr, this, XsPortInfoClass.getCPtr(item), item, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t.getCPtr(it));
  }

  public void insert(XsPortInfoClass items, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t it, SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_insert__SWIG_4(swigCPtr, this, XsPortInfoClass.getCPtr(items), items, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT_1_t.getCPtr(it), SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void insert(XsPortInfoClass items, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t it, SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_insert__SWIG_5(swigCPtr, this, XsPortInfoClass.getCPtr(items), items, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplConstT__1_t.getCPtr(it), SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void push_back(XsPortInfoClass item) {
    minimalJNI.XsPortInfoArray_push_back(swigCPtr, this, XsPortInfoClass.getCPtr(item), item);
  }

  public void pop_back(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_pop_back__SWIG_0(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void pop_back() {
    minimalJNI.XsPortInfoArray_pop_back__SWIG_1(swigCPtr, this);
  }

  public void push_front(XsPortInfoClass item) {
    minimalJNI.XsPortInfoArray_push_front(swigCPtr, this, XsPortInfoClass.getCPtr(item), item);
  }

  public void pop_front(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_pop_front__SWIG_0(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void pop_front() {
    minimalJNI.XsPortInfoArray_pop_front__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_XsSize size() {
    return new SWIGTYPE_p_XsSize(minimalJNI.XsPortInfoArray_size(swigCPtr, this), true);
  }

  public void erase(SWIGTYPE_p_XsSize index, SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_erase__SWIG_0(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index), SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void erase(SWIGTYPE_p_XsSize index) {
    minimalJNI.XsPortInfoArray_erase__SWIG_1(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(index));
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT_1_t erase(SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT_1_t it) {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT_1_t(minimalJNI.XsPortInfoArray_erase__SWIG_2(swigCPtr, this, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT_1_t.getCPtr(it)), true);
  }

  public SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT__1_t erase(SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT__1_t it) {
    return new SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT__1_t(minimalJNI.XsPortInfoArray_erase__SWIG_3(swigCPtr, this, SWIGTYPE_p_XsArrayImplT_XsPortInfo_g_xsPortInfoArrayDescriptor_XsPortInfoArray_t__IteratorImplT__1_t.getCPtr(it)), true);
  }

  public void assign(SWIGTYPE_p_XsSize count, XsPortInfoClass src) {
    minimalJNI.XsPortInfoArray_assign(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count), XsPortInfoClass.getCPtr(src), src);
  }

  public void resize(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_resize(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void setSize(SWIGTYPE_p_XsSize count) {
    minimalJNI.XsPortInfoArray_setSize(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(count));
  }

  public void append(XsPortInfoArray other) {
    minimalJNI.XsPortInfoArray_append(swigCPtr, this, XsPortInfoArray.getCPtr(other), other);
  }

  public XsPortInfoArray opSet(XsPortInfoArray other) {
    return new XsPortInfoArray(minimalJNI.XsPortInfoArray_opSet(swigCPtr, this, XsPortInfoArray.getCPtr(other), other), false);
  }

  public boolean empty() {
    return minimalJNI.XsPortInfoArray_empty(swigCPtr, this);
  }

  public XsPortInfoArrayClass inherited() {
    return new XsPortInfoArrayClass(minimalJNI.XsPortInfoArray_inherited(swigCPtr, this), false);
  }

  public void swap(XsPortInfoArray other) {
    minimalJNI.XsPortInfoArray_swap__SWIG_0(swigCPtr, this, XsPortInfoArray.getCPtr(other), other);
  }

  public void swap(SWIGTYPE_p_XsSize a, SWIGTYPE_p_XsSize b) {
    minimalJNI.XsPortInfoArray_swap__SWIG_1(swigCPtr, this, SWIGTYPE_p_XsSize.getCPtr(a), SWIGTYPE_p_XsSize.getCPtr(b));
  }

  public XsPortInfoArrayClass opLeftShift(XsPortInfoClass item) {
    return new XsPortInfoArrayClass(minimalJNI.XsPortInfoArray_opLeftShift(swigCPtr, this, XsPortInfoClass.getCPtr(item), item), false);
  }

  public SWIGTYPE_p_ptrdiff_t find(XsPortInfoClass needle) {
    return new SWIGTYPE_p_ptrdiff_t(minimalJNI.XsPortInfoArray_find(swigCPtr, this, XsPortInfoClass.getCPtr(needle), needle), true);
  }

  public void removeDuplicates() {
    minimalJNI.XsPortInfoArray_removeDuplicates(swigCPtr, this);
  }

  public void removeDuplicatesPredicate(SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int predicate) {
    minimalJNI.XsPortInfoArray_removeDuplicatesPredicate(swigCPtr, this, SWIGTYPE_p_f_p_q_const__void_p_q_const__void__int.getCPtr(predicate));
  }

  public void sort() {
    minimalJNI.XsPortInfoArray_sort(swigCPtr, this);
  }

  public void reverse() {
    minimalJNI.XsPortInfoArray_reverse(swigCPtr, this);
  }

}
