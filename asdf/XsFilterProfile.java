/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package asdf;

public class XsFilterProfile {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected XsFilterProfile(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XsFilterProfile obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        minimalJNI.delete_XsFilterProfile(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public XsFilterProfile(short type_, short version_, String kind_, String label_, char filterType_, short filterMajor_, short filterMinor_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_0(type_, version_, kind_, label_, filterType_, filterMajor_, filterMinor_), true);
  }

  public XsFilterProfile(short type_, short version_, String kind_, String label_, char filterType_, short filterMajor_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_1(type_, version_, kind_, label_, filterType_, filterMajor_), true);
  }

  public XsFilterProfile(short type_, short version_, String kind_, String label_, char filterType_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_2(type_, version_, kind_, label_, filterType_), true);
  }

  public XsFilterProfile(short type_, short version_, String kind_, String label_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_3(type_, version_, kind_, label_), true);
  }

  public XsFilterProfile(short type_, short version_, String kind_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_4(type_, version_, kind_), true);
  }

  public XsFilterProfile(short type_, short version_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_5(type_, version_), true);
  }

  public XsFilterProfile(short type_) {
    this(minimalJNI.new_XsFilterProfile__SWIG_6(type_), true);
  }

  public XsFilterProfile() {
    this(minimalJNI.new_XsFilterProfile__SWIG_7(), true);
  }

  public XsFilterProfile(XsFilterProfile other) {
    this(minimalJNI.new_XsFilterProfile__SWIG_8(XsFilterProfile.getCPtr(other), other), true);
  }

  public boolean empty() {
    return minimalJNI.XsFilterProfile_empty(swigCPtr, this);
  }

  public XsStringClass toString() {
    return new XsStringClass(minimalJNI.XsFilterProfile_toString(swigCPtr, this), true);
  }

  public short type() {
    return minimalJNI.XsFilterProfile_type(swigCPtr, this);
  }

  public short version() {
    return minimalJNI.XsFilterProfile_version(swigCPtr, this);
  }

  public String label() {
    return minimalJNI.XsFilterProfile_label(swigCPtr, this);
  }

  public String kind() {
    return minimalJNI.XsFilterProfile_kind(swigCPtr, this);
  }

  public char filterType() {
    return minimalJNI.XsFilterProfile_filterType(swigCPtr, this);
  }

  public short filterMajor() {
    return minimalJNI.XsFilterProfile_filterMajor(swigCPtr, this);
  }

  public short filterMinor() {
    return minimalJNI.XsFilterProfile_filterMinor(swigCPtr, this);
  }

  public void setType(short type_) {
    minimalJNI.XsFilterProfile_setType(swigCPtr, this, type_);
  }

  public void setVersion(short version_) {
    minimalJNI.XsFilterProfile_setVersion(swigCPtr, this, version_);
  }

  public void setLabel(String label_) {
    minimalJNI.XsFilterProfile_setLabel(swigCPtr, this, label_);
  }

  public void setKind(String kind_) {
    minimalJNI.XsFilterProfile_setKind(swigCPtr, this, kind_);
  }

  public void setFilterType(char filterType_) {
    minimalJNI.XsFilterProfile_setFilterType(swigCPtr, this, filterType_);
  }

  public void setFilterVersion(short major_, short minor_) {
    minimalJNI.XsFilterProfile_setFilterVersion(swigCPtr, this, major_, minor_);
  }

  public void swap(XsFilterProfile other) {
    minimalJNI.XsFilterProfile_swap(swigCPtr, this, XsFilterProfile.getCPtr(other), other);
  }

  public boolean opEquals(XsFilterProfile other) {
    return minimalJNI.XsFilterProfile_opEquals(swigCPtr, this, XsFilterProfile.getCPtr(other), other);
  }

}
